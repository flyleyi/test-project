{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/demo/views/demo/TestStore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/demo/views/demo/TestStore.vue","mtime":1627979214293},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycywgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnQWJvdXQnLA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKHsNCiAgICAgIGNvdW50OiAnY291bnQnLA0KICAgICAgbmFtZXMyOiBzdGF0ZSA9PiBzdGF0ZS5hLm5hbWVzDQogICAgfSksDQogICAgLi4ubWFwR2V0dGVycyh7DQogICAgICBuYW1lczogJ25hbWVzRm9ybWF0Jw0KICAgIH0pDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAuLi5tYXBBY3Rpb25zKHsNCiAgICAgIGFkZE5hbWU6ICdhZGROYW1lJw0KICAgIH0pLA0KICAgIG9uQ29tbWl0U3RvcmUoKSB7DQogICAgICB0aGlzLmFkZE5hbWUoJ3hzaHNoYScpOw0KICAgICAgLy8gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2FkZE5hbWUnLCAneHh4eCcpOw0KICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["TestStore.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestStore.vue","sourceRoot":"src/pages/demo/views/demo","sourcesContent":["<template>\r\n  <div class=\"about\">\r\n    about page\r\n    <div>{{ names + count + names2 }}</div>\r\n    <div @click=\"onCommitStore\">edit</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters, mapActions } from 'vuex';\r\nexport default {\r\n  name: 'About',\r\n  computed: {\r\n    ...mapState({\r\n      count: 'count',\r\n      names2: state => state.a.names\r\n    }),\r\n    ...mapGetters({\r\n      names: 'namesFormat'\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      addName: 'addName'\r\n    }),\r\n    onCommitStore() {\r\n      this.addName('xshsha');\r\n      // this.$store.dispatch('addName', 'xxxx');\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}