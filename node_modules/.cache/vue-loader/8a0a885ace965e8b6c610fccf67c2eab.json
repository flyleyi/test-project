{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/views/system/User/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/views/system/User/index.vue","mtime":1645178321195},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/sims/views/system/User","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 列表 -->\n    <b-table\n      ref=\"bTable\"\n      loading\n      :form-items=\"formItems\"\n      :headers=\"headers\"\n      :show-column=\"false\"\n      :ajax-get-data=\"fetchListData\"\n      :toolbars=\"toolbars\"\n      :page-sizes=\"[10, 50, 100]\"\n    ></b-table>\n    <!-- 编辑 -->\n    <el-dialog\n      title=\"用户设置\"\n      width=\"640px\"\n      center\n      :visible=\"dialogVisible\"\n      :show-close=\"false\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <c-dynamic-form\n        v-if=\"dialogVisible\"\n        v-loading=\"updateLoading\"\n        element-loading-text=\"更新数据中\"\n        ref=\"cDynamicForm\"\n        :form-data=\"userSettingData\"\n        :form-items=\"userSettingFormItems\"\n        :form-attrs=\"userSettingFormAttrs\"\n        @change-model=\"model => (userSettingData = model)\"\n      >\n        <template slot=\"custom|classCodes\" slot-scope=\"{ data }\">\n          <class-auth\n            v-model=\"data.classCodes\"\n            :custom-form-items=\"customFormItems\"\n            :other-params=\"{\n              departCodes: userSettingData.departCodes\n            }\"\n            :limit=\"1000\"\n          ></class-auth>\n        </template>\n      </c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button :loading=\"confirmLoading\" @click=\"dialogVisible = false\">\n          取消\n        </el-button>\n        <el-button :loading=\"confirmLoading\" type=\"primary\" @click=\"onConfirm\">\n          保存\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { Button, Dialog } from 'element-ui';\nimport {\n  queryUserList,\n  saveUserSetting,\n  queryOrgSelfList,\n  queryDepartList,\n  queryOrgSelfByLevel,\n  queryAllClassByDepartCodes\n} from '../../../api/system/user';\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm';\nimport ClassAuth from './components/ClassAuth';\nimport { queryDepartInfoList } from '../../../api/division';\nimport axios from '@/plugins/axios';\nimport { queryConjunctiveList } from '../../../plugins/common/utils';\nimport { queryRelevanceInfoList } from '../../../../h5/api/sims/enrollFill';\nimport { getUrl } from '@/plugins/common/api';\nimport utils from '@/plugins/common/utils';\nimport { queryDepartByCodeList } from '../../../api/division';\n\nexport default {\n  name: 'UserManage',\n  components: {\n    [Dialog.name]: Dialog,\n    [Button.name]: Button,\n    BTable,\n    CDynamicForm,\n    ClassAuth\n  },\n  data() {\n    const self = this;\n    const arrayFormatter = (row, column, value) => value.join(',');\n    return {\n      // 模态框显示\n      dialogVisible: false,\n      // 表单项配置\n      formItems: [\n        {\n          type: 'input',\n          label: '用户姓名',\n          prop: 'nameLike',\n          attrs: {\n            maxlength: 30\n          }\n        },\n        {\n          type: 'input',\n          label: '用户账号',\n          prop: 'staffCodeLike',\n          attrs: {\n            maxlength: 30\n          }\n        },\n        {\n          type: 'select',\n          label: '自建机构',\n          prop: 'organizationSelfCode',\n          labelKey: 'organizationName',\n          valueKey: 'organizationCode',\n          attrs: {\n            filterable: true\n          },\n          ajax() {\n            return queryOrgSelfList();\n          }\n        },\n        {\n          type: 'select',\n          label: '用户状态',\n          prop: 'staffStatus',\n          options: [\n            {\n              label: '启用',\n              value: true\n            },\n            {\n              label: '禁用',\n              value: false\n            }\n          ]\n        },\n        {\n          type: 'select',\n          label: '角色名称',\n          attrs: {\n            filterable: true\n          },\n          prop: 'roleId',\n          labelKey: 'roleName',\n          valueKey: 'roleId',\n          ajax() {\n            return axios(\n              {\n                method: 'GET',\n                url: '/usergw/admin/common/pageList/301',\n                params: {\n                  pageSize: 9999999,\n                  pageNum: 1\n                }\n              },\n              'simsbff'\n            ).then(({ data }) => data);\n          }\n        },\n        {\n          type: 'select',\n          label: '用户类别',\n          prop: 'staffType',\n          options: this.$D('staffType')\n        }\n      ],\n      // 列表配置\n      headers: [\n        {\n          label: '用户账号',\n          prop: 'staffCode'\n        },\n        {\n          label: '用户姓名',\n          prop: 'staffName'\n        },\n        {\n          label: '性别',\n          prop: 'gender'\n        },\n        {\n          label: '邮箱',\n          prop: 'email'\n        },\n        {\n          label: '手机号码',\n          prop: 'telephone'\n        },\n        {\n          label: '所属机构',\n          prop: 'organizationName'\n        },\n        {\n          label: '自建机构',\n          prop: 'organizationSelfName'\n        },\n        {\n          label: '学部权限',\n          prop: 'deptNameAuthList',\n          formatter: arrayFormatter\n        },\n        {\n          label: '班级权限',\n          prop: 'classNameAuthList',\n          formatter: arrayFormatter\n        },\n        {\n          label: '关联角色',\n          prop: 'roleNameList',\n          formatter: arrayFormatter\n        },\n        {\n          label: '用户类别',\n          prop: 'staffType',\n          formatter(row, column, value) {\n            return self.$D('staffType', value);\n          }\n        },\n        {\n          label: '状态',\n          prop: 'staffStatus',\n          formatter(row, column, value) {\n            return value === true ? '启用' : '禁用';\n          }\n        },\n        {\n          label: '操作',\n          colType: 'btns',\n          fixed: 'right',\n          btns: [\n            {\n              label: '用户设置',\n              size: 'mini',\n              type: 'text',\n              click: this.onClickUserSetting\n            }\n          ]\n        }\n      ],\n      // 用户设置数据\n      userSettingData: {\n        gljs: [],\n        departCodes: [],\n        classCodes: [],\n        relationRoles: []\n      },\n      // 用户设置表单项\n      userSettingFormItems: [\n        {\n          type: 'input',\n          label: '用户账户',\n          prop: 'staffCode',\n          attrs: {\n            disabled: true\n          },\n          rules: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '用户账号未填写'\n            }\n          ]\n        },\n        {\n          type: 'input',\n          label: '用户姓名',\n          prop: 'staffName',\n          attrs: {\n            disabled: true\n          },\n          rules: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '用户姓名未填写'\n            }\n          ]\n        },\n        {\n          type: 'input',\n          label: '所属机构',\n          prop: 'organizationName',\n          attrs: {\n            disabled: true\n          },\n          rules: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '所属机构未填写'\n            }\n          ]\n        },\n        {\n          type: 'select',\n          label: '自建机构',\n          prop: 'organizationSelfCode',\n          labelKey: 'organizationName',\n          valueKey: 'organizationCode',\n          rules: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '自建机构未填写'\n            }\n          ],\n          ajax(model) {\n            return queryOrgSelfList({}, true);\n          }\n        },\n        {\n          type: 'select',\n          label: '学部权限',\n          prop: 'departCodes',\n          labelProp: 'departNames',\n          labelKey: 'departName',\n          valueKey: 'departCode',\n          rules: [\n            {\n              type: 'array',\n              required: true,\n              trigger: 'change',\n              message: '学部权限未填写'\n            }\n          ],\n          attrs: {\n            multiple: true,\n            filterable: true\n          },\n          ajax() {\n            return queryDepartInfoList({\n              pageSize: 9999999,\n              pageNum: 1\n            }).then(({ data = {} }) => {\n              let records = data.records;\n              return Array.isArray(records) ? records : [];\n            });\n            // return queryDepartList().then(({ data }) => {\n            //   return data;\n            // });\n          },\n          events: {\n            change: this.changeDepartCodes\n          }\n        },\n        {\n          type: 'custom',\n          label: '班级权限',\n          prop: 'classCodes'\n        },\n        {\n          type: 'select',\n          label: '关联角色',\n          prop: 'relationRoles',\n          labelKey: 'roleName',\n          valueKey: 'roleId',\n          attrs: {\n            multiple: true\n          },\n          ajax() {\n            return axios(\n              {\n                method: 'GET',\n                url: '/usergw/admin/common/pageList/301',\n                params: {\n                  pageSize: 9999999,\n                  pageNum: 1\n                }\n              },\n              'simsbff'\n            ).then(({ data }) => {\n              if (!data || !Array.isArray(data)) return [];\n              data.forEach(item => {\n                item.roleId = '' + item.roleId;\n              });\n              return data;\n            });\n          },\n          rules: [\n            {\n              type: 'array',\n              required: true,\n              trigger: 'change',\n              message: '关联角色未填写'\n            }\n          ]\n        },\n        {\n          type: 'select',\n          label: '状态',\n          prop: 'status',\n          attrs: {\n            disabled: true\n          },\n          rules: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '状态未填写'\n            }\n          ],\n          options: [\n            {\n              label: '启用',\n              value: true\n            },\n            {\n              label: '禁用',\n              value: false\n            }\n          ]\n        }\n      ],\n      // 用户设置表单的属性\n      userSettingFormAttrs: {\n        'label-width': '100px'\n      },\n      // 提交中\n      confirmLoading: false,\n      // 工具栏\n      toolbars: [\n        // {\n        //   label: '导出',\n        //   click: this.onClickExport,\n        //   size: 'mini',\n        //   type: 'primary'\n        // }\n      ],\n      // 更新数据\n      updateLoading: false\n    };\n  },\n  computed: {\n    /**\n     * 自定义弹窗表单项\n     */\n    customFormItems() {\n      let self = this;\n      return [\n        {\n          type: 'select',\n          label: '学年',\n          prop: 'signYearType',\n          options: this.$D('XNM')\n        },\n        {\n          type: 'select',\n          label: '学部',\n          prop: 'departCode',\n          labelKey: 'departName',\n          valueKey: 'departCode',\n          ajax() {\n            let { departCodes } = self.userSettingData;\n            // if (!Array.isArray(departCodes)) departCodes = [];\n            // return departCodes.map((item, index) => ({\n            //   departCode: item,\n            //   departName: departNames[index]\n            // }));\n            return queryDepartByCodeList(departCodes).then(({ data }) => data);\n          }\n        },\n        {\n          type: 'select',\n          label: '年级',\n          prop: 'gradeCode',\n          parentProp: 'departCode',\n          ajax: model =>\n            queryConjunctiveList({\n              signYearType: model.signYearType, // 学年\n              childCodeType: 4, //当前查询类型 1-校区;2-学校;3-学部;4-年级;5-班级;6-班级类型\n              codeType: 3, //上级父类型 1-校区;2-学校;3-学部;4-年级;5-班级;6-班级类型\n              code: model.departCode\n            })\n        },\n        {\n          type: 'select',\n          label: '班型',\n          prop: 'classTypeCode',\n          labelKey: 'classTypeName',\n          valueKey: 'classTypeCode',\n          parentProp: 'gradeCode',\n          ajax: model =>\n            queryRelevanceInfoList({\n              signYearType: model.signYearType,\n              departCode: model.departCode,\n              gradeCode: model.gradeCode\n            })\n        }\n      ];\n    }\n  },\n  methods: {\n    /**\n     * TODO：获取数据\n     */\n    fetchListData: queryUserList,\n    /**\n     * TODO：设置用户\n     */\n    onClickUserSetting(row) {\n      let {\n        organizationSelfCode, // 自建组织机构\n        deptDataAuthIds, // 学部权限code集合用逗号分割\n        classDataAuthIds, // 班级权限code集合用逗号分割\n        roleIds, // 授权角色id集合用逗号分割\n        staffStatus, // 员工状态\n        staffCode, // 员工工号\n        staffName, // 员工姓名\n        organizationName, // 组织机构\n        id, // 用户id\n        classIdTextMap,\n        detpIdTextMap,\n        roleIdTextMap\n      } = row;\n      // 处理数据\n      this.userSettingData = {\n        departCodes: detpIdTextMap.map(item => item.deptCode), // 授权学部的departCode集合\n        organizationSelfCode: organizationSelfCode, // 关联结构\n        classCodes: classIdTextMap.map(item => item.classCode), // 授权班级的的classCode集合\n        relationRoles: roleIdTextMap.map(item => item.roleId), // 关联角色的roleId集合\n        status: staffStatus, // 员工状态 启用传0， 不启用传1\n        staffCode, // 被赋予权限的用户\n        staffName, // 员工姓名\n        userId: id, // 登陆用户唯一标识\n        organizationName\n      };\n      this.dialogVisible = true;\n      this.$nextTick().then(() => {\n        this.$refs.cDynamicForm.clearValidate();\n      });\n    },\n    /**\n     * TODO：提交\n     */\n    onConfirm() {\n      this.$refs.cDynamicForm.validate().then(() => {\n        this.confirmLoading = true;\n        // const {\n        //   classCodes, // 授权班级的的classCode集合\n        //   departCodes, // 授权学部的departCode集合\n        //   organizationSelfCode, // 关联结构\n        //   relationRoles, // 关联角色的roleId集合\n        //   staffCode, // 被赋予权限的用户\n        //   status, // 员工状态 启用传0， 不启用传1\n        //   userId // 登陆用户唯一标识\n        // } = this.userSettingData;\n        saveUserSetting({\n          ...this.userSettingData,\n          classCodes: this.$refs.cDynamicForm.model.classCodes\n        })\n          .then(() => {\n            this.dialogVisible = false;\n            this.$message.success('操作成功');\n            this.$refs.bTable.onRefreshTable();\n          })\n          .finally(() => {\n            this.confirmLoading = false;\n          });\n      });\n    },\n    /**\n     * TODO：导出\n     */\n    onClickExport() {\n      utils.download(\n        `/commonData/staffInfo/manage/export?queryCondition=${encodeURIComponent(\n          JSON.stringify(this.$refs.bTable.getQueryParam())\n        )}`,\n        {},\n        { method: 'POST' },\n        getUrl('simsbff')\n      );\n    },\n    /**\n     * 改变学部code集合\n     */\n    changeDepartCodes(departCodes) {\n      const { classCodes } = this.userSettingData;\n      // 无选择班级\n      if (!classCodes || (classCodes && !classCodes.length)) return false;\n      departCodes = Array.isArray(departCodes) ? departCodes : [];\n      this.updateLoading = true;\n      // 获取学部列表过滤班级列表\n      queryAllClassByDepartCodes({\n        pageSize: 999999,\n        pageNum: 1,\n        departCodes: departCodes.join(',')\n      })\n        .then(({ data }) => {\n          data = data || {};\n          const records = Array.isArray(data.records) ? data.records : [];\n          const map = {};\n          records.forEach(item => {\n            map[item.classCode] = true;\n          });\n          this.userSettingData.classCodes = classCodes.filter(\n            item => map[item]\n          );\n        })\n        .finally(() => {\n          this.updateLoading = false;\n        });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ .el-select {\n  width: 100%;\n}\n</style>\n"]}]}