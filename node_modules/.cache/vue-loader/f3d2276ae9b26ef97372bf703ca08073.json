{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool-admin/views/taskList/index.vue?vue&type=style&index=0&id=229ee4a8&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool-admin/views/taskList/index.vue","mtime":1645176309692},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoJy4uLy4uL2Fzc2V0cy9sZXNzL2dsb2JhbC92YXJpYWJsZS5sZXNzJyk7Ci9kZWVwLyAuZWwtdGFibGUgdGQgewogIHBhZGRpbmc6IDZweCAwOwp9Ci5hcHAtY29udGFpbmVyIHsKICAuZW1wdHkgewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgbGVmdDogMDsKICAgIHRvcDogNTBweDsKICAgIHJpZ2h0OiAwOwogICAgYm90dG9tOiAwOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40NSk7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICB9CiAgLmJ0bi1ibHVlIHsKICAgIHdpZHRoOiA4OHB4OwogICAgaGVpZ2h0OiAzMnB4OwogICAgbGluZS1oZWlnaHQ6IDMycHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgIzAwNzZmNjsKICAgIGNvbG9yOiAjMDA3NmY2OwogICAgcGFkZGluZzogMDsKICAgIDpob3ZlciB7CiAgICAgIGNvbG9yOiAjMDA3NmY2OwogICAgfQogIH0KICAuYnRuLXJlZCB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB3aWR0aDogODhweDsKICAgIGhlaWdodDogMzJweDsKICAgIGxpbmUtaGVpZ2h0OiAzMnB4OwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyLXJhZGl1czogNHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBjb2xvcjogI2ZmNDYzNTsKICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/bonus-tool-admin/views/taskList","sourcesContent":["<!-- 任务列表 -->\n<template>\n  <div class=\"app-container\">\n    <div class=\"common-title\">任务列表</div>\n    <div class=\"common-container\">\n      <!-- 头部 -->\n      <div class=\"common-header\">\n        <div class=\"common-header-left\">\n          <el-button\n            type=\"primary\"\n            size=\"medium\"\n            :loading=\"loading\"\n            @click=\"onClickNewTask\"\n          >\n            新增任务\n          </el-button>\n        </div>\n        <div class=\"common-header-right\"></div>\n      </div>\n      <div v-if=\"tableData.length > 0\">\n        <c-table\n          v-loading=\"loading\"\n          :headers=\"headers\"\n          :data=\"tableData\"\n          border\n        >\n          <template slot=\"column|time\" slot-scope=\"{ row }\">\n            {{ row.createTime | formatterTime }}\n          </template>\n          <template slot=\"column|link\" slot-scope=\"{ row }\">\n            <el-link type=\"primary\" @click=\"onJump(row)\">{{\n              row.taskName\n            }}</el-link>\n          </template>\n          <template slot=\"column|btns\" slot-scope=\"{ row }\">\n            <el-button\n              class=\"btn-blue\"\n              v-if=\"row.status === '0'\"\n              type=\"primary\"\n              plain\n              @click=\"onCompelete(row)\"\n              >办结</el-button\n            >\n            <span v-if=\"row.status === '1'\" class=\"btn-red\">已办结</span>\n          </template>\n        </c-table>\n      </div>\n      <div v-else class=\"empty\">\n        <img\n          class=\"empty-task\"\n          src=\"../../assets/images/empty.png\"\n          alt=\"\"\n          srcset=\"\"\n        />\n        <span>暂无数据~</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Link, Button } from 'element-ui';\nimport CTable from '@/components/common/CTable';\nimport {\n  manageGetTaskList,\n  completeTask,\n  isHaveTaskName\n} from '../../api/task';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  neme: 'TaskList',\n  components: {\n    [Link.name]: Link,\n    [Button.name]: Button,\n    CTable\n  },\n  filters: {\n    formatterTime(val) {\n      if (!val) return '-';\n      return val.split('T')[0];\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      headers: [\n        {\n          label: '序号',\n          type: 'index',\n          width: 80\n        },\n        {\n          label: '任务名称',\n          prop: 'taskName',\n          colType: 'column',\n          slotName: 'link'\n        },\n        {\n          label: '提交时间',\n          prop: 'createTime',\n          colType: 'column',\n          slotName: 'time'\n        },\n        {\n          label: '进程',\n          colType: 'column',\n          slotName: 'btns',\n          align: 'center',\n          prop: 'name',\n          btns: [\n            {\n              label: '办结',\n              size: 'small',\n              type: 'text',\n              click: (row, rowIndex, btnIndex) => {\n                console.log(row, rowIndex, btnIndex);\n              }\n            },\n            {\n              label: '已办结',\n              size: 'small',\n              type: 'text',\n              hidden: true\n            }\n          ]\n        }\n      ],\n      loading: true // 列表是否加载中\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['staffName'])\n  },\n  //监控data中的数据变化\n  watch: {},\n\n  methods: {\n    /**\n     * 获取任务列表\n     */\n    manageGetTaskList() {\n      manageGetTaskList()\n        .then(({ data }) => {\n          this.tableData = data;\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    /**\n     * 办结\n     */\n    onCompelete(row) {\n      if (row.taskName) {\n        this.$confirm(\n          '确定办结该任务？<br>办结后未提交学校单位将无法提交',\n          '提醒',\n          {\n            confirmButtonText: '确认',\n            cancelButtonText: '取消',\n            center: true,\n            showClose: false,\n            dangerouslyUseHTMLString: true\n          }\n        ).then(() => {\n          completeTask({ taskName: row.taskName }).then(() => {\n            this.manageGetTaskList();\n            this.$message({\n              type: 'success',\n              message: '操作成功!'\n            });\n          });\n        });\n      } else {\n        this.$message({\n          message: '任务名称不存在，请联系管理员',\n          type: 'warning'\n        });\n      }\n    },\n    /**\n     * 新增任务\n     */\n    onClickNewTask() {\n      console.log('add');\n      this.$prompt('', '新建任务', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        inputPattern: /^.{1,20}$/,\n        inputErrorMessage: '任务名称需在1-20位',\n        inputPlaceholder: '请输入任务名称',\n        center: true,\n        showClose: false\n      }).then(({ value }) => {\n        isHaveTaskName({ taskName: value }).then(({ data }) => {\n          // data:true用户名存在,不可新增\n          // data:false用户名不存在,可新增\n          if (data) {\n            this.$message({\n              message: '任务名称已存在，请重新填写',\n              type: 'warning'\n            });\n          } else {\n            this.$router.push({\n              path: '/new-task/index',\n              query: {\n                taskName: value\n              }\n            });\n          }\n        });\n      });\n    },\n    /**\n     * 跳转到任务详情\n     */\n    onJump(row) {\n      if (row.status === '0') {\n        // 未办结\n        this.$router.push({\n          path: '/task-detial/not-complete',\n          query: {\n            taskName: row.taskName\n          }\n        });\n      } else if (row.status === '1') {\n        // 已办结\n        this.$router.push({\n          path: '/task-detial/complete',\n          query: {\n            taskName: row.taskName\n          }\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.manageGetTaskList();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {},\n  beforeDestroy() {},\n  destroyed() {},\n  //如果页面有keep-alive缓存功能，这个函数会触发\n  activated() {}\n};\n</script>\n<style lang=\"less\" scoped>\n@import url('../../assets/less/global/variable.less');\n/deep/ .el-table td {\n  padding: 6px 0;\n}\n.app-container {\n  .empty {\n    position: absolute;\n    left: 0;\n    top: 50px;\n    right: 0;\n    bottom: 0;\n    font-size: 14px;\n    color: rgba(0, 0, 0, 0.45);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  .btn-blue {\n    width: 88px;\n    height: 32px;\n    line-height: 32px;\n    text-align: center;\n    background: #ffffff;\n    border-radius: 4px;\n    border: 1px solid #0076f6;\n    color: #0076f6;\n    padding: 0;\n    :hover {\n      color: #0076f6;\n    }\n  }\n  .btn-red {\n    display: inline-block;\n    width: 88px;\n    height: 32px;\n    line-height: 32px;\n    text-align: center;\n    border-radius: 4px;\n    border: 1px solid transparent;\n    font-size: 12px;\n    color: #ff4635;\n  }\n}\n</style>\n"]}]}