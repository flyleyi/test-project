{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/QuestList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/QuestList.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["QuestList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"QuestList.vue","sourceRoot":"src/pages/school-book/views/questManage","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"问题管理暂无数据\"\n      :headers=\"headers\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"ajaxGetData\"\n      @reset-form=\"resetForm\"\n      :pageLimit=\"10\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :showRefresh=\"false\"\n    >\n      <template slot=\"column|questionType\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click=\"jumpType\">{{\n          row.questionType\n        }}</span>\n      </template>\n      <template slot=\"column|answerCount\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click=\"jumpAnswer(row)\"\n          >{{ row.answerCount }}条回复</span\n        >\n      </template>\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineQuest(row)\"\n            v-auth=\"['quest-examine']\"\n            >审核</el-button\n          >\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteQuest(row, 'delete')\"\n            v-auth=\"['quest-delete']\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"'审核'\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"dialogForm.visible = false\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport {\n  getQuestionList,\n  auditQuestStatus,\n  deleteQuest,\n  findQuesType\n} from '../../api/question';\nimport { getIdsArr } from '../../plugins/common/utils';\nexport default {\n  name: 'QuestList',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n  data() {\n    return {\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n        },\n        {\n          label: '问题编号',\n          prop: 'id'\n        },\n        {\n          label: '问题分类',\n          prop: 'questionType',\n          colType: 'column',\n          slotName: 'questionType'\n        },\n        {\n          label: '问题内容',\n          prop: 'questionTitle',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '回复',\n          prop: 'answerCount',\n          colType: 'column',\n          slotName: 'answerCount'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '编辑时间',\n          prop: 'updateTime'\n        },\n        {\n          label: '审核时间',\n          prop: 'reviewTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          formatter: (row, col, val) => {\n            if (val !== null) {\n              return this.$D('SHZT', val.toString());\n            } else {\n              return '-';\n            }\n          }\n        },\n        {\n          label: '操作',\n          // colType: 'btns',\n          width: '100px',\n          slotName: 'opera',\n          colType: 'column',\n          btns: []\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'select',\n          prop: 'type',\n          label: '问题分类：',\n          ajax: function() {\n            return findQuesType().then(({ data }) => {\n              return data;\n            });\n          },\n          labelKey: 'questionType',\n          valueKey: 'id'\n        },\n        {\n          type: 'input',\n          prop: 'qusContent',\n          label: '问题内容：'\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'updateTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        }\n      ],\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineQuest,\n          hidden: () => !this.$has(['quest-examine'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteQuest,\n          hidden: () => !this.$has(['quest-delete'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '审核结果未填写'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '不通过原因未填写'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '原因未填写'\n            },\n            {\n              trigger: 'blur',\n              max: 15,\n              message: '限制15字以内'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {}\n    };\n  },\n  computed: {\n    // 弹窗表单子项\n    dialogFormItems() {\n      let codeOptions = [];\n      this.$D('SHZT').map(item => {\n        if (item.value != 0) {\n          codeOptions.push(item);\n        }\n      });\n      return [\n        {\n          type: 'select',\n          prop: 'code',\n          label: '审核结果：',\n          options: codeOptions,\n          attrs: {}\n        },\n        {\n          type: 'select',\n          prop: 'nopassKey',\n          label: '不通过原因：',\n          options: this.$D('BTGYY'),\n          hidden(model) {\n            return model.code != 1;\n          },\n          attrs: {}\n        },\n        {\n          type: 'input',\n          prop: 'nopassReason',\n          label: '原因：',\n          hidden(model) {\n            return (\n              !model.code ||\n              model.code == 2 ||\n              !model.nopassKey ||\n              model.nopassKey != 4\n            );\n          },\n          attrs: {\n            maxlength: 15,\n            placeholder: '限制15字以内'\n          }\n        }\n      ];\n    }\n  },\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    //重置表格查询\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(params) {\n      if (params.updateTime) {\n        params.editStartTime = params.updateTime[0];\n        params.editEndTime = params.updateTime[1];\n      }\n      if (params.reviewTime) {\n        params.revStartTime = params.reviewTime[0];\n        params.revEndTime = params.reviewTime[1];\n      }\n      delete params.updateTime;\n      delete params.reviewTime;\n      return getQuestionList({\n        ...params\n      });\n    },\n    /**\n     * 刷新列表\n     */\n    refreshTable() {\n      this.$nextTick(() => {\n        this.$refs.bTable && this.$refs.bTable.onRefreshTable();\n      });\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {\n        ids: '',\n        code: '',\n        noPassReason: '',\n        nopassKey: ''\n      };\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        // 校验成功\n        auditQuestStatus(this.dialogFormData)\n          .then(() => {\n            this.$message.success('操作成功');\n            this.dialogForm.visible = false;\n            this.refreshTable();\n          })\n          .finally(() => {\n            this.dialogForm.loading = false;\n          });\n      });\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个问题');\n        return;\n      }\n      this.dialogFormData.ids = getIdsArr(rows).join(',');\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteQuest(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个问题');\n        return;\n      }\n      this.$confirm('确定要删除当前问题?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteQuest(getIdsArr(rows)).then(() => {\n          this.$message.success('操作成功');\n          this.refreshTable();\n        });\n      });\n    },\n    /**\n     * 跳转至问题分类\n     */\n    jumpType() {\n      this.$router.push({\n        path: '/question/classify-list'\n      });\n    },\n    /**\n     * 跳转至回复\n     */\n    jumpAnswer(row) {\n      this.$router.push({\n        path: '/question/answer-list',\n        query: {\n          id: row.id\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.text-decoration {\n  text-decoration: underline;\n  color: #409eff;\n  cursor: pointer;\n}\n</style>\n"]}]}