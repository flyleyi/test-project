{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-h5/components/echarts/bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-h5/components/echarts/bar.vue","mtime":1645176309817},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAafile":"bar.vue","sourceRoot":"src/pages/score-analysis-h5/components/echarts","sourcesContent":["<!--\n * @Author: wangxu\n * @Date: 2021-09-27 11:36:19\n * @LastEditTime: 2021-10-19 16:38:19\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\mutilwap\\src\\pages\\score-analysis-h5\\components\\echarts\\bar.vue\n-->\n<template>\n  <div ref=\"chartsBox\" :style=\"{ height: height + 'rem' }\"></div>\n</template>\n\n<script>\nexport default {\n  name: 'bar',\n  props: {\n    // 1：年级排名，2：提分直方图\n    type: {\n      type: String,\n      default: '1'\n    },\n    height: {\n      type: String,\n      default: '2'\n    },\n    // 数据\n    chartsConfig: {\n      type: Object,\n      default: () => {}\n    },\n    // 移动端，pc端，展示不同\n    clientType: {\n      type: String,\n      default: 'pc'\n    }\n  },\n  watch: {\n    chartsConfig: {\n      deep: true,\n      handler: 'changeData',\n      immediate: true\n    }\n  },\n  data() {\n    return {\n      chartData: {},\n      chart: null,\n      myselfImg: require('../../assets/images/icons/myself@2x.png'),\n      currentImg: require('../../assets/images/icons/current_score@2x.png'),\n      finalImg: require('../../assets/images/icons/final_score@2x.png')\n    };\n  },\n  mounted() {\n    this.chart = this.$echarts.init(this.$refs.chartsBox);\n    this.initEchartsBox();\n    window.addEventListener('resize', () => {\n      this.chart.resize();\n    });\n    this.$on('hook:destroyed', () => {\n      window.removeEventListener('resize', () => {\n        this.chart.resize();\n      });\n    });\n  },\n  methods: {\n    changeData(newVal) {\n      if (newVal) {\n        this.chartData = newVal;\n        this.initEchartsBox();\n      }\n    },\n    initEchartsBox() {\n      let obj = this.chartData;\n      console.log(obj);\n      let _this = this;\n      // 重新组合数据\n      let seriesData = [];\n      // 移动端，标记集合\n      let markPointData = [];\n      // 当前，和提升后，在x轴的下标值\n      let rateIndex = 0;\n      let newRateIndex = 0;\n      // 图表距顶部、底部距离\n      let gridTop = 50;\n      let gridBottom = 15;\n      // pc端展示\n      if (this.clientType === 'pc') {\n        obj.seriesData.map((item, i) => {\n          let stepMin = (i / 10).toFixed(2);\n          let stepMax = ((i + 1) / 10).toFixed(2);\n          // 当前排名\n          let case1 =\n            obj.courseScoreRate > stepMin && obj.courseScoreRate < stepMax;\n          // 提升后排名\n          let case2 =\n            obj.courseScoreRateNew > stepMin &&\n            obj.courseScoreRateNew < stepMax &&\n            this.type === '2';\n          let opt = {\n            value: item,\n            label: {\n              show: case1 || case2 ? true : false,\n              align: 'left',\n              offset: [-37, 0],\n              position: 'top',\n              verticalAlign: 'bottom',\n              lineHeight: 15,\n              textStyle: {\n                fontSize: 10,\n                color: 'rgba(255, 255, 255, 0.65)'\n              },\n              backgroundColor: 'rgba(0, 0, 0, 0.65)',\n              padding: [5, 5, 5, 5],\n              borderRadius: 3,\n              formatter: params => {\n                // 默认为空\n                let str = '';\n                let str1 =\n                  '目前：\\n' +\n                  '超过年级总体' +\n                  (obj.courseScoreRate * 100).toFixed(1) +\n                  '%';\n                let str2 =\n                  '提升后预计：\\n' +\n                  '超过年级总体' +\n                  (obj.courseScoreRateNew * 100).toFixed(1) +\n                  '%';\n                if (case1) str = str1;\n                if (case2) str = str2;\n                // 目前和预计同框\n                if (case1 && case2) str = str1 + '\\n' + str2;\n                return str;\n              }\n            },\n            labelLine: {\n              show: true,\n              showAbove: true,\n              length2: 45,\n              minTurnAngle: 90,\n              smooth: 1,\n              lineStyle: {\n                color: '#000',\n                width: 0.5,\n                type: 'solid'\n              },\n              opacity: 1\n            }\n          };\n          seriesData.push(opt);\n        });\n      } else {\n        obj.seriesData.map(item => {\n          let opt = {\n            value: item,\n            label: {}\n          };\n          seriesData.push(opt);\n        });\n        // 移动端展示，标记\n        seriesData = obj.seriesData;\n        // 定义的x轴刻度规则\n        let rule = [0, 0.6, 0.7, 0.8, 0.9, 1];\n        rule.map((item, index) => {\n          if (obj.courseScoreRate > 0 && obj.courseScoreRate >= item) {\n            rateIndex = index;\n          }\n          if (obj.courseScoreRateNew > 0 && obj.courseScoreRateNew >= item) {\n            newRateIndex = index;\n          }\n        });\n        if (rateIndex == 5) {\n          rateIndex = 4;\n        }\n        if (newRateIndex == 5) {\n          newRateIndex = 4;\n        }\n        let step = 20;\n        let c = parseInt(obj.yAxisMax / step);\n        let num = 4 * c;\n        // 判断当前是否大于最大值\n        let ca1 = seriesData[rateIndex] + num > obj.yAxisMax;\n        // 判断提升后是否大于最大值\n        let ca2 = seriesData[newRateIndex] + num > obj.yAxisMax;\n        // 重新定义最大刻度\n        let stepN = parseInt(num / step) * step;\n        if (ca1) {\n          obj.yAxisMax = obj.yAxisMax + stepN;\n        }\n        if (ca2) {\n          obj.yAxisMax = obj.yAxisMax + stepN;\n        }\n        // 当前排名，超出最大值，则为最大值\n        let yAxis1 = ca1 ? obj.yAxisMax : seriesData[rateIndex] + num;\n        // 提升后排名，超出最大值，则为最大值\n        let yAxis2 = ca2 ? obj.yAxisMax : seriesData[newRateIndex] + num;\n        // console.log(stepN, obj.yAxisMax);\n        // 我的排名\n        let data1 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[rateIndex],\n          symbol: 'image://' + _this.myselfImg,\n          symbolSize: 24,\n          yAxis: yAxis1\n        };\n        // 当前排名\n        let data2 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[rateIndex],\n          symbol: 'image://' + _this.currentImg,\n          symbolSize: 32,\n          yAxis: yAxis1\n        };\n        // 提升后排名\n        let data3 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[newRateIndex],\n          symbol: 'image://' + _this.finalImg,\n          symbolSize: 32,\n          yAxis: yAxis2\n        };\n        if (this.type === '1') {\n          markPointData.push(data1);\n        }\n        if (this.type === '2') {\n          // 若当前与提升后重叠，则只展示提升后\n          if (rateIndex !== newRateIndex) {\n            markPointData.push(data2, data3);\n          } else {\n            markPointData.push(data3);\n          }\n        }\n      }\n      let labelColor = '#B7B9BD';\n      let lineColor = '#D8D8D8';\n      let yAxisName = '人数           ';\n      let xAxisName = '分数';\n      let option = {\n        grid: {\n          left: 15,\n          right: 25,\n          top: gridTop,\n          bottom: gridBottom,\n          containLabel: true\n        },\n        // 等份\n        interval: obj.yAxisMax / 4,\n        xAxis: [\n          {\n            name: '\\n\\n\\n' + xAxisName.split('').join('\\n'),\n            nameTextStyle: {\n              color: labelColor,\n              fontSize: 10\n            },\n            nameGap: 5,\n            type: 'category',\n            data: obj.xAxisData,\n            axisLabel: {\n              formatter: '{value}',\n              color: labelColor,\n              textStyle: {\n                fontSize: 10\n              },\n              rotate: 50\n            },\n            splitLine: {\n              show: false\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            min: 0,\n            max: obj.yAxisMax,\n            name: yAxisName,\n            nameTextStyle: {\n              color: labelColor,\n              fontSize: 10\n            },\n            axisLabel: {\n              color: labelColor,\n              textStyle: {\n                fontSize: 10\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'bar',\n            barWidth: 16,\n            data: seriesData,\n            silent: obj.silent || false,\n            label: {\n              show: true,\n              position: 'top',\n              textStyle: {\n                fontSize: 10\n              },\n              formatter: params => {\n                return params.value + '人';\n              }\n            },\n            markPoint: {\n              data: markPointData\n            },\n            itemStyle: {\n              color: function(params) {\n                if (_this.clientType === 'pc') {\n                  let min = (params.dataIndex / 10).toFixed(2);\n                  let max = ((params.dataIndex + 1) / 10).toFixed(2);\n                  // 当前排名\n                  let color1 =\n                    obj.courseScoreRate > min && obj.courseScoreRate < max;\n                  if (color1) {\n                    return obj.seriesColor1;\n                  }\n                  // 提升后排名\n                  let color2 =\n                    obj.courseScoreRateNew > min &&\n                    obj.courseScoreRateNew < max &&\n                    _this.type === '2';\n                  if (color2) {\n                    return obj.seriesColor2;\n                  }\n                } else {\n                  if (_this.type === '1') {\n                    // 当前排名\n                    if (params.dataIndex === rateIndex) {\n                      return obj.seriesColor2;\n                    }\n                  } else {\n                    // 当前排名，且不与提升后重叠\n                    if (\n                      params.dataIndex === rateIndex &&\n                      rateIndex !== newRateIndex\n                    ) {\n                      return obj.seriesColor1;\n                    }\n                    // 提升后排名\n                    if (params.dataIndex === newRateIndex) {\n                      return obj.seriesColor2;\n                    }\n                  }\n                }\n                return obj.seriesColor;\n              },\n              barBorderRadius: [16, 16, 0, 0]\n            }\n          }\n        ]\n      };\n      if (this.chart !== null) this.chart.setOption(option);\n    }\n  }\n};\n</script>\n"]}]}