{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/menuManage/index.vue?vue&type=style&index=0&id=d31c738e&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/menuManage/index.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAnLi8uLi8uLi9hc3NldHMvbGVzcy9taXhpbnMvbWl4aW5zJzsKLnJlYXNvbi1pbnB1dCB7CiAgd2lkdGg6IDE5OHB4Owp9Ci5jb250ZW50LW1lbnUtdWwgewogIHBvc2l0aW9uOiBmaXhlZDsKICB6LWluZGV4OiAxMDA7CiAgd2lkdGg6IC5weDJSZW0oMTA4cHgpIFsgQHJlbV07CiAgcGFkZGluZzogLnB4MlJlbSgxMnB4KSBbIEByZW1dOwogIGJhY2tncm91bmQ6ICNmZmZmZmY7CiAgYm94LXNoYWRvdzogLnB4MlJlbSgwcHgpIFsgQHJlbV0gLnB4MlJlbSg5cHgpIFsgQHJlbV0gLnB4MlJlbSgyOHB4KSBbIEByZW1dCiAgICAgIC5weDJSZW0oOHB4KSBbIEByZW1dIHJnYmEoMCwgMCwgMCwgMC4wNSksCiAgICAucHgyUmVtKDBweCkgWyBAcmVtXSAucHgyUmVtKDZweCkgWyBAcmVtXSAucHgyUmVtKDE2cHgpIFsgQHJlbV0gLnB4MlJlbSgwcHgpCiAgICAgIFsgQHJlbV0gcmdiYSgwLCAwLCAwLCAwLjA4KSwKICAgIC5weDJSZW0oMHB4KSBbIEByZW1dIC5weDJSZW0oM3B4KSBbIEByZW1dIC5weDJSZW0oNnB4KSBbIEByZW1dIC5weDJSZW0oLTRweCkKICAgICAgWyBAcmVtXSByZ2JhKDAsIDAsIDAsIDAuMTIpOwogIGJvcmRlci1yYWRpdXM6IC5weDJSZW0oMnB4KSBbIEByZW1dOwogIGxpIHsKICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42NSk7CiAgICBmb250LXNpemU6IC5weDJSZW0oMTRweCkgWyBAcmVtXTsKICAgIGxpbmUtaGVpZ2h0OiAucHgyUmVtKDIycHgpIFsgQHJlbV07CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAmICsgbGkgewogICAgICBtYXJnaW4tdG9wOiAucHgyUmVtKDRweCkgWyBAcmVtXTsKICAgIH0KICAgICY6aG92ZXIgewogICAgICBjb2xvcjogIzE4OTBmZjsKICAgIH0KICAgICYuZGlzYWJsZWQgewogICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjQ1KTsKICAgICAgY3Vyc29yOiBuby1kcm9wOwogICAgfQogIH0KICAvLyAmOjpiZWZvcmUgewogIC8vICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIC8vICAgY29udGVudDogJyc7CiAgLy8gICB3aWR0aDogMDsKICAvLyAgIGhlaWdodDogMDsKICAvLyAgIGJvcmRlcjogLnB4MlJlbSgxMHB4KSBzb2xpZCB0cmFuc3BhcmVudDsKICAvLyAgIGJvcmRlci1ib3R0b20tY29sb3I6ICNmZmY7CiAgLy8gICB0b3A6IC5weDJSZW0oLTIwcHgpOwogIC8vIH0KICAuaWNvbmZvbnQgewogICAgZm9udC1zaXplOiAucHgyUmVtKDE0cHgpIFsgQHJlbV07CiAgICBtYXJnaW4tcmlnaHQ6IC5weDJSZW0oNHB4KSBbIEByZW1dOwogIH0KfQoucHJldmlldy13cmFwIHsKICBoZWlnaHQ6IDUwMHB4Owp9Ci5wcmV2aWV3LXRpdGxlIHsKICBmb250LXdlaWdodDogNTAwOwogIGNvbG9yOiAjMDAwMDAwOwogIGxpbmUtaGVpZ2h0OiAyOHB4OwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoucHJldmlldy1jb250ZW50IHsKICBtYXJnaW4tdG9wOiAyMHB4Owp9Ci5wcmV2aWV3LWZpbGUgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgZm9udC1zaXplOiAxNHB4Owp9Ci5jb21tZW50LW51bWJlciB7CiAgY29sb3I6ICM0MDllZmY7CiAgY3Vyc29yOiBwb2ludGVyOwogIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsqsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/school-book/views/menuManage","sourcesContent":["<template>\n  <div\n    class=\"app-container\"\n    @mouseleave=\"hideContentMenu\"\n    @click=\"hideContentMenu\"\n  >\n    <b-table\n      ref=\"bTable\"\n      loading\n      default-expand-all\n      empty-text=\"目录管理暂无数据\"\n      :headers=\"headers\"\n      row-key=\"id\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"ajaxGetData\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :tree-props=\"{ children: 'children', hasChildren: 'hasChildren' }\"\n    >\n      <template slot=\"column|status\" slot-scope=\"{ row }\">\n        <span\n          >{{\n            ($D('MLGL_ZT').find(item => item.value == row.status) &&\n              $D('MLGL_ZT').find(item => item.value == row.status)['label']) ||\n              '-'\n          }}\n        </span>\n      </template>\n      <template slot=\"column|commentCount\" slot-scope=\"{ row }\">\n        <span\n          @click=\"toComment(row)\"\n          v-if=\"row.commentCount || row.commentCount === 0\"\n          class=\"comment-number\"\n          >{{ row.commentCount }}</span\n        >\n        <span v-else>-</span>\n      </template>\n\n      <template slot=\"column|checkResult\" slot-scope=\"{ row }\">\n        {{\n          ($D('SHJG').find(item => item.value == row.online) &&\n            $D('SHJG').find(item => item.value == row.online)['label']) ||\n            '-'\n        }}\n      </template>\n      <template slot=\"column|catalogType\" slot-scope=\"{ row }\">\n        <span\n          >{{\n            ($D('CATALOG_TYPE').find(item => item.value == row.catalogType) &&\n              $D('CATALOG_TYPE').find(item => item.value == row.catalogType)[\n                'label'\n              ]) ||\n              '-'\n          }}\n        </span>\n      </template>\n      <template slot=\"column|catalogName\" slot-scope=\"{ row }\">\n        <span @contextmenu.prevent=\"onContextMenu($event, row)\"\n          >{{ row.catalogName }}\n        </span>\n      </template>\n      <template slot=\"column|noPassReason\" slot-scope=\"{ row }\">\n        <span v-if=\"row.nopassKey && row.nopassKey != 4\"\n          >{{ $D('BTGYY')[row.nopassKey]['label'] }}\n        </span>\n        <span v-else-if=\"row.nopassKey && row.nopassKey == 4\">\n          {{ row.nopassReason }}\n        </span>\n        <span v-else> - </span>\n      </template>\n\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status == '2'\"\n            @click.stop=\"operaBtn(row, 'edit')\"\n            >编辑</el-button\n          >\n          <el-button\n            v-if=\"row.catalogId\"\n            v-auth=\"['check-article']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"operaBtn(row, 'check')\"\n            >审核</el-button\n          >\n          <el-button\n            v-if=\"row.catalogId\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"operaBtn(row, 'preview')\"\n            >预览</el-button\n          >\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            v-auth=\"['delete-article']\"\n            @click.stop=\"operaBtn(row, 'delete')\"\n            >删除</el-button\n          >\n          <el-button\n            size=\"small\"\n            v-if=\"row.catalogId\"\n            v-auth=\"['online-article']\"\n            :disabled=\"\n              row.status == '0' || (row.status == '1' && row.online != 1)\n            \"\n            type=\"text\"\n            @click.stop=\"operaBtn(row, 'onLine')\"\n            >上线</el-button\n          >\n          <el-button\n            size=\"small\"\n            v-if=\"row.catalogId\"\n            v-auth=\"['offline-article']\"\n            :disabled=\"row.status != '2'\"\n            type=\"text\"\n            @click.stop=\"operaBtn(row, 'offLine')\"\n            >下线</el-button\n          >\n        </div>\n      </template>\n      <!-- <template slot=\"column|commentCount\" slot-scope=\"{ row }\">\n        <el-button size=\"mini\" type=\"text\" @click.stop=\"toReply\">\n          {{ row.commentCount }}条回复</el-button\n        >\n      </template>\n      <template slot=\"column|unreviewedCommentCount\" slot-scope=\"{ row }\">\n        <el-button size=\"mini\" type=\"text\" @click.stop=\"toReply\">\n          {{ row.unreviewedCommentCount }}条回复</el-button\n        >\n      </template> -->\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <b-table\n        v-if=\"dialogType == 'detail'\"\n        ref=\"dialogBTable\"\n        loading\n        empty-text=\"操作记录暂无数据\"\n        :headers=\"Dialogheaders\"\n        :pageSizes=\"[10]\"\n        :pageLimit=\"10\"\n        row-key=\"id\"\n        :ajax-get-data=\"ajaxGetDialogData\"\n        :show-column=\"false\"\n      >\n        <template slot=\"column|logType\" slot-scope=\"{ row }\">\n          <span>{{\n            ($D('LOG_TYPE')[row.logType] &&\n              $D('LOG_TYPE')[row.logType]['label']) ||\n              '-'\n          }}</span>\n        </template>\n      </b-table>\n      <c-dynamic-form\n        v-if=\"dialogType != 'detail'\"\n        ref=\"elForm\"\n        :formData=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span v-if=\"dialogType != 'detail'\" slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"onCloseForm\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n    <el-dialog\n      width=\"830px\"\n      center\n      :visible.sync=\"previewDialog.visible\"\n      title=\"预览\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      @close=\"onCloseFormPreview\"\n    >\n      <div class=\"preview-wrap\">\n        <div class=\"preview-title\">{{ previewData.catalogName }}</div>\n        <div class=\"preview-content\">\n          <div v-html=\"previewData.content\"></div>\n        </div>\n        <div class=\"preview-file\" v-if=\"previewFiles.length\">\n          附件:\n          <div v-for=\"item in previewFiles\" :key=\"item.url\">\n            {{ item.name }}\n          </div>\n        </div>\n      </div>\n    </el-dialog>\n    <ul\n      ref=\"contentMenu\"\n      v-show=\"isShow\"\n      class=\"content-menu-ul\"\n      :style=\"{\n        top: menuTop + 'px',\n        left: menuLeft + 'px'\n      }\"\n      @click.stop\n    >\n      <li\n        v-for=\"(item, index) in options\"\n        :key=\"index\"\n        :class=\"{\n          disabled: disabledMenuOptions.indexOf(item.action) !== -1\n        }\"\n        @click.stop=\"\n          disabledMenuOptions.indexOf(item.action) !== -1 ||\n            handleAction(item.action, item)\n        \"\n      >\n        <slot name=\"option\" v-bind=\"item\">\n          <i v-if=\"item.icon\" class=\"iconfont\" :class=\"item.icon\"></i\n          >{{ item.text }}\n        </slot>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport config from './../../config';\nimport {\n  getCatalogPage,\n  getCatalogList,\n  addCatalog,\n  addParentCatalog,\n  updateCatalog,\n  deleteCatalog,\n  catalogLogDetail,\n  contentDetail,\n  deleteContent,\n  deleteContentBatch,\n  checkContent,\n  onLineContent\n} from './../../api/data';\nexport default {\n  name: 'AnswerList',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n\n  data() {\n    return {\n      //图片前缀\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n          // prop: 'num'\n        },\n        {\n          label: '编号',\n          prop: 'catalogCode',\n          type: ''\n        },\n        {\n          label: '目录级别',\n          prop: 'catalogType',\n          type: '',\n          colType: 'column'\n        },\n        {\n          label: '目录名称',\n          prop: 'catalogName',\n          width: '200px',\n          colType: 'column'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '留言数',\n          colType: 'column',\n          prop: 'commentCount'\n        },\n        {\n          label: '编辑时间',\n          width: '160',\n          prop: 'updateTime'\n        },\n        {\n          label: '编辑人',\n          width: '160',\n          prop: 'editor'\n        },\n        {\n          label: '审核时间',\n          width: '160',\n          prop: 'reviewTime'\n        },\n        {\n          label: '上线时间',\n          width: '160',\n          prop: 'onlineTime'\n        },\n        {\n          label: '下线时间',\n          width: '160',\n          prop: 'offlineTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          colType: 'column'\n        },\n        {\n          label: '审核结果',\n          colType: 'column',\n          slotName: 'checkResult'\n        },\n        {\n          label: '审核未通过原因',\n          colType: 'column',\n          slotName: 'noPassReason'\n        },\n        {\n          label: '操作记录',\n          colType: 'btns',\n          btns: [\n            {\n              label: '查看详情',\n              type: 'text',\n              size: 'mini',\n              click: this.operaDetail\n            }\n          ]\n        },\n        {\n          label: '操作',\n          width: '200',\n          slotName: 'opera',\n          colType: 'column',\n          btns: []\n        }\n      ],\n      Dialogheaders: [\n        {\n          label: '操作人',\n          prop: 'creator'\n        },\n        {\n          label: '操作类型',\n          prop: 'logType',\n          colType: 'column'\n        },\n        {\n          label: '操作时间',\n          prop: 'createTime'\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'input',\n          prop: 'catalogName',\n          label: '文章名称：',\n          attrs: [\n            {\n              placeholder: '请输入标题关键字'\n            }\n          ]\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('MLGL_ZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'editTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        }\n      ],\n      dialogTitle: '',\n      dialogType: '',\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量删除',\n          click: this.deleteQuest\n        },\n        {\n          label: '新建目录',\n          click: this.addCatalogName\n        },\n        {\n          label: '新增文章',\n          click: this.addArticle\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      previewDialog: {\n        visible: false\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          addParentName: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '目录名称未填写'\n            }\n          ],\n          addSubName: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '目录名称未填写'\n            }\n          ],\n          editLevel: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择是否为一级目录'\n            }\n          ],\n          editParent: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择上级目录'\n            }\n          ],\n          editName: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '目录名称未填写'\n            }\n          ],\n          checkCustomReason: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '自定义原因未填写'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {},\n      //表格选中行数\n      selectedRows: null,\n      // 是否显示\n      isShow: false,\n      // 菜单位置\n      menuTop: 0,\n      menuLeft: 0,\n      //预览文章数据\n      previewData: {},\n      previewFiles: [],\n      // 选项\n      options: [\n        {\n          text: '编辑',\n          action: 'edit',\n          icon: 'icon_bianji'\n        },\n        {\n          text: '删除',\n          action: 'delete',\n          icon: 'icon_shanchu3'\n        },\n        {\n          text: '新增上级目录',\n          action: 'addParent'\n        },\n        {\n          text: '新增下级目录',\n          action: 'addSub'\n        }\n      ]\n    };\n  },\n  computed: {\n    /**\n     * 禁用的菜单选项\n     */\n    disabledMenuOptions() {\n      let arr = [];\n      if (!this.isCanDelCurrentNode) arr.push('delete');\n      if (!this.isCanNewParentDir) arr.push('addParent');\n      if (!this.isCanNewLowerDir) arr.push('addSub');\n      return arr;\n    },\n    /**\n     * 是否可以删除当前节点\n     */\n    isCanDelCurrentNode() {\n      if (this.selectedRows && !this.selectedRows.catalogId) {\n        return false;\n      }\n      return true;\n    },\n    /**\n     * 是否可以新增上级目录\n     */\n    isCanNewParentDir() {\n      console.log(this.selectedRows);\n\n      if (this.selectedRows && this.selectedRows.parentId === 0) {\n        return false;\n      }\n      // let currentNode = this.currentNode\n      // return !(currentNode && currentNode.level === 1);\n      return true;\n    },\n    /**\n     * 是否可以新增下级目录\n     */\n    isCanNewLowerDir() {\n      // let currentNode = this.currentNode\n      // return !(currentNode && currentNode.data.contentId);\n      return true;\n    },\n    dialogFormItems() {\n      let dialogType = this.dialogType;\n      let result;\n      switch (dialogType) {\n        case 'addParent':\n          result = [\n            {\n              type: 'input',\n              prop: 'addParentName',\n              label: '目录名称：',\n              attrs: {\n                placeholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n        case 'addSub':\n          result = [\n            {\n              type: 'select',\n              prop: 'addSubParent',\n              label: '上级目录：',\n              attrs: {\n                disabled: true\n              },\n              ajax: function() {\n                return getCatalogList().then(data => data.data);\n              },\n              labelKey: 'catalogName',\n              valueKey: 'id'\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            },\n            {\n              type: 'input',\n              prop: 'addSubName',\n              label: '目录名称：',\n              attrs: {\n                placeholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n        case 'edit':\n          result = [\n            {\n              type: 'radio',\n              prop: 'editLevel',\n              label: '一级目录：',\n              attrs: {},\n              options: [\n                {\n                  label: '是',\n                  value: 1\n                },\n                {\n                  label: '否',\n                  value: 2\n                }\n              ]\n            },\n            {\n              type: 'select',\n              prop: 'editParent',\n              hidden:\n                !this.dialogFormData.editLevel ||\n                (this.dialogFormData.editLevel &&\n                  this.dialogFormData.editLevel == '1'),\n              label: '上级目录：',\n              attrs: {\n                // disabled: true\n              },\n              ajax: function() {\n                return getCatalogList().then(data => data.data);\n              },\n              labelKey: 'catalogName',\n              valueKey: 'id'\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            },\n            {\n              type: 'input',\n              prop: 'editName',\n              label: '目录名称：',\n              attrs: {\n                placeholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n        case 'addMenu':\n          result = [\n            {\n              type: 'radio',\n              prop: 'editLevel',\n              label: '一级目录：',\n              attrs: {},\n              options: [\n                {\n                  label: '是',\n                  value: 1\n                },\n                {\n                  label: '否',\n                  value: 2\n                }\n              ]\n            },\n            {\n              type: 'select',\n              prop: 'editParent',\n              hidden:\n                !this.dialogFormData.editLevel ||\n                (this.dialogFormData.editLevel &&\n                  this.dialogFormData.editLevel == '1'),\n              label: '上级目录：',\n              attrs: {\n                // disabled: true\n              },\n              ajax: function() {\n                return getCatalogList().then(data => data.data);\n              },\n              labelKey: 'catalogName',\n              valueKey: 'id'\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            },\n            {\n              type: 'input',\n              prop: 'editName',\n              label: '目录名称：',\n              attrs: {\n                placeholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n        case 'check':\n          result = [\n            {\n              type: 'select',\n              prop: 'checkResult',\n              label: '审核结果：',\n              attrs: {},\n              options: this.$D('SHJG')\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            },\n            {\n              type: 'select',\n              prop: 'checkReason',\n              label: '不通过原因：',\n              hidden:\n                !this.dialogFormData.checkResult ||\n                this.dialogFormData.checkResult != '0',\n              attrs: {},\n              options: this.$D('BTGYY')\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            },\n            {\n              type: 'input',\n              prop: 'checkCustomReason',\n              hidden:\n                !this.dialogFormData.checkReason ||\n                this.dialogFormData.checkReason != '4',\n              label: '自定义原因：',\n              attrs: {\n                placeholder: '15字以内',\n                maxlength: 15\n              }\n              // ajax: function() {\n              //   return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n              // }\n            }\n          ];\n          break;\n        default:\n          result = [];\n          break;\n      }\n      return result;\n    }\n  },\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(data) {\n      const { editTime, reviewTime } = data;\n      const params = Object.assign(\n        {\n          startUpdateTime: (editTime && editTime[0]) || null,\n          endUpdateTime: (editTime && editTime[1]) || null,\n          startReviewTime: (reviewTime && reviewTime[0]) || null,\n          endReviewTime: (reviewTime && reviewTime[1]) || null\n        },\n        data,\n        { editTime: null, reviewTime: null }\n      );\n      // return getCatalogPage(params);\n      return getCatalogPage(params).then(res => {\n        return new Promise(resolve => {\n          const list = res.data.records || [];\n          const tree = this.$util.listConvertTree(list);\n          res.data.records = tree;\n          resolve(res);\n        });\n      });\n      // return new Promise(resolve => {\n      //   setTimeout(() => {\n      //     let list = [];\n      //     for (let i = 0; i < 10; i++) {\n      //       list.push({\n      //         id: i,\n      //         num: i,\n      //         typeCode: 'typeCode' + i,\n      //         typeName: '分类名称' + i,\n      //         sort: '排序值' + i,\n      //         time: '编辑时间'\n      //       });\n      //     }\n      //     resolve({\n      //       status: 200,\n      //       data: {\n      //         total: 10,\n      //         records: list\n      //       }\n      //     });\n      //   }, 500);\n      // });\n    },\n    ajaxGetDialogData(data) {\n      return catalogLogDetail(\n        Object.assign({}, data, { id: this.selectedRows.id })\n      );\n    },\n    //处理图片文件\n    getFileList(data) {\n      const list = JSON.parse(data);\n      let urlList = [];\n      for (let i = 0; i < list.length; i++) {\n        list[i].url = config.FILE_PREFIX + list[i].url;\n        urlList.push(list[i].url);\n      }\n      return {\n        list: list,\n        urlList: urlList\n      };\n    },\n    //下载文件\n    downloadFile(item) {\n      window.open(item.url);\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {};\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    //关闭预览弹窗\n    onCloseFormPreview() {\n      this.previewData.visible = false;\n      this.previewFiles = [];\n      this.previewData = {};\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      // this.$refs['dialogForm'].resetFields();\n      this.initDialogFormData();\n      this.dialogForm.visible = false;\n      this.dialogType = '';\n      this.$refs['elForm'] && this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 操作按钮\n     */\n    operaBtn(row, type) {\n      this.isShow = false;\n      switch (type) {\n        case 'onLine':\n          return onLineContent({ id: row.id, code: 2 }).then(res => {\n            this.$message({\n              message: '上线成功',\n              type: 'success'\n            });\n            this.submitDone();\n          });\n        case 'offLine':\n          return onLineContent({ id: row.id, code: 3 }).then(res => {\n            this.$message({\n              message: '下线成功',\n              type: 'success'\n            });\n            this.submitDone();\n          });\n        case 'delete':\n          this.deleteQuest(row);\n          break;\n        case 'check':\n          this.dialogForm.visible = true;\n          this.selectedRows = row;\n          this.dialogType = type;\n          this.dialogTitle = '审核';\n          break;\n        case 'edit':\n          this.selectedRows = row;\n          if (row.catalogId) {\n            this.$router.push({\n              path: '/editArticle',\n              query: {\n                contentId: row.id,\n                parentId: row.parentId\n              }\n            });\n          } else {\n            this.editCatalogName();\n          }\n          break;\n        case 'preview':\n          this.previewArticle(row);\n          break;\n        default:\n          break;\n      }\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      const dialogType = this.dialogType;\n      switch (dialogType) {\n        case 'addParent':\n          return this.$refs['elForm'].validate().then(() => {\n            const { addParentName } = this.dialogFormData;\n            console.log('selected', this.selectedRows);\n            // 校验成功\n            addParentCatalog({\n              catalogId: this.selectedRows && this.selectedRows.id,\n              parentName: addParentName\n            }).then(res => {\n              this.$message({\n                type: 'success',\n                message: '添加成功!'\n              });\n              this.submitDone();\n            });\n          });\n        case 'addSub':\n          return this.$refs['elForm'].validate().then(() => {\n            const { addSubParent, addSubName } = this.dialogFormData;\n            // 校验成功\n            addCatalog({\n              parentId: addSubParent,\n              catalogName: addSubName\n            }).then(res => {\n              this.$message({\n                type: 'success',\n                message: '添加成功!'\n              });\n              this.submitDone();\n            });\n          });\n        case 'edit':\n          return this.$refs['elForm'].validate().then(() => {\n            const { editLevel, editParent, editName } = this.dialogFormData;\n            // 校验成功\n            updateCatalog({\n              id: (this.selectedRows && this.selectedRows.id) || '',\n              parentId: editLevel == 1 ? 0 : editParent,\n              catalogName: editName\n            }).then(res => {\n              this.$message({\n                type: 'success',\n                message: '编辑成功!'\n              });\n              this.submitDone();\n            });\n          });\n        case 'check':\n          return this.$refs['elForm'].validate().then(() => {\n            const {\n              checkResult,\n              checkReason,\n              checkCustomReason\n            } = this.dialogFormData;\n            // 校验成功\n            checkContent({\n              id: this.gerSelectIds(),\n              code: checkResult,\n              nopassKey: checkReason,\n              nopassReason: checkCustomReason\n            }).then(res => {\n              this.$message({\n                type: 'success',\n                message: '审核成功!'\n              });\n              this.submitDone();\n            });\n          });\n        case 'addMenu':\n          // 校验成功\n          return this.$refs['elForm'].validate().then(() => {\n            const { editLevel, editParent, editName } = this.dialogFormData;\n            // 校验成功\n            addCatalog({\n              parentId: editLevel == 1 ? 0 : editParent,\n              catalogName: editName\n            }).then(res => {\n              this.$message({\n                type: 'success',\n                message: '新建成功!'\n              });\n              this.submitDone();\n            });\n          });\n        default:\n          break;\n      }\n    },\n    submitDone() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      this.initDialogFormData();\n      this.$refs.bTable.ajaxGetTableDataByPage();\n    },\n    //获取选中 Id\n    gerSelectIds() {\n      let rows = '';\n      if (!this.selectedRows) {\n        return;\n      }\n      if (Array.isArray(this.selectedRows)) {\n        for (let i = 0; i < this.selectedRows.length; i++) {\n          rows += this.selectedRows[i].id + ',';\n        }\n      } else {\n        rows = this.selectedRows.id;\n      }\n      return rows;\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      this.dialogType = 'exam';\n      this.dialogTitle = '审核';\n      this.selectedRows = rows;\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogForm.visible = true;\n    },\n    operaDetail(rows) {\n      this.dialogType = 'detail';\n      this.dialogTitle = '操作记录';\n      this.selectedRows = rows;\n      this.dialogForm.visible = true;\n    },\n    onReplyQuest(rows) {\n      this.dialogType = 'reply';\n      this.dialogTitle = '回复';\n      this.selectedRows = rows;\n      console.log('rows', rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogForm.visible = true;\n    },\n    //新增文章\n    addArticle() {\n      console.log('aaa');\n      this.$router.push({\n        path: '/editArticle'\n      });\n    },\n    /**\n     * 删除目录\n     */\n    deleteQuest(rows) {\n      console.log(rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个目录');\n        return;\n      }\n      this.$confirm('确定要删除当前目录?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.selectedRows = rows;\n        deleteCatalog({ ids: this.gerSelectIds() }).then(res => {\n          this.$refs.bTable.ajaxGetTableDataByPage();\n          this.selectedRows = [];\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        });\n      });\n    },\n    /**\n     * 删除文章\n     */\n    deleteContent(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个文章');\n        return;\n      }\n      this.$confirm('确定要删除当前文章?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.selectedRows = rows;\n        deleteContentBatch({ ids: this.gerSelectIds() }).then(res => {\n          this.$refs.bTable.ajaxGetTableDataByPage();\n          this.selectedRows = [];\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        });\n      });\n    },\n    //跳转回复\n    toReply() {\n      console.log('reply');\n    },\n    handleAction(action, options) {\n      switch (action) {\n        case 'edit':\n          this.editCatalogName();\n          break;\n        case 'delete':\n          this.deleteQuest(this.selectedRows);\n          break;\n        case 'addParent':\n          this.dialogType = action;\n          this.dialogForm.visible = true;\n          break;\n        case 'addSub':\n          this.dialogType = action;\n          this.dialogFormData = {\n            addSubParent: this.selectedRows.id\n          };\n          this.dialogForm.visible = true;\n          break;\n      }\n      // 隐藏菜单\n      this.hideContentMenu();\n    },\n    onContextMenu(event, row) {\n      // 文章节点不显示上下文菜单\n      this.selectedRows = row;\n      this.isShow = true;\n      // 未渲染不能获取高度\n      this.$nextTick(() => {\n        this.menuTop = event.clientY;\n        this.menuLeft = event.clientX;\n\n        // 处理菜单被遮挡问题\n        var htmlHeight = document.documentElement.scrollHeight;\n        var height = this.$refs.contentMenu.scrollHeight;\n        if (event.clientY + height > htmlHeight) {\n          this.menuTop = event.clientY - height;\n        }\n      });\n    },\n    editCatalogName() {\n      this.dialogType = 'edit';\n      this.dialogTitle = '编辑';\n      if (this.selectedRows && this.selectedRows.parentId !== 0) {\n        this.dialogFormData = {\n          editLevel: 2,\n          editParent: this.selectedRows.parentId || '',\n          editName: this.selectedRows.catalogName || ''\n        };\n      } else {\n        this.dialogFormData = {\n          editLevel: 1,\n          editParent: '',\n          editName: (this.selectedRows && this.selectedRows.catalogName) || ''\n        };\n      }\n\n      this.dialogForm.visible = true;\n    },\n    addCatalogName() {\n      this.dialogType = 'addMenu';\n      this.dialogTitle = ' 新建';\n      this.dialogForm.visible = true;\n    },\n    hideContentMenu() {\n      this.isShow = false;\n    },\n    previewArticle(row) {\n      this.previewDialog.visible = true;\n      contentDetail({ id: row.id }).then(res => {\n        console.log('res', res);\n        this.previewData = res.data;\n        this.previewFiles =\n          (this.previewData.files && JSON.parse(this.previewData.files)) || [];\n      });\n    },\n    toComment(row) {\n      this.$router.push({\n        path: '/messageManage',\n        query: {\n          catalogName: row.catalogName\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n@import './../../assets/less/mixins/mixins';\n.reason-input {\n  width: 198px;\n}\n.content-menu-ul {\n  position: fixed;\n  z-index: 100;\n  width: .px2Rem(108px) [ @rem];\n  padding: .px2Rem(12px) [ @rem];\n  background: #ffffff;\n  box-shadow: .px2Rem(0px) [ @rem] .px2Rem(9px) [ @rem] .px2Rem(28px) [ @rem]\n      .px2Rem(8px) [ @rem] rgba(0, 0, 0, 0.05),\n    .px2Rem(0px) [ @rem] .px2Rem(6px) [ @rem] .px2Rem(16px) [ @rem] .px2Rem(0px)\n      [ @rem] rgba(0, 0, 0, 0.08),\n    .px2Rem(0px) [ @rem] .px2Rem(3px) [ @rem] .px2Rem(6px) [ @rem] .px2Rem(-4px)\n      [ @rem] rgba(0, 0, 0, 0.12);\n  border-radius: .px2Rem(2px) [ @rem];\n  li {\n    user-select: none;\n    color: rgba(0, 0, 0, 0.65);\n    font-size: .px2Rem(14px) [ @rem];\n    line-height: .px2Rem(22px) [ @rem];\n    cursor: pointer;\n    & + li {\n      margin-top: .px2Rem(4px) [ @rem];\n    }\n    &:hover {\n      color: #1890ff;\n    }\n    &.disabled {\n      color: rgba(0, 0, 0, 0.45);\n      cursor: no-drop;\n    }\n  }\n  // &::before {\n  //   display: inline-block;\n  //   content: '';\n  //   width: 0;\n  //   height: 0;\n  //   border: .px2Rem(10px) solid transparent;\n  //   border-bottom-color: #fff;\n  //   top: .px2Rem(-20px);\n  // }\n  .iconfont {\n    font-size: .px2Rem(14px) [ @rem];\n    margin-right: .px2Rem(4px) [ @rem];\n  }\n}\n.preview-wrap {\n  height: 500px;\n}\n.preview-title {\n  font-weight: 500;\n  color: #000000;\n  line-height: 28px;\n  text-align: center;\n}\n.preview-content {\n  margin-top: 20px;\n}\n.preview-file {\n  margin-top: 20px;\n  font-size: 14px;\n}\n.comment-number {\n  color: #409eff;\n  cursor: pointer;\n  text-decoration: underline;\n}\n</style>\n"]}]}