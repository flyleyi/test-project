{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/Collection/energy.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/Collection/energy.vue","mtime":1627979214319},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["energy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"energy.vue","sourceRoot":"src/pages/logistics-data/views/Collection","sourcesContent":["<template>\r\n  <!-- 角色管理 -->\r\n  <div class=\"app-container\">\r\n    <b-table\r\n      class=\"b-table\"\r\n      ref=\"bTable\"\r\n      loading\r\n      :headers=\"columns(index)\"\r\n      :form-items=\"formItems(index)\"\r\n      :ajax-get-data=\"\r\n        params => {\r\n          return ajaxGetRoleData(params, index);\r\n        }\r\n      \"\r\n      :toolbars=\"toolbars\"\r\n      :showRefresh=\"false\"\r\n      :showColumn=\"false\"\r\n      v-for=\"(item, index) in titles\"\r\n      v-show=\"active == index\"\r\n      :key=\"index\"\r\n    >\r\n      <!--表格标题-->\r\n      <template v-slot:table-title>\r\n        <el-tabs\r\n          type=\"card\"\r\n          v-model=\"active\"\r\n          class=\"table-title-tabs\"\r\n          @tab-click=\"tabClick\"\r\n        >\r\n          <el-tab-pane\r\n            :label=\"item\"\r\n            :name=\"'' + index\"\r\n            v-for=\"(item, index) in titles\"\r\n            :key=\"index\"\r\n          ></el-tab-pane>\r\n        </el-tabs>\r\n      </template>\r\n      <!--导入按钮 -->\r\n      <template v-slot:toolbars|upload>\r\n        <el-upload\r\n          style=\"display: inline-block;margin-right: 10px;\"\r\n          class=\"upload-demo\"\r\n          v-bind=\"tool.attrs\"\r\n          v-on=\"tool.events\"\r\n          :key=\"tool.type\"\r\n        >\r\n          <el-button size=\"small\" type=\"primary\">{{ tool.label }}</el-button>\r\n        </el-upload>\r\n      </template>\r\n    </b-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Select,\r\n  Option,\r\n  Input,\r\n  Form,\r\n  FormItem,\r\n  Tabs,\r\n  TabPane\r\n} from 'element-ui';\r\nimport BTable from '@/components/business/BTable';\r\nimport axios from '@/plugins/axios';\r\nimport Utils from '@/components/common/CDynamicForm/components/utils';\r\nimport API_HOST from '@/plugins/common/api';\r\nimport { getToken } from '@/plugins/core/auth';\r\n\r\nexport default {\r\n  name: 'Energy',\r\n  // 注册组件\r\n  components: {\r\n    [Dialog.name]: Dialog,\r\n    [Button.name]: Button,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    [Input.name]: Input,\r\n    [Form.name]: Form,\r\n    [FormItem.name]: FormItem,\r\n    [Tabs.name]: Tabs,\r\n    [TabPane.name]: TabPane,\r\n    BTable\r\n  },\r\n  props: {\r\n    /**\r\n     * 服务器类型\r\n     */\r\n    serverType: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  // 定义数据\r\n  data() {\r\n    // 权限校验方法\r\n    let $has = this.$has;\r\n    typeof $has !== 'function' && ($has = () => true);\r\n    return {\r\n      $has,\r\n      titles: ['蒸汽', '水', '电', '天然气'],\r\n      active: '0',\r\n      tree: [], //单位树\r\n      //pathName:'canteen', //餐厅类\r\n      pathName: 'energyConsumption' //能耗类\r\n    };\r\n  },\r\n  // 计算属性\r\n  computed: {\r\n    tool() {\r\n      return {\r\n        label: '导入',\r\n        type: 'slot',\r\n        slotName: 'upload',\r\n        //click: this.addtableRole,\r\n        auth: ['power-import'],\r\n        attrs: {\r\n          showFileList: false,\r\n          accept: '.xls,.xlsx',\r\n          //action:\"https://jsonplaceholder.typicode.com/posts/\"\r\n          action:\r\n            (API_HOST[this.serverType] || '') + `/${this.pathName}/import/pre`,\r\n          headers: { Authorization: getToken() || '' },\r\n          onSuccess: (response, file, fileList) => {\r\n            console.log('success', response, file, fileList);\r\n\r\n            this._$message && this._$message.close();\r\n            if (response.status != 200) {\r\n              return this.$message({\r\n                message: response.message || '导入失败',\r\n                type: 'error'\r\n              });\r\n            }\r\n            const { state, noPassReason, fileId } = response.data;\r\n            if (state === 0 || state == '0') {\r\n              //检查通过没有问题已经插入\r\n              this.$message({\r\n                message: '导入成功',\r\n                type: 'success'\r\n              });\r\n              this.updateTable();\r\n            } else if (state == 1) {\r\n              //检查通过有重复需用户前台确认\r\n              this.importSure(fileId, noPassReason);\r\n            } else {\r\n              //-1检查不通过 -2有表格正在处理需要等待\r\n              this.$message({\r\n                dangerouslyUseHTMLString: true,\r\n                message: noPassReason,\r\n                type: 'error'\r\n              });\r\n            }\r\n          },\r\n          onError: (err, file, fileList) => {\r\n            //console.dir(err);\r\n            //console.log('error',err, file, fileList);\r\n\r\n            this._$message && this._$message.close();\r\n            // 关键处理，得用JSON.parse来解析error里面的内容\r\n            // 其中message为后端返回的错误信息提示\r\n            const result = JSON.parse(err.message);\r\n            // 导入Excel失败提示信息\r\n            this.$message({\r\n              message: '导入失败:' + result.message,\r\n              type: 'error'\r\n            });\r\n          },\r\n          onProgress: (event, file, fileList) => {\r\n            console.log('progress', event, file, fileList);\r\n            //this._$message&&this._$message.close();\r\n            this._$message = this.$message({\r\n              message: `导入进度${event.percent.toFixed(0)}%`,\r\n              type: 'success'\r\n            });\r\n          },\r\n          beforeUpload: file => {\r\n            console.log('before', file);\r\n            if (!file.name.match(/\\.xlsx?$/)) {\r\n              this.$message({\r\n                type: 'warning',\r\n                message: '只能导入xls或xlsx文件'\r\n              });\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      };\r\n    },\r\n    /**\r\n     * 表单列\r\n     */\r\n    title() {\r\n      var type = this.$route.params.type * 1;\r\n      switch (type) {\r\n        case 1:\r\n          return '人力成本明细表';\r\n        case 2:\r\n          return '车队费用';\r\n        case 3:\r\n          return '接送费用';\r\n        case 4:\r\n          return '各学部物资领用对比表';\r\n        case 5:\r\n          return '各学部维修费用对比表';\r\n        default:\r\n          return '学校主数据';\r\n      }\r\n    },\r\n    /**\r\n     * 工具栏\r\n     */\r\n    toolbars() {\r\n      let toolbars = [\r\n        // {\r\n        //   label: '新增',\r\n        //   click: this.addtableRole,\r\n        //   auth: ['role-add']\r\n        // }\r\n        this.tool,\r\n        {\r\n          label: '下载模板',\r\n          click: this.download,\r\n          auth: ['power-download']\r\n        }\r\n      ];\r\n      return toolbars.filter(item => this.$has(item.auth));\r\n    }\r\n  },\r\n  // 侦听器\r\n  watch: {},\r\n  // 创建完成钩子\r\n  created() {\r\n    this.getTreeData();\r\n  },\r\n  // 挂在完成钩子\r\n  mounted() {},\r\n  // 方法定义\r\n  methods: {\r\n    formDataHandler(formData) {\r\n      return {\r\n        ...formData,\r\n        //所属单位\r\n        schoolStageCode: formData.schoolStageCode\r\n          ? formData.schoolStageCode[formData.schoolStageCode.length - 1]\r\n          : ''\r\n      };\r\n    },\r\n    getTreeData() {\r\n      return axios(\r\n        {\r\n          url: '/department/tree4School'\r\n        },\r\n        this.serverType\r\n      ).then(res => {\r\n        this.tree = Utils.deleteEmpty(res.data || []);\r\n        return this.tree;\r\n      });\r\n    },\r\n    columns(index) {\r\n      let btns = [\r\n        // {\r\n        //   label: '编辑',\r\n        //   click: this.editTableRole,\r\n        //   auth: ['role-edit'],\r\n        //   size: 'mini',\r\n        //   type: 'primary'\r\n        // },\r\n        {\r\n          label: '删除',\r\n          click: row => this.del(row),\r\n          auth: ['power-delete'],\r\n          size: 'mini',\r\n          type: 'primary'\r\n        }\r\n      ];\r\n      var formatter = function(row, col, value) {\r\n          return value; //不进行转换\r\n          // return typeof value == 'number'\r\n          //   ? (value + '').replace(/^(.{4})/, '$1-')\r\n          //   : value;\r\n        },\r\n        arr = [\r\n          {\r\n            label: '月份',\r\n            prop: 'monthInt',\r\n            formatter,\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部编码',\r\n            prop: 'departCode',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部名称',\r\n            prop: 'departName',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: index == 2 ? '用量(度)' : '用量(吨)',\r\n            prop: 'usageAmount'\r\n          },\r\n          {\r\n            label: '单价',\r\n            prop: 'unitPrice'\r\n          },\r\n          {\r\n            label: '上传人',\r\n            prop: 'uploader',\r\n            //colType: 'column',\r\n            formatter(row) {\r\n              return row.uploaderName + '(' + row.uploader + ')';\r\n            }\r\n          },\r\n          {\r\n            label: '上传时间',\r\n            prop: 'uploadTime'\r\n          }\r\n        ];\r\n      return arr.concat([\r\n        // {\r\n        //   label: '角色状态',\r\n        //   prop: 'isShow',\r\n        //   formatter(row, column, cellValue) {\r\n        //     return cellValue == '0' ? '启用' : '禁用';\r\n        //   }\r\n        // },\r\n        {\r\n          label: '操作',\r\n          colType: 'btns',\r\n          btns: btns.filter(item => this.$has(item.auth)),\r\n          width: '86px',\r\n          fixed: 'right',\r\n          align: 'center'\r\n          //height: '105px'\r\n        }\r\n      ]);\r\n    },\r\n    /**\r\n     * 表单项\r\n     */\r\n    formItems(index) {\r\n      var type = index;\r\n      return [\r\n        {\r\n          type: 'datePicker',\r\n          prop: 'month',\r\n          label: '月份：',\r\n          attrs: {\r\n            type: 'month',\r\n            format: 'yyyy-MM',\r\n            valueFormat: 'yyyyMM',\r\n            pickerOptions: {\r\n              disabledDate(time) {\r\n                //禁用未来时间\r\n                return time.getTime() > Date.now();\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          //hidden: type == 1, //人力成本类 隐藏单位\r\n          type: 'cascader',\r\n          prop: 'schoolStageCode',\r\n          label: '单位：',\r\n          initCount: 'initCount',\r\n          attrs: {\r\n            //showCheckbox:true,\r\n            cascader: true,\r\n            settings: {\r\n              data: { code: 'value', name: 'label' },\r\n              treeNodes: 'children'\r\n            },\r\n            tree: this.tree\r\n            // getData:() => {\r\n            //   return this.getTreeData();\r\n            // }\r\n          }\r\n        },\r\n        {\r\n          type: 'input',\r\n          prop: 'uploader',\r\n          label: '上传人：'\r\n        }\r\n        // {\r\n        //   type: 'select',\r\n        //   options: [\r\n        //     {\r\n        //       value: '0',\r\n        //       label: '启用'\r\n        //     },\r\n        //     {\r\n        //       value: '1',\r\n        //       label: '禁用'\r\n        //     }\r\n        //   ],\r\n        //   prop: 'isShow',\r\n        //   label: '所属单位：'\r\n        // }\r\n      ];\r\n    },\r\n    ajaxGetRoleData(params, index) {\r\n      params.type = index * 1 + 1;\r\n      params = this.formDataHandler(params);\r\n      return axios(\r\n        {\r\n          method: 'GET',\r\n          //url: '/usergw/admin/common/pageList/301',\r\n          url: `/${this.pathName}/page`,\r\n          params\r\n        },\r\n        this.serverType\r\n      );\r\n    },\r\n    del({ id }) {\r\n      var active = this.active;\r\n      //删除\r\n      this.$confirm('是否删除该数据?', '删除确认', {\r\n        customClass: 'box-danger',\r\n        center: true\r\n      })\r\n        .then(() => {\r\n          axios(\r\n            {\r\n              method: 'POST',\r\n              url: `/${this.pathName}/delete/${id}`,\r\n              params: {\r\n                type: active * 1 + 1\r\n              }\r\n            },\r\n            this.serverType\r\n          ).then(({ data }) => {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n            this.updateTable(active);\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });\r\n        });\r\n    },\r\n    tabClick(ev) {\r\n      console.log(arguments, this, this.active);\r\n      this.$nextTick(() =>\r\n        this.$refs.bTable[this.active].$refs.table.$refs.table.doLayout()\r\n      );\r\n    },\r\n    updateTable(active) {\r\n      if (active || active === 0) {\r\n        //单个更新\r\n        this.$refs.bTable[active].ajaxGetTableDataByPage();\r\n      } else {\r\n        //全更新\r\n        this.titles.forEach((v, i) => {\r\n          this.updateTable(i);\r\n        });\r\n      }\r\n    },\r\n    importSure(fileId, noPassReason) {\r\n      //导入二次确认\r\n      var core = processType => {\r\n        axios(\r\n          {\r\n            method: 'POST',\r\n            url: `/${this.pathName}/import/process/${fileId}/${processType}`\r\n          },\r\n          this.serverType\r\n        ).then(({ data }) => {\r\n          if (processType != 1) {\r\n            return;\r\n          } //取消不做处理\r\n          this.$message({\r\n            message: '导入成功',\r\n            type: 'success'\r\n          });\r\n          this.updateTable();\r\n        });\r\n      };\r\n      this.$confirm(noPassReason, '覆盖确认', {\r\n        customClass: 'box-danger',\r\n        center: true,\r\n        dangerouslyUseHTMLString: true\r\n      })\r\n        .then(() => {\r\n          core(1);\r\n        })\r\n        .catch(() => {\r\n          core(-1);\r\n        });\r\n    },\r\n    download() {\r\n      //console.log(arguments);\r\n      //window.open(\"http://10.10.21.172:8665/logistics-data-api/modelDownload/\" + this.pathName , '_blank');\r\n\r\n      window.open(\r\n        (API_HOST[this.serverType] || '') + '/modelDownload/' + this.pathName,\r\n        '_blank'\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.b-table /deep/ .dynamic-form {\r\n  input,\r\n  .el-input {\r\n    width: 200px;\r\n  }\r\n}\r\n.table-title {\r\n  background: #d7d7d7;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  border: 1px solid #797979;\r\n  display: inline-block;\r\n  margin: 20px 0 10px;\r\n  border-radius: 6px;\r\n  &-tabs {\r\n    /deep/ .el-tabs__content {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n.role {\r\n  background: #fff;\r\n  padding: 0 25px 0;\r\n  &-main {\r\n    padding-top: 23px;\r\n  }\r\n  .dialog {\r\n    &-content {\r\n      &-item {\r\n        margin-bottom: 29px;\r\n        margin-left: 8px;\r\n        &-label {\r\n          float: left;\r\n          min-width: 90px;\r\n        }\r\n        &-red {\r\n          color: #f5222d;\r\n        }\r\n        &-text {\r\n          text-align: left;\r\n        }\r\n      }\r\n      &-btns {\r\n        text-align: center;\r\n        padding-bottom: 27px;\r\n        button {\r\n          margin: 0 20px;\r\n          width: 86px;\r\n          height: 36px;\r\n          font-size: 14px;\r\n          // font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}