{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/catering/views/BasicData/NationNutrientData.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/catering/views/BasicData/NationNutrientData.vue","mtime":1645178321126},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHRtcGwgPSAnL2NhdGVyaW5nLWFkbWluL3RlbXBsYXRlL2V4cG9ydE5hdGlvbk51dHJpZW50VGVtcGxhdGUnOwpjb25zdCBpbXBvcnRVcmwgPSAnL2ltcG9ydC9pbXBvcnROYXRpb25OdXRyaWVudCc7CmltcG9ydCB7CiAgZ2V0QWxsTnV0cmllbnQsCiAgZ2V0TmF0aW9uYWxOdXRyaWVudExpc3QsCiAgc2F2ZU5hdGlvbmFsTnV0cmllbnQKfSBmcm9tICcuLi8uLi9hcGkvQmFzZURhdGEvaW5kZXguanMnOwppbXBvcnQgeyBpbXBvcnRFeGNlbCB9IGZyb20gJy4uLy4uL2FwaS9jcm93ZCc7CmltcG9ydCBCSW1wb3J0RGF0YSBmcm9tICdAL3BhZ2VzL2NhdGVyaW5nL2NvbXBvbmVudHMvQkltcG9ydERhdGFQYW5lbCc7CmltcG9ydCB7IGZvcm1hdElucHV0IH0gZnJvbSAnLi91dGlscy5qcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgaGVhZGVyczogWwogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn5bm06b6E77yI5ZGo5bKB77yJJywKICAgICAgICAgIHByb3A6ICdudXRyaWVudEFnZU5hbWUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+aAp+WIqycsCiAgICAgICAgICBjb2xUeXBlOiAnY29sdW1uJywKICAgICAgICAgIHNsb3ROYW1lOiAnZ2VuZGVyJwogICAgICAgIH0KICAgICAgXSwKICAgICAgaXNFZGl0OiBmYWxzZSwKICAgICAgYWxsTnV0cmllbnQ6IFtdLAogICAgICBudXRyaWVudE9iajoge30sCiAgICAgIGlzTG9hZGluZzogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmb3JtYXRJbnB1dCwKICAgIGdldE5hdGlvbmFsTnV0cmllbnRMaXN0KCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGdldE5hdGlvbmFsTnV0cmllbnRMaXN0KCkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YSB8fCBbXTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QWxsTnV0cmllbnQoKSB7CiAgICAgIGdldEFsbE51dHJpZW50KCkudGhlbihyZXMgPT4gewogICAgICAgIGxldCBkYXRhID0gcmVzLmRhdGEgfHwgW107CiAgICAgICAgdGhpcy5hbGxOdXRyaWVudCA9IGRhdGEubWFwKGl0ZW0gPT4gewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLi4uaXRlbSwKICAgICAgICAgICAgbGFiZWw6IGAke2l0ZW0ubnV0cmllbnROYW1lfSgke2l0ZW0ubnV0cmllbnRTdGF0aXN0aWNhbFVuaXROYW1lIHx8CiAgICAgICAgICAgICAgaXRlbS5udXRyaWVudFVuaXROYW1lfSApYCwKICAgICAgICAgICAgY29sVHlwZTogJ2NvbHVtbicsCiAgICAgICAgICAgIHByb3A6IGl0ZW0ubnV0cmllbnRJZAogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmhlYWRlcnMgPSB0aGlzLmhlYWRlcnMuY29uY2F0KHRoaXMuYWxsTnV0cmllbnQpOwogICAgICB9KTsKICAgIH0sCiAgICBvbkVkaXQoKSB7CiAgICAgIHRoaXMuaXNFZGl0ID0gdHJ1ZTsKICAgIH0sCiAgICBvblNhdmUoKSB7CiAgICAgIGxldCBkYXRhID0gdGhpcy50YWJsZURhdGE7CiAgICAgIGxldCBhcnIgPSBbXTsKICAgICAgZGF0YS5tYXAoaXRlbSA9PiB7CiAgICAgICAgZm9yICh2YXIga2V5IGluIGl0ZW0pIHsKICAgICAgICAgIGlmICgKICAgICAgICAgICAga2V5ICE9ICdnZW5kZXJJZCcgJiYKICAgICAgICAgICAga2V5ICE9ICdnZW5kZXJOYW1lJyAmJgogICAgICAgICAgICBrZXkgIT0gJ251dHJpZW50QWdlSWQnICYmCiAgICAgICAgICAgIGtleSAhPSAnbnV0cmllbnRBZ2VOYW1lJwogICAgICAgICAgKSB7CiAgICAgICAgICAgIGFyci5wdXNoKHsKICAgICAgICAgICAgICAuLi5pdGVtW2tleV0sCiAgICAgICAgICAgICAgZ2VuZGVySWQ6IGl0ZW0uZ2VuZGVySWQsCiAgICAgICAgICAgICAgbnV0cmllbnRBZ2VJZDogaXRlbS5udXRyaWVudEFnZUlkCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGxldCBlcnJBcnIgPSBbXTsKICAgICAgbGV0IGZpbHRlckFyciA9IGFyci5maWx0ZXIoaXRlbSA9PiB7CiAgICAgICAgaWYgKGl0ZW0ubnV0cmllbnRTdGF0aXN0aWNhbFR5cGUgPT0gMikgewogICAgICAgICAgaWYgKAogICAgICAgICAgICAoaXRlbS5sb3dlckxpbWl0VmFsdWUgJiYgaXRlbS51cHBlckxpbWl0VmFsdWUpIHx8CiAgICAgICAgICAgICghaXRlbS5sb3dlckxpbWl0VmFsdWUgJiYgIWl0ZW0udXBwZXJMaW1pdFZhbHVlKQogICAgICAgICAgKSB7CiAgICAgICAgICAgIGlmIChpdGVtLmxvd2VyTGltaXRWYWx1ZSAmJiBpdGVtLnVwcGVyTGltaXRWYWx1ZSkgewogICAgICAgICAgICAgIGlmIChpdGVtLmxvd2VyTGltaXRWYWx1ZSA+PSBpdGVtLnVwcGVyTGltaXRWYWx1ZSkgewogICAgICAgICAgICAgICAgZXJyQXJyLnB1c2goaXRlbSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gaXRlbTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICAvLyDpqozor4HojIPlm7Tlj5blgLznmoTkuKTkuKrmlbDmja7kuI3kuLrnqboKICAgICAgaWYgKGZpbHRlckFyci5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+35qOA5p+l6IyD5Zu05Y+W5YC85piv5ZCm5aGr5YaZ5a6M5pW077yBJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIC8vIOmqjOivgeiMg+WbtOWPluWAvOeahOS4pOS4quaVsOaNruWkp+Wwj+mXrumimAogICAgICBpZiAoZXJyQXJyLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fmo4Dmn6XojIPlm7Tlj5blgLzkvY7lgLzkuI7pq5jlgLzmmK/lkKbloavlhpnmraPnoa7vvIEnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsKICAgICAgc2F2ZU5hdGlvbmFsTnV0cmllbnQoYXJyKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzLm1lc3NhZ2UpOwogICAgICAgICAgdGhpcy5nZXROYXRpb25hbE51dHJpZW50TGlzdCgpOwogICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMuaXNFZGl0ID0gZmFsc2U7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2gocmVzID0+IHsKICAgICAgICAgIHRoaXMuZ2V0TmF0aW9uYWxOdXRyaWVudExpc3QoKTsKICAgICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICB0aGlzLmlzRWRpdCA9IGZhbHNlOwogICAgICAgIH0pOwogICAgfSwKICAgIG9uSW1wb3J0KCkgewogICAgICBCSW1wb3J0RGF0YSh7CiAgICAgICAgdGVtcGxhdGVVcmw6IHRtcGwsCiAgICAgICAgYWpheEltcG9ydDogZm9ybURhdGEgPT4gewogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCdleHBvcnRUeXBlJywgMik7IC8vMj3lr7zlh7rplJnor6/miqXlkYoKICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgICAgIHJldHVybiBpbXBvcnRFeGNlbChpbXBvcnRVcmwsIGZvcm1EYXRhKQogICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmdldE5hdGlvbmFsTnV0cmllbnRMaXN0KCk7CiAgICAgICAgICAgICAgICByZXNvbHZlKHJlcyk7CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAuY2F0Y2goZSA9PiB7CiAgICAgICAgICAgICAgICByZXNvbHZlKGUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBQcm9taXNlLmFsbChbdGhpcy5nZXROYXRpb25hbE51dHJpZW50TGlzdCgpLCB0aGlzLmdldEFsbE51dHJpZW50KCldKTsKICB9Cn07Cg=="},null]}