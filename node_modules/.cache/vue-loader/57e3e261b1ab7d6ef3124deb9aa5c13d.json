{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/layout/components/TagsView/ScrollPane.vue?vue&type=style&index=0&id=8ed4df2c&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/layout/components/TagsView/ScrollPane.vue","mtime":1627979214320},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5zY3JvbGwtY29udGFpbmVyIHsNCiAgd2hpdGUtc3BhY2U6IG5vd3JhcDsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBvdmVyZmxvdzogaGlkZGVuOw0KICB3aWR0aDogMTAwJTsNCiAgOjp2LWRlZXAgew0KICAgIC5lbC1zY3JvbGxiYXJfX2JhciB7DQogICAgICBib3R0b206IDBweDsNCiAgICB9DQogICAgLmVsLXNjcm9sbGJhcl9fd3JhcCB7DQogICAgICBoZWlnaHQ6IDQ5cHg7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["ScrollPane.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScrollPane.vue","sourceRoot":"src/pages/logistics-data/views/layout/components/TagsView","sourcesContent":["<template>\r\n  <el-scrollbar\r\n    ref=\"scrollContainer\"\r\n    :vertical=\"false\"\r\n    class=\"scroll-container\"\r\n    @wheel.native.prevent=\"onScroll\"\r\n  >\r\n    <slot />\r\n  </el-scrollbar>\r\n</template>\r\n\r\n<script>\r\nconst tagAndTagSpacing = 4; // tagAndTagSpacing\r\n\r\nexport default {\r\n  name: 'ScrollPane',\r\n  data() {\r\n    return {\r\n      left: 0\r\n    };\r\n  },\r\n  computed: {\r\n    scrollWrapper() {\r\n      return this.$refs.scrollContainer.$refs.wrap;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.scrollWrapper.addEventListener('scroll', this.emitScroll, true);\r\n  },\r\n  beforeDestroy() {\r\n    this.scrollWrapper.removeEventListener('scroll', this.emitScroll);\r\n  },\r\n  methods: {\r\n    onScroll(e) {\r\n      const eventDelta = e.wheelDelta || -e.deltaY * 40;\r\n      const $scrollWrapper = this.scrollWrapper;\r\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4;\r\n    },\r\n    emitScroll() {\r\n      this.$emit('scroll');\r\n    },\r\n    moveToTarget(currentTag) {\r\n      const $container = this.$refs.scrollContainer.$el;\r\n      const $containerWidth = $container.offsetWidth;\r\n      const $scrollWrapper = this.scrollWrapper;\r\n      const tagList = this.$parent.$refs.tag;\r\n\r\n      let firstTag = null;\r\n      let lastTag = null;\r\n\r\n      // find first tag and last tag\r\n      if (tagList.length > 0) {\r\n        firstTag = tagList[0];\r\n        lastTag = tagList[tagList.length - 1];\r\n      }\r\n\r\n      if (firstTag === currentTag) {\r\n        $scrollWrapper.scrollLeft = 0;\r\n      } else if (lastTag === currentTag) {\r\n        $scrollWrapper.scrollLeft =\r\n          $scrollWrapper.scrollWidth - $containerWidth;\r\n      } else {\r\n        // find preTag and nextTag\r\n        const currentIndex = tagList.findIndex(item => item === currentTag);\r\n        const prevTag = tagList[currentIndex - 1];\r\n        const nextTag = tagList[currentIndex + 1];\r\n\r\n        // the tag's offsetLeft after of nextTag\r\n        const afterNextTagOffsetLeft =\r\n          nextTag.$el.offsetLeft + nextTag.$el.offsetWidth + tagAndTagSpacing;\r\n\r\n        // the tag's offsetLeft before of prevTag\r\n        const beforePrevTagOffsetLeft =\r\n          prevTag.$el.offsetLeft - tagAndTagSpacing;\r\n\r\n        if (\r\n          afterNextTagOffsetLeft >\r\n          $scrollWrapper.scrollLeft + $containerWidth\r\n        ) {\r\n          $scrollWrapper.scrollLeft = afterNextTagOffsetLeft - $containerWidth;\r\n        } else if (beforePrevTagOffsetLeft < $scrollWrapper.scrollLeft) {\r\n          $scrollWrapper.scrollLeft = beforePrevTagOffsetLeft;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.scroll-container {\r\n  white-space: nowrap;\r\n  position: relative;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  ::v-deep {\r\n    .el-scrollbar__bar {\r\n      bottom: 0px;\r\n    }\r\n    .el-scrollbar__wrap {\r\n      height: 49px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}