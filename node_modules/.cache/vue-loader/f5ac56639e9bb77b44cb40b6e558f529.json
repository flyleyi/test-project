{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BLogManage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BLogManage/index.vue","mtime":1627979214235},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdAL3BsdWdpbnMvYXhpb3MnOwppbXBvcnQgeyBCdXR0b24sIFRhYmxlQ29sdW1uLCBUYWJsZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgQlRhYmxlIGZyb20gJy4uL0JUYWJsZSc7CmltcG9ydCB1dGlscyBmcm9tICdAL3BsdWdpbnMvY29tbW9uL3V0aWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdCTG9nTWFuYWdlJywKICAvLyDms6jlhoznu4Tku7YKICBjb21wb25lbnRzOiB7CiAgICBbQnV0dG9uLm5hbWVdOiBCdXR0b24sCiAgICBbVGFibGUubmFtZV06IFRhYmxlLAogICAgW1RhYmxlQ29sdW1uLm5hbWVdOiBUYWJsZUNvbHVtbiwKICAgIEJUYWJsZQogIH0sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICog5pyN5Yqh5Zmo57G75Z6LCiAgICAgKi8KICAgIHNlcnZlclR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfQogIH0sCiAgLy8g5a6a5LmJ5pWw5o2uCiAgZGF0YSgpIHsKICAgIGNvbnN0IHNlbGYgPSB0aGlzOwogICAgcmV0dXJuIHsKICAgICAgLyoqCiAgICAgICAqIOWumuS5ieWIlwogICAgICAgKi8KICAgICAgY29sdW1uczogWwogICAgICAgIHsKICAgICAgICAgIHByb3A6ICd1bml0TGlzdCcsCiAgICAgICAgICBjb2xUeXBlOiAnY29sdW1uJywKICAgICAgICAgIHR5cGU6ICdleHBhbmQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+ihqOWQjScsCiAgICAgICAgICBwcm9wOiAndGFibGVOYW1lJywKICAgICAgICAgICdzaG93LW92ZXJmbG93LXRvb2x0aXAnOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ2lwJywKICAgICAgICAgIHByb3A6ICdpcCcKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn5pON5L2c6aG16Z2iJywKICAgICAgICAgIHByb3A6ICdvcGVyYXRlUGFnZScKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn5pON5L2c5oyJ6ZKuJywKICAgICAgICAgIHByb3A6ICdvcGVyYXRlQnV0dG9uJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICfmk43kvZznsbvlnosnLAogICAgICAgICAgcHJvcDogJ29wZXJhdGVUeXBlJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICfnlKjmiLfotKblj7cnLAogICAgICAgICAgcHJvcDogJ29wZXJhdGVVc2VySWQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+W8gOWni+aXtumXtCcsCiAgICAgICAgICBwcm9wOiAnY3JlYXRlRGF0ZScsCiAgICAgICAgICB3aWR0aDogJzE5MXB4JywKICAgICAgICAgIGZvcm1hdHRlcihyb3csIGNvbHVtbiwgY2VsbFZhbHVlKSB7CiAgICAgICAgICAgIHJldHVybiB1dGlscy5kYXRlQ29udmVydGVyKCd5eXl5LU1NLWRkIGhoOm1tOnNzJywgY2VsbFZhbHVlKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgIC8vIOWumuS5ieafpeivouihqOWNlQogICAgICBmb3JtSXRlbXM6IFsKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnaW5wdXQnLAogICAgICAgICAgcHJvcDogJ2lwJywKICAgICAgICAgIGxhYmVsOiAnSVDlnLDlnYAnLAogICAgICAgICAgbWF4bGVuZ3RoOiAxNQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdHlwZTogJ2lucHV0JywKICAgICAgICAgIHByb3A6ICd0YWJsZU5hbWUnLAogICAgICAgICAgbGFiZWw6ICfooajlkI0nLAogICAgICAgICAgbWF4bGVuZ3RoOiAyNTUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHR5cGU6ICdpbnB1dCcsCiAgICAgICAgICBwcm9wOiAnb3BlcmF0ZVVzZXJJZCcsCiAgICAgICAgICBsYWJlbDogJ+eUqOaIt+i0puaItycKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIHR5cGU6ICdzZWxlY3QnLAogICAgICAgICAgcHJvcDogJ3Jlc3VsdCcsCiAgICAgICAgICBsYWJlbDogJ+aTjeS9nOe7k+aenCcsCiAgICAgICAgICBvcHRpb25zOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBsYWJlbDogJ+aIkOWKnycsCiAgICAgICAgICAgICAgdmFsdWU6ICdzdWNjZXNzJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbGFiZWw6ICflpLHotKUnLAogICAgICAgICAgICAgIHZhbHVlOiAnZmFpbHVyZScKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgdHlwZTogJ3NlbGVjdCcsCiAgICAgICAgICBwcm9wOiAnb3BlcmF0ZVR5cGUnLAogICAgICAgICAgbGFiZWw6ICfmk43kvZznsbvlnosnLAogICAgICAgICAgb3B0aW9uczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdmFsdWU6ICfmlrDlop4nLAogICAgICAgICAgICAgIGxhYmVsOiAn5paw5aKeJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdmFsdWU6ICfmm7TmlrAnLAogICAgICAgICAgICAgIGxhYmVsOiAn5pu05pawJwogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdmFsdWU6ICfliKDpmaQnLAogICAgICAgICAgICAgIGxhYmVsOiAn5Yig6ZmkJwogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnZGF0ZS1waWNrZXInLAogICAgICAgICAgcHJvcDogJ2RhdGUnLAogICAgICAgICAgbGFiZWw6ICfml6XmnJ/ojIPlm7QnLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdHlwZTogJ2RhdGVyYW5nZScsCiAgICAgICAgICAgICd2YWx1ZS1mb3JtYXQnOiAneXl5eS1NTS1kZCcsCiAgICAgICAgICAgICdyYW5nZS1zZXBhcmF0b3InOiAn6IezJywKICAgICAgICAgICAgJ3N0YXJ0LXBsYWNlaG9sZGVyJzogJ+W8gOWni+aXpeacnycsCiAgICAgICAgICAgICdlbmQtcGxhY2Vob2xkZXInOiAn57uT5p2f5pel5pyfJywKICAgICAgICAgICAgJ3VubGluay1wYW5lbHMnOiB0cnVlLAogICAgICAgICAgICBhbGlnbjogJ3JpZ2h0JywKICAgICAgICAgICAgcGlja2VyT3B0aW9uczogewogICAgICAgICAgICAgIHNob3J0Y3V0czogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5ZGoJywKICAgICAgICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiA3KTsKICAgICAgICAgICAgICAgICAgICBwaWNrZXIuJGVtaXQoJ3BpY2snLCBbc3RhcnQsIGVuZF0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0ZXh0OiAn5pyA6L+R5LiA5Liq5pyIJywKICAgICAgICAgICAgICAgICAgb25DbGljayhwaWNrZXIpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBlbmQgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgICBzdGFydC5zZXRUaW1lKHN0YXJ0LmdldFRpbWUoKSAtIDM2MDAgKiAxMDAwICogMjQgKiAzMCk7CiAgICAgICAgICAgICAgICAgICAgcGlja2VyLiRlbWl0KCdwaWNrJywgW3N0YXJ0LCBlbmRdKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgdGV4dDogJ+acgOi/keS4ieS4quaciCcsCiAgICAgICAgICAgICAgICAgIG9uQ2xpY2socGlja2VyKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgZW5kID0gbmV3IERhdGUoKTsKICAgICAgICAgICAgICAgICAgICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgICAgICAgICAgc3RhcnQuc2V0VGltZShzdGFydC5nZXRUaW1lKCkgLSAzNjAwICogMTAwMCAqIDI0ICogOTApOwogICAgICAgICAgICAgICAgICAgIHBpY2tlci4kZW1pdCgncGljaycsIFtzdGFydCwgZW5kXSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH07CiAgfSwKICAvLyDorqHnrpflsZ7mgKcKICBjb21wdXRlZDoge30sCiAgLy8g5L6m5ZCs5ZmoCiAgd2F0Y2g6IHt9LAogIC8vIOWIm+W7uuWujOaIkOmSqeWtkAogIGNyZWF0ZWQoKSB7fSwKICAvLyDmjILlnKjlrozmiJDpkqnlrZAKICBtb3VudGVkKCkge30sCiAgLy8g5pa55rOV5a6a5LmJCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiDojrflj5bliJfooajmlbDmja7nmoTor7fmsYLmlrnms5UKICAgICAqLwogICAgZmF0Y2hNZXRob2QocGFyYW1zKSB7CiAgICAgIHBhcmFtcy5jdXJyZW50UGFnZSA9IHBhcmFtcy5wYWdlOwogICAgICBwYXJhbXMgPSB7IC4uLnBhcmFtcyB9OwogICAgICBpZiAocGFyYW1zLmRhdGUgJiYgcGFyYW1zLmRhdGUubGVuZ3RoID49IDIpIHsKICAgICAgICAvLyDlpITnkIbml6XmnJ8KICAgICAgICBwYXJhbXMuc3RhcnREYXRlID0gcGFyYW1zLmRhdGVbMF07CiAgICAgICAgcGFyYW1zLmVuZERhdGEgPSBwYXJhbXMuZGF0ZVsxXTsKICAgICAgICBkZWxldGUgcGFyYW1zLmRhdGU7CiAgICAgIH0KICAgICAgcmV0dXJuIGF4aW9zKAogICAgICAgIHsKICAgICAgICAgIG1ldGhvZDogJ0dFVCcsCiAgICAgICAgICB1cmw6ICcvbG9nSW5mby9saXN0JywKICAgICAgICAgIHBhcmFtcwogICAgICAgIH0sCiAgICAgICAgdGhpcy5zZXJ2ZXJUeXBlCiAgICAgICkudGhlbigoeyBkYXRhIH0pID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgZGF0YTogewogICAgICAgICAgICByZWNvcmRzOiBBcnJheS5pc0FycmF5KGRhdGEubGlzdCkgPyBkYXRhLmxpc3QgOiBbXSwKICAgICAgICAgICAgdG90YWw6IGRhdGEudG90YWxSZWNvcmRzIHx8IDAKICAgICAgICAgIH0KICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/business/BLogManage","sourcesContent":["·<template>\n  <!-- 系统日志 -->\n  <div class=\"app-container\">\n    <!-- url配置获取数据 -->\n    <!-- <xm-table\n      url=\"/usergw/admin/common/pageList/100\">\n    </xm-table> -->\n    <b-table\n      ref=\"bTable\"\n      loading\n      :headers=\"columns\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"fatchMethod\"\n    >\n      <template slot=\"column|unitList\" slot-scope=\"{ row }\">\n        <el-table class=\"expand-table\" size=\"1\" :data=\"row.unitList\" border>\n          <el-table-column label=\"列注释\" prop=\"colNameZn\" />\n          <el-table-column label=\"列名\" prop=\"colName\" />\n          <el-table-column label=\"列新值\" prop=\"colValueNew\" />\n          <el-table-column label=\"列旧值\" prop=\"colValueOri\" />\n        </el-table>\n      </template>\n    </b-table>\n    <!-- <xm-table\n      ref=\"xmTable\"\n      :fatch-method=\"fatchMethod\"\n      :form-items=\"formItems\"\n      :columns=\"columns\"\n      :tableOptions=\"{ size: '1' }\"\n    >\n      <template slot=\"table-prepend\">\n        <el-table-column type=\"expand\">\n          <template slot-scope=\"{ row }\">\n            <el-table class=\"expand-table\" size=\"1\" :data=\"row.unitList\" border>\n              <el-table-column label=\"列注释\" prop=\"colNameZn\" />\n              <el-table-column label=\"列名\" prop=\"colName\" />\n              <el-table-column label=\"列新值\" prop=\"colValueNew\" />\n              <el-table-column label=\"列旧值\" prop=\"colValueOri\" />\n            </el-table>\n          </template>\n        </el-table-column>\n      </template>\n      <template slot=\"otherHandle\" slot-scope=\"{ row }\">\n        <el-button\n          :loading=\"row.loading\"\n          type=\"primary\"\n          @click=\"handletoggle(row)\"\n          >启用</el-button\n        >\n      </template>\n    </xm-table> -->\n  </div>\n</template>\n\n<script>\nimport axios from '@/plugins/axios';\nimport { Button, TableColumn, Table } from 'element-ui';\nimport BTable from '../BTable';\nimport utils from '@/plugins/common/utils';\nexport default {\n  name: 'BLogManage',\n  // 注册组件\n  components: {\n    [Button.name]: Button,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    BTable\n  },\n  props: {\n    /**\n     * 服务器类型\n     */\n    serverType: {\n      type: String,\n      default: ''\n    }\n  },\n  // 定义数据\n  data() {\n    const self = this;\n    return {\n      /**\n       * 定义列\n       */\n      columns: [\n        {\n          prop: 'unitList',\n          colType: 'column',\n          type: 'expand'\n        },\n        {\n          label: '表名',\n          prop: 'tableName',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: 'ip',\n          prop: 'ip'\n        },\n        {\n          label: '操作页面',\n          prop: 'operatePage'\n        },\n        {\n          label: '操作按钮',\n          prop: 'operateButton'\n        },\n        {\n          label: '操作类型',\n          prop: 'operateType'\n        },\n        {\n          label: '用户账号',\n          prop: 'operateUserId'\n        },\n        {\n          label: '开始时间',\n          prop: 'createDate',\n          width: '191px',\n          formatter(row, column, cellValue) {\n            return utils.dateConverter('yyyy-MM-dd hh:mm:ss', cellValue);\n          }\n        }\n      ],\n      // 定义查询表单\n      formItems: [\n        {\n          type: 'input',\n          prop: 'ip',\n          label: 'IP地址',\n          maxlength: 15\n        },\n        {\n          type: 'input',\n          prop: 'tableName',\n          label: '表名',\n          maxlength: 255\n        },\n        {\n          type: 'input',\n          prop: 'operateUserId',\n          label: '用户账户'\n        },\n        {\n          type: 'select',\n          prop: 'result',\n          label: '操作结果',\n          options: [\n            {\n              label: '成功',\n              value: 'success'\n            },\n            {\n              label: '失败',\n              value: 'failure'\n            }\n          ]\n        },\n        {\n          type: 'select',\n          prop: 'operateType',\n          label: '操作类型',\n          options: [\n            {\n              value: '新增',\n              label: '新增'\n            },\n            {\n              value: '更新',\n              label: '更新'\n            },\n            {\n              value: '删除',\n              label: '删除'\n            }\n          ]\n        },\n        {\n          type: 'date-picker',\n          prop: 'date',\n          label: '日期范围',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            'range-separator': '至',\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期',\n            'unlink-panels': true,\n            align: 'right',\n            pickerOptions: {\n              shortcuts: [\n                {\n                  text: '最近一周',\n                  onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                    picker.$emit('pick', [start, end]);\n                  }\n                },\n                {\n                  text: '最近一个月',\n                  onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                    picker.$emit('pick', [start, end]);\n                  }\n                },\n                {\n                  text: '最近三个月',\n                  onClick(picker) {\n                    const end = new Date();\n                    const start = new Date();\n                    start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                    picker.$emit('pick', [start, end]);\n                  }\n                }\n              ]\n            }\n          }\n        }\n      ]\n    };\n  },\n  // 计算属性\n  computed: {},\n  // 侦听器\n  watch: {},\n  // 创建完成钩子\n  created() {},\n  // 挂在完成钩子\n  mounted() {},\n  // 方法定义\n  methods: {\n    /**\n     * 获取列表数据的请求方法\n     */\n    fatchMethod(params) {\n      params.currentPage = params.page;\n      params = { ...params };\n      if (params.date && params.date.length >= 2) {\n        // 处理日期\n        params.startDate = params.date[0];\n        params.endData = params.date[1];\n        delete params.date;\n      }\n      return axios(\n        {\n          method: 'GET',\n          url: '/logInfo/list',\n          params\n        },\n        this.serverType\n      ).then(({ data }) => {\n        return {\n          data: {\n            records: Array.isArray(data.list) ? data.list : [],\n            total: data.totalRecords || 0\n          }\n        };\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n/deep/ .el-table__expanded-cell {\n  padding: 0 0 0 47px;\n}\n/deep/ .el-table__header-wrapper th {\n  background: rgba(245, 246, 247, 1);\n}\n.expand-table {\n  border-top: none;\n  /deep/ .el-table__header-wrapper th {\n    background: rgba(241, 246, 255, 1);\n  }\n}\n</style>\n"]}]}