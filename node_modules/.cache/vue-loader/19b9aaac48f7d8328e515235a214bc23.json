{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/views/components/permissionEdit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/views/components/permissionEdit/index.vue","mtime":1627979214289},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgUmFkaW8sCiAgQnV0dG9uLAogIERpYWxvZywKICBGb3JtSXRlbSwKICBJbnB1dCwKICBGb3JtLAogIENoZWNrYm94LAogIENoZWNrYm94R3JvdXAsCiAgT3B0aW9uLAogIFNlbGVjdAp9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgewogIGdldE1lbnVMaXN0LAogIGdldFByb2plY3RMaXN0LAogIGdldFJvbGVMaXN0Cn0gZnJvbSAnLi4vLi4vLi4vYXBpL2F1dGgvaW5kZXgnOwppbXBvcnQgeyB1cGRhdGVVc2VyLCBhZGRVc2VyIH0gZnJvbSAnLi4vLi4vLi4vYXBpL3VzZXIvaW5kZXgnOwppbXBvcnQgcm91dGVyLCB7IGdlbmVyYXRlUm91dGVzIH0gZnJvbSAnLi4vLi4vLi4vcm91dGVyJzsKaW1wb3J0IHsgZ2V0VXNlcklkIH0gZnJvbSAnQC9wbHVnaW5zL2NvcmUvYXV0aCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQkltcG9ydERhdGFQYW5lbCcsCiAgY29tcG9uZW50czogewogICAgW0J1dHRvbi5uYW1lXTogQnV0dG9uLAogICAgW0RpYWxvZy5uYW1lXTogRGlhbG9nLAogICAgW0lucHV0Lm5hbWVdOiBJbnB1dCwKICAgIFtSYWRpby5uYW1lXTogUmFkaW8sCiAgICBbRm9ybUl0ZW0ubmFtZV06IEZvcm1JdGVtLAogICAgW0Zvcm0ubmFtZV06IEZvcm0sCiAgICBbQ2hlY2tib3gubmFtZV06IENoZWNrYm94LAogICAgW0NoZWNrYm94R3JvdXAubmFtZV06IENoZWNrYm94R3JvdXAsCiAgICBbT3B0aW9uLm5hbWVdOiBPcHRpb24sCiAgICBbU2VsZWN0Lm5hbWVdOiBTZWxlY3QKICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIOaIkOWKn+WbnuiwgwogICAgICovCiAgICBvblN1Y2Nlc3M6IHsKICAgICAgdHlwZTogRnVuY3Rpb24KICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICBsZXQgdmFsaWRhdGVJbnB1dCA9IChydWxlLCB2YWx1ZSwgY2FsbGJhY2spID0+IHsKICAgICAgaWYgKCF0aGlzLmNoZWNrU3BlY2lhbEtleSh2YWx1ZSkpIHsKICAgICAgICBjYWxsYmFjayhuZXcgRXJyb3IoJ+S4jeiDveWQq+acieeJueauiuWtl+espu+8ge+8gScpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjYWxsYmFjaygpOwogICAgICB9CiAgICB9OwogICAgcmV0dXJuIHsKICAgICAgbG9hZGluZzogZmFsc2UsCiAgICAgIHZpc2libGU6IGZhbHNlLCAvLyDmmK/lkKbmmL7npLrmqKHmgIHmoYYKICAgICAgdGl0bGU6ICcnLAogICAgICBEaWFsb2dEYXRhOiBudWxsLAogICAgICBlZGl0SXRlbTogbnVsbCwKICAgICAgcnVsZUZvcm06IHsKICAgICAgICB1c2VybmFtZTogJycsCiAgICAgICAgcmVnaW9uOiAnJwogICAgICB9LAogICAgICByb2xlTGlzdDogW10sIC8vIOexu+WeiwogICAgICBjaGVja0FsbDogZmFsc2UsCiAgICAgIGNoZWNrVHlwZUFsbDogW10sIC8vIOexu+Wei+WFqOmAieeKtuaAgQogICAgICBwZXJtaXNzaW9uTGlzdDogW10sIC8vIOiPnOWNleWIl+ihqOWSjOW3peeoi+WIl+ihqOaVsOaNrgogICAgICBwcm9qZWN0TGlzdDogW10sIC8v6aG555uu57G75Z6L5YiX6KGoCiAgICAgIGlzSW5kZXRlcm1pbmF0ZTogW10sIC8vIOS6jOe6p+mAieS4reagt+W8jwogICAgICBzZWxlY3RBcnI6IFtdLCAvLyDpgInkuK3nmoTlrZDoioLngrkKICAgICAgY2hlY2tBbGxEZXRlcm1pbmF0ZTogZmFsc2UsIC8vIOS4gOe6p+WFqOmAiQogICAgICBydWxlczogewogICAgICAgIHVzZXJuYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl6LSm5Y+3JywgdHJpZ2dlcjogJ2JsdXInIH0sCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn6K+36L6T5YWl6LSm5Y+3JywgdHJpZ2dlcjogJ2NoYW5nZScgfSwKICAgICAgICAgIC8vIHsgbWluOiAzLCBtYXg6IDUsIG1lc3NhZ2U6ICfplb/luqblnKggMyDliLAgNSDkuKrlrZfnrKYnLCB0cmlnZ2VyOiAnY2hhbmdlJyB9CiAgICAgICAgICB7IHZhbGlkYXRvcjogdmFsaWRhdGVJbnB1dCwgdHJpZ2dlcjogJ2NoYW5nZScgfSwKICAgICAgICAgIHsgdmFsaWRhdG9yOiB2YWxpZGF0ZUlucHV0LCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgICAgcmVnaW9uOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeexu+WeiycsIHRyaWdnZXI6ICdjaGFuZ2UnIH1dLAogICAgICAgIGNoZWNrVHlwZUFsbDogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+mAieaLqeexu+WeiycsIHRyaWdnZXI6ICdjaGFuZ2UnIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgIGVuZERldkRhdGE6IFtdIC8vIOm7mOiupOmAieS4reeahOWAvAogICAgfTsKICB9LAogIHdhdGNoOiB7fSwKICBtZXRob2RzOiB7CiAgICAvLyDmraPliJnpqozor4EKICAgIGNoZWNrU3BlY2lhbEtleShzdHIpIHsKICAgICAgbGV0IHNwZWNpYWxLZXkgPQogICAgICAgICciIlt+ISMkJV4mKigpPXx7fVwnOjtcJ1xcW1xcXTw+Lz9+77yBI++/peKApuKApiYq77yI77yJ4oCU4oCUfHt944CQ44CR4oCY77yb77ya4oCd4oCcXCfjgILvvIzjgIHvvJ9d4oCYXCciIic7CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgaWYgKHNwZWNpYWxLZXkuaW5kZXhPZihzdHIuc3Vic3RyKGksIDEpKSAhPSAtMSkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICAvKioKICAgICAqIOaYvuekuuaooeaAgeahhuWKqOeUu+e7k+adnwogICAgICogIEBwYXJhbSB7T2JqZWN0fX0gZWRpdEl0ZW0g5L+u5pS56aG5CiAgICAgKi8KICAgIHNob3coZWRpdEl0ZW0pIHsKICAgICAgdGhpcy5lbmREZXZEYXRhID0gW107CiAgICAgIHRoaXMuc2VsZWN0QXJyID0gW107CiAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlID0gW107CiAgICAgIHRoaXMuY2hlY2tBbGwgPSBmYWxzZTsKICAgICAgdGhpcy5jaGVja1R5cGVBbGwgPSBbXTsgLy8g57G75Z6L5YWo6YCJ54q25oCBCiAgICAgIHRoaXMuY2hlY2tBbGxEZXRlcm1pbmF0ZSA9IGZhbHNlOyAvLyDkuIDnuqflhajpgIkKICAgICAgdGhpcy5lZGl0SXRlbSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoZWRpdEl0ZW0pKTsKICAgICAgdGhpcy50aXRsZSA9IHRoaXMuZWRpdEl0ZW0uaXNlZGl0ID8gJ+e8lui+kScgOiAn5paw5aKeJzsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0uY2xlYXJWYWxpZGF0ZSgpOwogICAgICB9KTsKICAgICAgaWYgKHRoaXMuZWRpdEl0ZW0uaXNlZGl0KSB7CiAgICAgICAgdGhpcy5ydWxlRm9ybS51c2VybmFtZSA9IHRoaXMuZWRpdEl0ZW0udXNlcm5hbWUKICAgICAgICAgID8gdGhpcy5lZGl0SXRlbS51c2VybmFtZQogICAgICAgICAgOiAnJzsKICAgICAgICB0aGlzLmVuZERldkRhdGEgPSB0aGlzLmVkaXRJdGVtLm1lbnVJZHMKICAgICAgICAgID8gdGhpcy5lZGl0SXRlbS5tZW51SWRzLmNvbmNhdCgnLCcsIHRoaXMuZWRpdEl0ZW0ucHJvamVjdElkcykKICAgICAgICAgIDogJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5ydWxlRm9ybS51c2VybmFtZSA9ICcnOwogICAgICB9CiAgICAgIHRoaXMudmlzaWJsZSA9IHRydWU7CiAgICAgIHRoaXMuaW5pdERhdGEoKTsKICAgICAgdGhpcy5nZXRSb2xlTGlzdCgpOwogICAgICB0aGlzLnJ1bGVGb3JtLnJlZ2lvbiA9IHRoaXMuZWRpdEl0ZW0ucm9sZUlkIHx8ICcnOwogICAgfSwKICAgIC8qKgogICAgICog6I635Y+W6I+c5Y2V5YiX6KGo5ZKM5bel56iL5YiX6KGoCiAgICAgKi8KICAgIGluaXREYXRhKCkgewogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICB0aGlzLnBlcm1pc3Npb25MaXN0ID0gW107CiAgICAgIFByb21pc2UuYWxsKFtnZXRNZW51TGlzdCgpLCBnZXRQcm9qZWN0TGlzdCgpXSkKICAgICAgICAudGhlbihyZXMgPT4gewogICAgICAgICAgbGV0IHByb2plY3RMaXN0ID0gewogICAgICAgICAgICBuYW1lOiAn6aG555uu57G75Z6LJywKICAgICAgICAgICAgdHlwZTogJ3Byb2plY3RMaXN0JywKICAgICAgICAgICAgY2hpbGRyZW46IHJlc1sxXS5kYXRhCiAgICAgICAgICB9OwogICAgICAgICAgaWYgKHByb2plY3RMaXN0ICYmIEFycmF5LmlzQXJyYXkocHJvamVjdExpc3QuY2hpbGRyZW4pKSB7CiAgICAgICAgICAgIHByb2plY3RMaXN0LmNoaWxkcmVuLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgaXRlbS5uYW1lID0gaXRlbS5sYWJlbDsKICAgICAgICAgICAgICBpdGVtLm1lbnVJZCA9IGl0ZW0uaWQ7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdCA9IFtwcm9qZWN0TGlzdCwgLi4ucmVzWzBdLmRhdGFdOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5wZXJtaXNzaW9uTGlzdCk7CiAgICAgICAgICB0aGlzLmdldERhdGEoKTsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKCgpID0+IHsKICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluexu+Wei+aVsOaNrgogICAgZ2V0Um9sZUxpc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIHRoaXMucm9sZUxpc3QgPSBbXTsKICAgICAgZ2V0Um9sZUxpc3QoKQogICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgIHRoaXMucm9sZUxpc3QgPSByZXMuZGF0YTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB9KTsKICAgIH0sCiAgICAvKioKICAgICAqIOWFs+mXreaooeaAgeahhuWKqOeUu+e7k+adnwogICAgICovCiAgICBvbkNsb3NlZCgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnKTsKICAgIH0sCiAgICBjbG9zZWQoKSB7CiAgICAgIHRoaXMucmVzZXRGb3JtKCk7CiAgICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIC8vIOadg+mZkOagvOW8j+WMluaVsOaNrgogICAgZ2V0RGF0YSgpIHsKICAgICAgbGV0IGNoaWxkcmVuSXRlbSA9IFtdOwogICAgICB0aGlzLnBlcm1pc3Npb25MaXN0Lm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICB0aGlzLmNoZWNrVHlwZUFsbC5wdXNoKGZhbHNlKTsKICAgICAgICB0aGlzLmlzSW5kZXRlcm1pbmF0ZS5wdXNoKGZhbHNlKTsKICAgICAgICB0aGlzLnNlbGVjdEFyciA9IG5ldyBBcnJheSh0aGlzLnBlcm1pc3Npb25MaXN0Lmxlbmd0aCkuZmlsbChbXSk7CiAgICAgICAgY2hpbGRyZW5JdGVtLnB1c2goaXRlbS5jaGlsZHJlbik7CiAgICAgIH0pOwogICAgICBjaGlsZHJlbkl0ZW0ubWFwKChpdGUsIGluZGV4KSA9PiB7CiAgICAgICAgLy8g6K6+572u6buY6K6k6YCJ5Lit55qE5YC8CiAgICAgICAgdGhpcy5zZWxlY3RBcnJbaW5kZXhdID0gW107CiAgICAgICAgaXRlLm1hcChpdCA9PiB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIHRoaXMuZW5kRGV2RGF0YSAmJgogICAgICAgICAgICB0aGlzLmVuZERldkRhdGEuaW5jbHVkZXMoaXQubWVudUlkID8gaXQubWVudUlkIDogaXQuaWQpCiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy5zZWxlY3RBcnJbaW5kZXhdLnB1c2goaXQpOwogICAgICAgICAgICB0aGlzLmhhbmRsZUNoZWNrZWRDaXRpZXNDaGFuZ2UodGhpcy5zZWxlY3RBcnJbaW5kZXhdLCBbCiAgICAgICAgICAgICAgaW5kZXgsCiAgICAgICAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdFtpbmRleF0KICAgICAgICAgICAgXSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOS4gOe6p+WFqOmAiQogICAgY2hlY2tBbGxCb3godmFsKSB7CiAgICAgIGlmICh2YWwpIHsKICAgICAgICB0aGlzLnBlcm1pc3Npb25MaXN0Lm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgIHRoaXMuY2hlY2tUeXBlQWxsW2luZGV4XSA9IHRydWU7CiAgICAgICAgICB0aGlzLnNlbGVjdEFycltpbmRleF0gPSBpdGVtLmNoaWxkcmVuLm1hcChpdGUgPT4gaXRlKTsKICAgICAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlW2luZGV4XSA9IGZhbHNlOwogICAgICAgICAgdGhpcy5jaGVja0FsbERldGVybWluYXRlID0gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wZXJtaXNzaW9uTGlzdC5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgICB0aGlzLmNoZWNrVHlwZUFsbFtpbmRleF0gPSBmYWxzZTsKICAgICAgICAgIHRoaXMuc2VsZWN0QXJyW2luZGV4XSA9IFtdOwogICAgICAgIH0pOwogICAgICB9CiAgICAgIHRoaXMuZmx1c2hBcnJheSgpOwogICAgfSwKICAgIC8vIOS6jOe6p+WFqOmAiQogICAgaGFuZGxlQ2hlY2tBbGxDaGFuZ2UodmFsdWUsIGl0ZW0sIGluZGV4KSB7CiAgICAgIHRoaXMuc2VsZWN0QXJyW2luZGV4XSA9IHZhbHVlID8gaXRlbS5jaGlsZHJlbi5tYXAoaXQgPT4gaXQpIDogW107CiAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlW2luZGV4XSA9IGZhbHNlOwogICAgICBsZXQgcGVybWlzc2lvbkxpc3RMZW5ndGggPSAwOwogICAgICB0aGlzLnBlcm1pc3Npb25MaXN0Lm1hcChpdGVtID0+IHsKICAgICAgICBwZXJtaXNzaW9uTGlzdExlbmd0aCArPSBpdGVtLmNoaWxkcmVuLmxlbmd0aDsKICAgICAgfSk7CiAgICAgIHRoaXMuY2hlY2tBbGxEZXRlcm1pbmF0ZSA9CiAgICAgICAgdGhpcy5zZWxlY3RBcnIuZmxhdChJbmZpbml0eSkubGVuZ3RoID4gMCAmJgogICAgICAgIHRoaXMuc2VsZWN0QXJyLmZsYXQoSW5maW5pdHkpLmxlbmd0aCAhPT0gcGVybWlzc2lvbkxpc3RMZW5ndGg7CiAgICAgIHRoaXMuY2hlY2tBbGwgPQogICAgICAgIHRoaXMuc2VsZWN0QXJyLmZsYXQoSW5maW5pdHkpLmxlbmd0aCA9PT0gcGVybWlzc2lvbkxpc3RMZW5ndGg7CiAgICAgIHRoaXMuZmx1c2hBcnJheSgpOwogICAgfSwKICAgIC8vIOWtkOiKgueCuWNoYW5nZeS6i+S7tgogICAgaGFuZGxlQ2hlY2tlZENpdGllc0NoYW5nZSh2YWwsIFtpbmRleCwgaXRlbV0pIHsKICAgICAgdGhpcy5jaGVja1R5cGVBbGxbaW5kZXhdID0gdmFsLmxlbmd0aCA9PT0gaXRlbS5jaGlsZHJlbi5sZW5ndGg7CiAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlW2luZGV4XSA9CiAgICAgICAgdmFsLmxlbmd0aCA+IDAgJiYgdmFsLmxlbmd0aCA8IGl0ZW0uY2hpbGRyZW4ubGVuZ3RoOwogICAgICB0aGlzLmNoZWNrQWxsRGV0ZXJtaW5hdGUgPQogICAgICAgIHRoaXMuc2VsZWN0QXJyLmZsYXQoSW5maW5pdHkpLmxlbmd0aCA+IDAgJiYKICAgICAgICAhdGhpcy5jaGVja1R5cGVBbGwuZXZlcnkoaXRlbSA9PiBpdGVtKTsgLy8g5Yik5pat5a2Q6aG56YCJ5Lit55qE5p2h5pWwCiAgICAgIHRoaXMuY2hlY2tBbGwgPSB0aGlzLmNoZWNrVHlwZUFsbC5ldmVyeShpdGVtID0+IGl0ZW0pOwogICAgICB0aGlzLmZsdXNoQXJyYXkoKTsKICAgIH0sCiAgICBmbHVzaEFycmF5KCkgewogICAgICB0aGlzLmlzSW5kZXRlcm1pbmF0ZSA9IHRoaXMuaXNJbmRldGVybWluYXRlLnNsaWNlKDApOwogICAgICB0aGlzLmNoZWNrVHlwZUFsbCA9IHRoaXMuY2hlY2tUeXBlQWxsLnNsaWNlKDApOwogICAgICB0aGlzLnNlbGVjdEFyciA9IHRoaXMuc2VsZWN0QXJyLnNsaWNlKDApOwogICAgfSwKICAgIHN1Ym1pdEZvcm0oZm9ybU5hbWUpIHsKICAgICAgdGhpcy4kcmVmc1tmb3JtTmFtZV0udmFsaWRhdGUodmFsaWQgPT4gewogICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgbGV0IHByb2plY3RJZHMgPSAnJzsKICAgICAgICAgIGxldCBtZW51TGlzdCA9IFtdOwogICAgICAgICAgdGhpcy5zZWxlY3RBcnIuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICAgICAgaWYgKGluZGV4ID09PSAwKSB7CiAgICAgICAgICAgICAgLy8g5YiX6KGo56ys5LiA6aG55Li66aG555uu57G75Z6LCiAgICAgICAgICAgICAgaXRlbS5mb3JFYWNoKHByb2plY3RJZCA9PiB7CiAgICAgICAgICAgICAgICBwcm9qZWN0SWRzICs9IHByb2plY3RJZC5pZCA/IGAke3Byb2plY3RJZC5pZH0sYCA6ICcnOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGl0ZW0uZm9yRWFjaChtZW51SWRzID0+IHsKICAgICAgICAgICAgICAgIC8vIOesrOS6jOmhueWPiuWQjumdouS4uumhtemdouadg+mZkAogICAgICAgICAgICAgICAgbWVudUxpc3QuaW5jbHVkZXMobWVudUlkcy5wYXJlbnRJZCkKICAgICAgICAgICAgICAgICAgPyBudWxsCiAgICAgICAgICAgICAgICAgIDogbWVudUxpc3QucHVzaChtZW51SWRzLnBhcmVudElkKTsKICAgICAgICAgICAgICAgIG1lbnVMaXN0LnB1c2gobWVudUlkcy5tZW51SWQpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICAgIGlmICghcHJvamVjdElkcykgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfor7fpgInmi6npobnnm67nsbvlnosnKTsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQogICAgICAgICAgaWYgKHRoaXMuZWRpdEl0ZW0uaXNlZGl0KSB7CiAgICAgICAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgdXNlcklkOiB0aGlzLmVkaXRJdGVtLnVzZXJJZCwKICAgICAgICAgICAgICB1c2VybmFtZTogdGhpcy5lZGl0SXRlbS51c2VybmFtZSB8fCB0aGlzLnJ1bGVGb3JtLnVzZXJuYW1lLAogICAgICAgICAgICAgIHJvbGVJZDogdGhpcy5ydWxlRm9ybS5yZWdpb24sCiAgICAgICAgICAgICAgcHJvamVjdElkczogcHJvamVjdElkcy5zdWJzdHJpbmcoMCwgcHJvamVjdElkcy5sZW5ndGggLSAxKSwKICAgICAgICAgICAgICBtZW51TGlzdDogbWVudUxpc3QKICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgdXBkYXRlVXNlcihwYXJhbXMpCiAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgaWYgKE51bWJlcih0aGlzLmVkaXRJdGVtLnVzZXJJZCkgPT09IE51bWJlcihnZXRVc2VySWQoKSkpIHsKICAgICAgICAgICAgICAgICAgLy8gZGVidWdnZXI7CiAgICAgICAgICAgICAgICAgIGxldCB7IG1lbnVMaXN0IH0gPSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnYXV0aC9nZXRBdXRoRGF0YScpOyAvLyDojrflj5bmnYPpmZDmlbDmja4KICAgICAgICAgICAgICAgICAgY29uc3QgYWNjZXNzUm91dGVzID0gZ2VuZXJhdGVSb3V0ZXMobWVudUxpc3QpOyAvLyDnlJ/miJDlhYHorrjorr/pl67nmoTot6/nlLEKICAgICAgICAgICAgICAgICAgcm91dGVyLmFkZFJvdXRlcyhhY2Nlc3NSb3V0ZXMpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5jbG9zZWQoKTsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC5jYXRjaCgoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGxldCBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgdXNlcm5hbWU6IHRoaXMuZWRpdEl0ZW0udXNlcm5hbWUgfHwgdGhpcy5ydWxlRm9ybS51c2VybmFtZSwKICAgICAgICAgICAgICByb2xlSWQ6IHRoaXMucnVsZUZvcm0ucmVnaW9uLAogICAgICAgICAgICAgIHByb2plY3RJZHM6IHByb2plY3RJZHMuc3Vic3RyaW5nKDAsIHByb2plY3RJZHMubGVuZ3RoIC0gMSksCiAgICAgICAgICAgICAgbWVudUxpc3Q6IG1lbnVMaXN0CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICAgICAgIGFkZFVzZXIocGFyYW1zKQogICAgICAgICAgICAgIC50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VkKCk7CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5L+u5pS557G75Z6LIOa4heepuuadg+mZkOmAieaLqQogICAgY2hhbmdlUmVnaW9uKCkgewogICAgICB0aGlzLnBlcm1pc3Npb25MaXN0Lm1hcCgoaXRlbSwgaW5kZXgpID0+IHsKICAgICAgICB0aGlzLmNoZWNrVHlwZUFsbFtpbmRleF0gPSBmYWxzZTsKICAgICAgICB0aGlzLnNlbGVjdEFycltpbmRleF0gPSBbXTsKICAgICAgfSk7CiAgICAgIHRoaXMuaXNJbmRldGVybWluYXRlID0gW107CiAgICAgIHRoaXMuY2hlY2tBbGwgPSBmYWxzZTsKICAgICAgdGhpcy5jaGVja0FsbERldGVybWluYXRlID0gZmFsc2U7IC8vIOS4gOe6p+WFqOmAiQogICAgfSwKICAgIHJlc2V0Rm9ybSgpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnMucnVsZUZvcm0ucmVzZXRGaWVsZHMoKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"index.vue","sourceRoot":"src/pages/charity-foundation/views/components/permissionEdit","sourcesContent":["<template>\n  <el-dialog\n    :visible.sync=\"visible\"\n    :v-if=\"visible\"\n    :title=\"title || ''\"\n    center\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    v-on=\"$listeners\"\n    @closed=\"onClosed\"\n    width=\"50%\"\n    v-loading=\"loading\"\n  >\n    <el-form\n      :model=\"ruleForm\"\n      :rules=\"rules\"\n      ref=\"ruleForm\"\n      label-width=\"100px\"\n      class=\"demo-ruleForm\"\n    >\n      <el-form-item label=\"输入账号\" prop=\"username\">\n        <el-input\n          v-model=\"ruleForm.username\"\n          :disabled=\"this.editItem ? this.editItem.isedit : false\"\n        ></el-input>\n      </el-form-item>\n      <el-form-item label=\"选择类型\" prop=\"region\">\n        <el-select\n          v-model=\"ruleForm.region\"\n          placeholder=\"选择类型\"\n          @change=\"changeRegion\"\n        >\n          <el-option\n            v-for=\"(item, index) in roleList\"\n            :key=\"index\"\n            :label=\"item.roleName\"\n            :value=\"item.roleId\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"添加权限\">\n        <div>\n          <el-checkbox\n            :indeterminate=\"checkAllDeterminate\"\n            v-model=\"checkAll\"\n            @change=\"checkAllBox\"\n            >全选</el-checkbox\n          >\n        </div>\n        <div v-for=\"(item, index) in permissionList\" :key=\"item.name\">\n          <el-checkbox\n            :indeterminate=\"isIndeterminate[index]\"\n            v-model=\"checkTypeAll[index]\"\n            @change=\"handleCheckAllChange($event, item, index)\"\n            >{{ item.name }}</el-checkbox\n          >\n          <!-- <div style=\"margin: 15px 0;\"></div> -->\n          <el-checkbox-group\n            v-model=\"selectArr[index]\"\n            @change=\"handleCheckedCitiesChange($event, [index, item])\"\n          >\n            <el-checkbox\n              v-for=\"(ite, inde) in item.children\"\n              :key=\"ite.name\"\n              :label=\"ite\"\n              :checked=\"false\"\n              :ref=\"'reference' + inde + ite.id\"\n            >\n              {{ ite.name }}\n            </el-checkbox>\n          </el-checkbox-group>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\"\n          >确定</el-button\n        >\n        <el-button @click=\"closed\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script>\nimport {\n  Radio,\n  Button,\n  Dialog,\n  FormItem,\n  Input,\n  Form,\n  Checkbox,\n  CheckboxGroup,\n  Option,\n  Select\n} from 'element-ui';\nimport {\n  getMenuList,\n  getProjectList,\n  getRoleList\n} from '../../../api/auth/index';\nimport { updateUser, addUser } from '../../../api/user/index';\nimport router, { generateRoutes } from '../../../router';\nimport { getUserId } from '@/plugins/core/auth';\nexport default {\n  name: 'BImportDataPanel',\n  components: {\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Input.name]: Input,\n    [Radio.name]: Radio,\n    [FormItem.name]: FormItem,\n    [Form.name]: Form,\n    [Checkbox.name]: Checkbox,\n    [CheckboxGroup.name]: CheckboxGroup,\n    [Option.name]: Option,\n    [Select.name]: Select\n  },\n  props: {\n    /**\n     * 成功回调\n     */\n    onSuccess: {\n      type: Function\n    }\n  },\n  data() {\n    let validateInput = (rule, value, callback) => {\n      if (!this.checkSpecialKey(value)) {\n        callback(new Error('不能含有特殊字符！！'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      loading: false,\n      visible: false, // 是否显示模态框\n      title: '',\n      DialogData: null,\n      editItem: null,\n      ruleForm: {\n        username: '',\n        region: ''\n      },\n      roleList: [], // 类型\n      checkAll: false,\n      checkTypeAll: [], // 类型全选状态\n      permissionList: [], // 菜单列表和工程列表数据\n      projectList: [], //项目类型列表\n      isIndeterminate: [], // 二级选中样式\n      selectArr: [], // 选中的子节点\n      checkAllDeterminate: false, // 一级全选\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n          { required: true, message: '请输入账号', trigger: 'change' },\n          // { min: 3, max: 5, message: '长度在 3 到 5 个字符', trigger: 'change' }\n          { validator: validateInput, trigger: 'change' },\n          { validator: validateInput, trigger: 'blur' }\n        ],\n        region: [{ required: true, message: '请选择类型', trigger: 'change' }],\n        checkTypeAll: [\n          { required: true, message: '请选择类型', trigger: 'change' }\n        ]\n      },\n      endDevData: [] // 默认选中的值\n    };\n  },\n  watch: {},\n  methods: {\n    // 正则验证\n    checkSpecialKey(str) {\n      let specialKey =\n        '\"\"[~!#$%^&*()=|{}\\':;\\'\\\\[\\\\]<>/?~！#￥……&*（）——|{}【】‘；：”“\\'。，、？]‘\\'\"\"';\n      for (let i = 0; i < str.length; i++) {\n        if (specialKey.indexOf(str.substr(i, 1)) != -1) {\n          return false;\n        }\n      }\n      return true;\n    },\n    /**\n     * 显示模态框动画结束\n     *  @param {Object}} editItem 修改项\n     */\n    show(editItem) {\n      this.endDevData = [];\n      this.selectArr = [];\n      this.isIndeterminate = [];\n      this.checkAll = false;\n      this.checkTypeAll = []; // 类型全选状态\n      this.checkAllDeterminate = false; // 一级全选\n      this.editItem = JSON.parse(JSON.stringify(editItem));\n      this.title = this.editItem.isedit ? '编辑' : '新增';\n      this.$nextTick(() => {\n        this.$refs.ruleForm.clearValidate();\n      });\n      if (this.editItem.isedit) {\n        this.ruleForm.username = this.editItem.username\n          ? this.editItem.username\n          : '';\n        this.endDevData = this.editItem.menuIds\n          ? this.editItem.menuIds.concat(',', this.editItem.projectIds)\n          : '';\n      } else {\n        this.ruleForm.username = '';\n      }\n      this.visible = true;\n      this.initData();\n      this.getRoleList();\n      this.ruleForm.region = this.editItem.roleId || '';\n    },\n    /**\n     * 获取菜单列表和工程列表\n     */\n    initData() {\n      this.loading = true;\n      this.permissionList = [];\n      Promise.all([getMenuList(), getProjectList()])\n        .then(res => {\n          let projectList = {\n            name: '项目类型',\n            type: 'projectList',\n            children: res[1].data\n          };\n          if (projectList && Array.isArray(projectList.children)) {\n            projectList.children.forEach(item => {\n              item.name = item.label;\n              item.menuId = item.id;\n            });\n          }\n          this.permissionList = [projectList, ...res[0].data];\n          console.log(this.permissionList);\n          this.getData();\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    // 获取类型数据\n    getRoleList() {\n      this.loading = true;\n      this.roleList = [];\n      getRoleList()\n        .then(res => {\n          this.loading = false;\n          this.roleList = res.data;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    /**\n     * 关闭模态框动画结束\n     */\n    onClosed() {\n      this.$emit('close');\n    },\n    closed() {\n      this.resetForm();\n      this.visible = false;\n    },\n    // 权限格式化数据\n    getData() {\n      let childrenItem = [];\n      this.permissionList.map((item, index) => {\n        this.checkTypeAll.push(false);\n        this.isIndeterminate.push(false);\n        this.selectArr = new Array(this.permissionList.length).fill([]);\n        childrenItem.push(item.children);\n      });\n      childrenItem.map((ite, index) => {\n        // 设置默认选中的值\n        this.selectArr[index] = [];\n        ite.map(it => {\n          if (\n            this.endDevData &&\n            this.endDevData.includes(it.menuId ? it.menuId : it.id)\n          ) {\n            this.selectArr[index].push(it);\n            this.handleCheckedCitiesChange(this.selectArr[index], [\n              index,\n              this.permissionList[index]\n            ]);\n          }\n        });\n      });\n    },\n    // 一级全选\n    checkAllBox(val) {\n      if (val) {\n        this.permissionList.map((item, index) => {\n          this.checkTypeAll[index] = true;\n          this.selectArr[index] = item.children.map(ite => ite);\n          this.isIndeterminate[index] = false;\n          this.checkAllDeterminate = false;\n        });\n      } else {\n        this.permissionList.map((item, index) => {\n          this.checkTypeAll[index] = false;\n          this.selectArr[index] = [];\n        });\n      }\n      this.flushArray();\n    },\n    // 二级全选\n    handleCheckAllChange(value, item, index) {\n      this.selectArr[index] = value ? item.children.map(it => it) : [];\n      this.isIndeterminate[index] = false;\n      let permissionListLength = 0;\n      this.permissionList.map(item => {\n        permissionListLength += item.children.length;\n      });\n      this.checkAllDeterminate =\n        this.selectArr.flat(Infinity).length > 0 &&\n        this.selectArr.flat(Infinity).length !== permissionListLength;\n      this.checkAll =\n        this.selectArr.flat(Infinity).length === permissionListLength;\n      this.flushArray();\n    },\n    // 子节点change事件\n    handleCheckedCitiesChange(val, [index, item]) {\n      this.checkTypeAll[index] = val.length === item.children.length;\n      this.isIndeterminate[index] =\n        val.length > 0 && val.length < item.children.length;\n      this.checkAllDeterminate =\n        this.selectArr.flat(Infinity).length > 0 &&\n        !this.checkTypeAll.every(item => item); // 判断子项选中的条数\n      this.checkAll = this.checkTypeAll.every(item => item);\n      this.flushArray();\n    },\n    flushArray() {\n      this.isIndeterminate = this.isIndeterminate.slice(0);\n      this.checkTypeAll = this.checkTypeAll.slice(0);\n      this.selectArr = this.selectArr.slice(0);\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          let projectIds = '';\n          let menuList = [];\n          this.selectArr.forEach((item, index) => {\n            if (index === 0) {\n              // 列表第一项为项目类型\n              item.forEach(projectId => {\n                projectIds += projectId.id ? `${projectId.id},` : '';\n              });\n            } else {\n              item.forEach(menuIds => {\n                // 第二项及后面为页面权限\n                menuList.includes(menuIds.parentId)\n                  ? null\n                  : menuList.push(menuIds.parentId);\n                menuList.push(menuIds.menuId);\n              });\n            }\n          });\n          if (!projectIds) {\n            this.$message.error('请选择项目类型');\n            return false;\n          }\n          if (this.editItem.isedit) {\n            let params = {\n              userId: this.editItem.userId,\n              username: this.editItem.username || this.ruleForm.username,\n              roleId: this.ruleForm.region,\n              projectIds: projectIds.substring(0, projectIds.length - 1),\n              menuList: menuList\n            };\n            this.loading = true;\n            updateUser(params)\n              .then(res => {\n                this.loading = false;\n                if (Number(this.editItem.userId) === Number(getUserId())) {\n                  // debugger;\n                  let { menuList } = this.$store.dispatch('auth/getAuthData'); // 获取权限数据\n                  const accessRoutes = generateRoutes(menuList); // 生成允许访问的路由\n                  router.addRoutes(accessRoutes);\n                }\n                this.closed();\n              })\n              .catch(() => {\n                this.loading = false;\n              });\n          } else {\n            let params = {\n              username: this.editItem.username || this.ruleForm.username,\n              roleId: this.ruleForm.region,\n              projectIds: projectIds.substring(0, projectIds.length - 1),\n              menuList: menuList\n            };\n            this.loading = true;\n            addUser(params)\n              .then(res => {\n                this.loading = false;\n                this.closed();\n              })\n              .catch(() => {\n                this.loading = false;\n              });\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 修改类型 清空权限选择\n    changeRegion() {\n      this.permissionList.map((item, index) => {\n        this.checkTypeAll[index] = false;\n        this.selectArr[index] = [];\n      });\n      this.isIndeterminate = [];\n      this.checkAll = false;\n      this.checkAllDeterminate = false; // 一级全选\n    },\n    resetForm() {\n      this.$nextTick(() => {\n        this.$refs.ruleForm.resetFields();\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.import-data-content {\n  h3 {\n    font-size: 16px;\n    color: #303133;\n  }\n  p {\n    font-size: 14px;\n    margin: 15px 0;\n  }\n}\n/deep/.el-input {\n  width: 217px;\n}\n/deep/.el-checkbox-group {\n  margin-left: 20px;\n}\n</style>\n"]}]}