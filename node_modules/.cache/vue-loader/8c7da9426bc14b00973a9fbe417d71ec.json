{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/components/wangEdit.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/components/wangEdit.vue","mtime":1627979214324},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4vLi4vYXNzZXRzL2xlc3MvbWl4aW5zL21peGlucyc7Ci5lZGl0b3IgewogIHdpZHRoOiAucHgyUmVtKDc2MHB4KSBbIEByZW1dOwogIGNvbG9yOiAjMzMzOwogIC53LWUtbWVudSB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBwYWRkaW5nOiA4cHggMTFweDsKICB9CiAgLnctZS10ZXh0LWNvbnRhaW5lciB7CiAgICB6LWluZGV4OiAwICFpbXBvcnRhbnQ7CiAgfQogIC50b29sYmFyIC53LWUtbWVudSB7CiAgICB6LWluZGV4OiAyICFpbXBvcnRhbnQ7CiAgfQogIHVsLAogIHVsID4gbGkgewogICAgbGlzdC1zdHlsZS10eXBlOiBkaXNjOwogICAgbGlzdC1zdHlsZS1wb3NpdGlvbjogaW5zaWRlOwogIH0KICBvbCwKICBvbCA+IGxpIHsKICAgIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsKICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTsKICB9Cn0KLnRvb2xiYXIgewogIGJvcmRlcjogMXB4IHNvbGlkICNjZGNkY2Q7CiAgYmFja2dyb3VuZDogI2YxZjFmMTsKfQouZWRpdG9yLXRleHQgewogIGJvcmRlcjogMXB4IHNvbGlkICNjZGNkY2Q7CiAgaGVpZ2h0OiAzMjZweDsKICBib3JkZXItdG9wOiAwOwogIHRleHQtYWxpZ246IGxlZnQ7CiAgei1pbmRleDogMiAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["wangEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"wangEdit.vue","sourceRoot":"src/pages/school-book/components","sourcesContent":["<template lang=\"html\">\n  <div class=\"editor\">\n    <div ref=\"toolbar\" class=\"toolbar\"></div>\n    <div ref=\"editor\" class=\"editor-text\"></div>\n  </div>\n</template>\n\n<script>\nimport E from 'wangeditor';\nimport config from './../config';\nimport { uploadFile } from './../api/data';\nexport default {\n  name: 'editoritem',\n  data() {\n    return {\n      // uploadPath,\n      editor: null,\n      info_: null\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    isClear: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    isClear(val) {\n      // 触发清除文本域内容\n      if (val) {\n        this.editor.txt.clear();\n        this.info_ = null;\n      }\n    },\n    value: function(value) {\n      if (value !== this.editor.txt.html()) {\n        this.editor.txt.html(this.value);\n      }\n    }\n    //value为编辑框输入的内容，这里我监听了一下值，当父组件调用得时候，如果给value赋值了，子组件将会显示父组件赋给的值\n  },\n  mounted() {\n    this.seteditor();\n    this.editor.txt.html(this.value);\n  },\n  methods: {\n    stopEditor() {\n      // console.log('ss')\n      this.editor.$textElem.attr('contenteditable', false);\n    },\n    seteditor() {\n      // http://192.168.2.125:8080/admin/storage/create\n      this.editor = new E(this.$refs.toolbar, this.$refs.editor);\n      this.editor.config.uploadImgShowBase64 = true; // base 64 存储图片\n      // this.editor.config.uploadImgServer = '/fast-file/file/uploadGroup/group2'// 配置服务器端地址\n      // this.editor.config.uploadImgServer =\n      //   config.FILE_PREFIX + '/uploadFile/uploadImag'; // 配置服务器端地址\n      this.editor.config.uploadImgServer =\n        '/run-school-bible-admin/uploadFile/uploadImag'; // 配置服务器端地址\n      this.editor.config.uploadImgHeaders = {}; // 自定义 header\n      this.editor.config.uploadFileName = 'file'; // 后端接受上传文件的参数名\n      this.editor.config.uploadImgMaxSize = 50 * 1024 * 1024; // 将图片大小限制为 50M\n      // this.editor.config.uploadImgMaxLength = 1; // 限制一次最多上传 3 张图片\n      this.editor.config.uploadImgTimeout = 3 * 60 * 1000; // 设置超时时间\n      this.editor.config.showLinkImg = false;\n      this.editor.config.pasteIgnoreImg = true;\n      //this.editor.config.pasteFilterStyle = false;\n\n      // 配置菜单\n      this.editor.config.menus = [\n        'head', // 标题\n        'bold', // 粗体\n        'fontSize', // 字号\n        'fontName', // 字体\n        'italic', // 斜体\n        'underline', // 下划线\n        'strikeThrough', // 删除线\n        'foreColor', // 文字颜色\n        'backColor', // 背景颜色\n        // 'link', // 插入链接\n        'list', // 列表\n        'justify', // 对齐方式\n        'lineHeight', //设置行高\n        'quote', // 引用\n        // 'emoticon', // 表情\n        'image', // 插入图片\n        'table', // 表格\n        // 'video', // 插入视频\n        // 'code', // 插入代码\n        'undo', // 撤销\n        'redo', // 重复\n        'fullscreen' // 全屏\n      ];\n      // this.editor.config.pasteTextHandle = function(content) {\n      //   console.log('content', content);\n      //   let _div = document.createElement('div');\n      //   _div.innerHTML = content;\n      //   console.log('div', _div.getElementsByTagName('img'));\n      //   const img = _div.getElementsByTagName('img');\n      //   // 创建 一个FileReader对象\n      //   var reader = new FileReader();\n      //   console.log(img[0].src);\n      //   // 读取文件作为URL可访问地址\n      //   // reader.readAsDataURL(img[0].src);\n      //   // console.log('reader', reader);\n      //   //异步加载文件成功\n      //   reader.onload = function(e) {\n      //     // this 对象为reader\n      //     // reader.result 表示图片地址\n      //     console.log('reader', reader, e);\n      //     reader.uploadBox.wrapInner(\n      //       '<img style=\"width:100%;height:100%; padding:.2rem;\" src=\"' +\n      //         reader.result +\n      //         '\" />'\n      //     );\n      //   };\n      //   // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n      //   // if (content == '' && !content) return '';\n      //   // var str = content;\n      //   // str = str.replace(/<xml>[\\s\\S]*?<\\/xml>/gi, '');\n      //   // str = str.replace(/<style>[\\s\\S]*?<\\/style>/gi, '');\n      //   // str = str.replace(/<\\/?[^>]*>/g, '');\n      //   // str = str.replace(/[ | ]*\\n/g, '\\n');\n      //   // str = str.replace(/&nbsp;/gi, '');\n      //   // console.log('****', content);\n      //   // console.log('****', str);\n      //   // return str;\n      // };\n      this.editor.config.uploadImgHooks = {\n        fail: (xhr, editor, result) => {\n          // 插入图片失败回调\n        },\n        success: (xhr, editor, result) => {\n          // 图片上传成功回调\n        },\n        timeout: (xhr, editor) => {\n          // 网络超时的回调\n        },\n        error: (xhr, editor) => {\n          // 图片上传错误的回调\n        },\n        customInsert: (insertImg, result, editor) => {\n          // 图片上传成功，插入图片的回调\n          //result为上传图片成功的时候返回的数据，这里我打印了一下发现后台返回的是data：[{url:\"路径的形式\"},...]\n          // insertImg()\n          //循环插入图片\n          // for (let i = 0; i < 1; i++) {\n          //   console.log(result)\n          // let url = `/fast-file/file/downLoadFiles?url=${result.data}`\n          let url = config.FILE_PREFIX + result.data.url;\n          insertImg(url);\n          // }\n        }\n      };\n      this.editor.config.customUploadImg = (files, insert) => {\n        let arr = [];\n        let len = files && files.length;\n        let i = 0;\n        const loading = this.$loading({\n          lock: true, //lock的修改符--默认是false\n          text: '上传中。。。。。。', //显示在加载图标下方的加载文案\n          spinner: 'el-icon-loading', //自定义加载图标类名\n          background: 'rgba(0, 0, 0, 0.7)', //遮罩层颜色\n          target: document.querySelector('#table') //loadin覆盖的dom元素节点\n        });\n\n        files.forEach((item, index) => {\n          setTimeout(() => {\n            uploadFile(item)\n              .then(res => {\n                i++;\n                let url = config.FILE_PREFIX + res.data.url;\n                arr[index] = url;\n                if (i === len) {\n                  for (let i = 0; i < arr.length; i++) {\n                    insert(arr[i]);\n                  }\n                  //成功回调函数停止加载\n                  loading.close();\n                }\n              })\n              .catch(e => {\n                i++;\n                if (i === len) {\n                  loading.close();\n                }\n              });\n          }, 20);\n        });\n      };\n      this.editor.config.onchange = html => {\n        this.info_ = html; // 绑定当前逐渐地值\n        this.$emit('change', this.info_); // 将内容同步到父组件中\n      };\n      // 创建富文本编辑器\n      this.editor.create();\n      document.querySelector('.w-e-toolbar').style.zIndex = 1000;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\">\n@import './../assets/less/mixins/mixins';\n.editor {\n  width: .px2Rem(760px) [ @rem];\n  color: #333;\n  .w-e-menu {\n    font-size: 14px;\n    padding: 8px 11px;\n  }\n  .w-e-text-container {\n    z-index: 0 !important;\n  }\n  .toolbar .w-e-menu {\n    z-index: 2 !important;\n  }\n  ul,\n  ul > li {\n    list-style-type: disc;\n    list-style-position: inside;\n  }\n  ol,\n  ol > li {\n    list-style-type: decimal;\n    list-style-position: inside;\n  }\n}\n.toolbar {\n  border: 1px solid #cdcdcd;\n  background: #f1f1f1;\n}\n.editor-text {\n  border: 1px solid #cdcdcd;\n  height: 326px;\n  border-top: 0;\n  text-align: left;\n  z-index: 2 !important;\n}\n</style>\n"]}]}