{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/views/system/Organization/index.vue?vue&type=style&index=0&id=65561286&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/views/system/Organization/index.vue","mtime":1645178321195},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlYWRlciB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBtYXJnaW4tYm90dG9tOiAxMHB4Owp9Ci5kaXZpZGVyIHsKICBmb250LXNpemU6IDE0cHg7CiAgbWFyZ2luOiAwIDRweDsKICBsaW5lLWhlaWdodDogMThweDsKfQouZWwtcGFnaW5hdGlvbi1zbG90IHsKICBjb2xvcjogQG5vcm1hbC10eHQ7CiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsKICBtYXJnaW4tcmlnaHQ6IC01NHB4OwogIGJhY2tncm91bmQ6ICNmZmY7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB6LWluZGV4OiAxOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/sims/views/system/Organization","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 头部 -->\n    <div class=\"header\">\n      <el-button type=\"primary\" size=\"small\" @click=\"onAddProject(true, -1)\">\n        新增一级机构\n      </el-button>\n    </div>\n    <!-- 树列表 -->\n    <c-table\n      v-loading=\"tableLoading\"\n      class=\"c-table\"\n      border\n      size=\"small\"\n      empty-text=\"自建组织机构暂无数据\"\n      :data=\"treeData\"\n      :headers=\"headers\"\n      row-key=\"serialNumber\"\n    >\n      <!-- 操作列自定义插件 -->\n      <template slot=\"column|undefined\" slot-scope=\"{ row }\">\n        <!-- 一级机构可以添加子机构 -->\n        <el-button\n          type=\"text\"\n          size=\"mini\"\n          v-if=\"isLevel1Project(row)\"\n          @click=\"onAddProject(false, row.organizationCode)\"\n        >\n          添加子机构\n        </el-button>\n        <span v-if=\"isLevel1Project(row)\" class=\"divider\">|</span>\n        <el-button type=\"text\" size=\"mini\" @click=\"onClickEditProject(row)\">\n          编辑\n        </el-button>\n      </template>\n    </c-table>\n    <!-- 新增编辑弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"dialogForm.visible = false\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click=\"onClickSaveProject\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport CTable from '@/components/common/CTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Checkbox, Link, Input, Dialog } from 'element-ui';\nimport {\n  queryAllList,\n  insertOrg,\n  updateOrg\n} from '../../../api/system/organization';\nimport { querySchoolInfoList } from '../../../api/school/index';\nimport utils from '@/plugins/common/utils';\nimport {\n  formatNullValue,\n  formatAmountValue,\n  formatStatusValue\n} from '../../../plugins/vue-filters';\n\nexport default {\n  name: 'ChargingProjects',\n  components: {\n    [CTable.name]: CTable,\n    [Checkbox.name]: Checkbox,\n    [Link.name]: Link,\n    [Input.name]: Input,\n    [Dialog.name]: Dialog,\n    CDynamicForm\n  },\n  data() {\n    return {\n      // 树数据\n      treeData: [],\n      // 表格列配置\n      headers: [\n        {\n          label: '序号',\n          prop: 'serialNumber',\n          resizable: false\n        },\n        {\n          label: '机构名称',\n          prop: 'organizationName',\n          resizable: false\n        },\n        {\n          label: '机构代码',\n          prop: 'organizationCode',\n          width: '100px',\n          resizable: false\n        },\n        {\n          label: '所属学校',\n          prop: 'newSchoolName',\n          resizable: false,\n          formatter: (row, col, val) =>\n            !val ? formatNullValue(val) : formatAmountValue(val)\n        },\n        {\n          label: '机构描述',\n          prop: 'organizationDesc',\n          resizable: false,\n          formatter: (row, col, val) =>\n            !val ? formatNullValue(val) : formatAmountValue(val)\n        },\n        {\n          label: '报表排序',\n          prop: 'newSort',\n          resizable: false,\n          formatter: (row, col, val) =>\n            !val ? formatNullValue(val) : formatAmountValue(val)\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          resizable: false,\n          formatter: (row, col, val) => formatStatusValue(val)\n        },\n        {\n          label: '操作',\n          colType: 'column',\n          width: '150px',\n          fixed: 'right',\n          resizable: false\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        isEdit: false,\n        // 表单提交中\n        loading: false,\n        // 是否为一级机构\n        isFirst: true\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '110px',\n        rules: {\n          organizationName: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '机构名称未填写'\n            },\n            {\n              type: 'string',\n              max: 20,\n              trigger: 'blur',\n              message: '机构名称不超过20个字'\n            }\n          ],\n          organizationCode: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '机构代码未填写'\n            },\n            {\n              pattern: /^\\d{0,20}$/,\n              trigger: 'blur',\n              message: '机构代码请输入自然数，长度不超过20位数'\n            }\n          ],\n          departSort: [\n            {\n              pattern: /^[1-9][0-9]{0,2}$/,\n              trigger: 'blur',\n              message: '报表排序请输入正整数，长度不超过3位数'\n            }\n          ],\n          organizationDesc: [\n            {\n              type: 'string',\n              max: 50,\n              trigger: 'blur',\n              message: '机构描述不超过50个字'\n            }\n          ],\n          status: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '状态未填写'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {},\n      // 列表加载中\n      tableLoading: false\n    };\n  },\n  computed: {\n    // 弹框标题\n    dialogTitle() {\n      if (this.dialogForm.isEdit) {\n        return this.dialogForm.isFirst ? '编辑一级机构' : '编辑子机构';\n      } else {\n        return this.dialogForm.isFirst ? '新增一级机构' : '新增子机构';\n      }\n    },\n    // 窗表单子项\n    dialogFormItems() {\n      // 子机构\n      let items = [\n        {\n          type: 'select',\n          prop: 'schoolCode',\n          label: '所属学校：',\n          valueKey: 'schoolCode',\n          labelKey: 'schoolName',\n          labelProp: 'schoolName',\n          ajax: function() {\n            return querySchoolInfoList({ codeType: 2 }).then(data => data.data);\n          }\n        },\n        {\n          type: 'input',\n          prop: 'departSort',\n          label: '报表排序：',\n          attrs: {\n            maxlength: 3\n          }\n        }\n      ];\n      let otherItems = this.dialogForm.isFirst ? [] : items;\n      let dialogFormItems = [\n        {\n          type: 'input',\n          prop: 'organizationName',\n          label: '机构名称：',\n          attrs: {\n            maxlength: 20\n          }\n        },\n        {\n          type: 'input',\n          prop: 'organizationCode',\n          label: '机构代码：',\n          attrs: {\n            maxlength: 20,\n            disabled: this.dialogForm.isEdit\n          }\n        },\n        ...otherItems,\n        {\n          type: 'input',\n          prop: 'organizationDesc',\n          label: '机构描述：',\n          attrs: {\n            type: 'textarea',\n            maxlength: 50,\n            showWordLimit: true\n          }\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: [\n            {\n              label: '启用',\n              value: true\n            },\n            {\n              label: '禁用',\n              value: false\n            }\n          ]\n        }\n      ];\n      return dialogFormItems;\n    }\n  },\n  mounted() {\n    this.ajaxGetData();\n  },\n  methods: {\n    /**\n     * 新增一级机构/子机构\n     * @param { Number } parentCode,一级机构传入参数为 -1;子机构传入参数为 id\n     * @param { Boolean} isFirst, true为一级机构；false为子机构\n     */\n    onAddProject(isFirst, parentCode) {\n      this.dialogForm.isFirst = isFirst;\n      this.dialogForm.isEdit = false;\n      this.dialogForm.visible = true;\n      this.initDialogFormData({\n        parentOrganizationCode: parentCode,\n        status: true\n      });\n    },\n    /**\n     * 点击编辑机构\n     * @param {*} item 机构\n     */\n    onClickEditProject(item) {\n      this.dialogForm.isFirst = item.parentOrganizationCode === '-1';\n      this.dialogForm.isEdit = true;\n      this.dialogForm.visible = true;\n      this.initDialogFormData(item);\n    },\n    /**\n     * 保存、编辑机构\n     * @param {*} item 机构\n     */\n    onClickSaveProject() {\n      // 校验表单\n      this.$refs['elForm'].validate().then(() => {\n        // 校验成功\n        this.dialogForm.loading = true;\n        delete this.dialogFormData.newSort;\n        delete this.dialogFormData.newSchoolName;\n        if (!this.dialogForm.isEdit) {\n          insertOrg(this.dialogFormData)\n            .then(() => {\n              this.$message.success('操作成功');\n              this.dialogForm.visible = false;\n              this.ajaxGetData();\n            })\n            .finally(() => {\n              this.dialogForm.loading = false;\n            });\n        } else {\n          updateOrg(this.dialogFormData)\n            .then(() => {\n              this.$message.success('操作成功');\n              this.dialogForm.visible = false;\n              this.ajaxGetData();\n            })\n            .finally(() => {\n              this.dialogForm.loading = false;\n            });\n        }\n      });\n    },\n    /**\n     * 点击取消编辑\n     * @param {*} item 机构\n     */\n    onClickCancelEdit(item) {},\n    //表单关闭前清除校验并重置数据\n    onCloseForm() {\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n\n    /**\n     * 请求table数据\n     */\n    ajaxGetData() {\n      this.tableLoading = true;\n      return queryAllList({\n        isDeleted: false\n      })\n        .then(({ data }) => {\n          // 列表转树形数据\n          let tree = utils.listConvertTree(\n            data,\n            'organizationCode',\n            'parentOrganizationCode',\n            false\n          );\n          tree.forEach((parent, index) => {\n            index += 1;\n            parent.serialNumber = index;\n            parent.newSort = null;\n            if (Array.isArray(parent.children)) {\n              parent.newSchoolName = '-';\n              parent.children.forEach((item, i) => {\n                item.serialNumber = index + '.' + (i + 1);\n                item.newSort = item.departSort;\n                item.newSchoolName = item.schoolName;\n                if (Array.isArray(item.children)) {\n                  item.children.forEach((cell, j) => {\n                    cell.serialNumber = item.serialNumber + '.' + (j + 1);\n                    cell.newSchoolName = cell.schoolName;\n                    cell.newSort = cell.departSort;\n                  });\n                }\n              });\n            } else {\n              parent.newSchoolName = parent.schoolName;\n            }\n          });\n          this.treeData = tree;\n        })\n        .finally(() => {\n          this.tableLoading = false;\n        });\n    },\n\n    /**\n     * 初始化新建表单的数据默认值\n     * @param {*} data 编辑数据\n     */\n    initDialogFormData(data) {\n      this.dialogFormData = {\n        ...data\n      };\n    },\n\n    /**\n     * 是否是一级机构\n     */\n    isLevel1Project(item) {\n      let { serialNumber } = item;\n      serialNumber = serialNumber || '';\n      return serialNumber.toString().split('.').length <= 2;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n.divider {\n  font-size: 14px;\n  margin: 0 4px;\n  line-height: 18px;\n}\n.el-pagination-slot {\n  color: @normal-txt;\n  font-weight: normal;\n  margin-right: -54px;\n  background: #fff;\n  display: inline-block;\n  position: relative;\n  z-index: 1;\n}\n</style>\n"]}]}