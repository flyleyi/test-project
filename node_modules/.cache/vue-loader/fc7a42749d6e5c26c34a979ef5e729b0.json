{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/AnswerList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/AnswerList.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AnswerList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AnswerList.vue","sourceRoot":"src/pages/school-book/views/questManage","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"回复管理暂无数据\"\n      :headers=\"headers\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"ajaxGetData\"\n      @reset-form=\"resetForm\"\n      :pageLimit=\"10\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :showRefresh=\"false\"\n    >\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineAnswer(row)\"\n            v-auth=\"['quest-answer-examine']\"\n            >审核</el-button\n          >\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteAnswer(row)\"\n            v-auth=\"['quest-answer-delete']\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"'审核'\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"dialogForm.visible = false\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button } from 'element-ui';\nimport { getIdsArr } from '../../plugins/common/utils';\nimport {\n  getAnswerList,\n  auditAnswertatus,\n  deleteAnswer\n} from '../../api/question';\nexport default {\n  name: 'AnswerList',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n  data() {\n    return {\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n        },\n        {\n          label: '回复内容',\n          prop: 'answer',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '编辑时间',\n          prop: 'createTime'\n        },\n        {\n          label: '审核时间',\n          prop: 'reviewTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          formatter: (row, col, val) => {\n            if (val !== null) {\n              return this.$D('SHZT', val.toString());\n            } else {\n              return '-';\n            }\n          }\n        },\n        {\n          label: '操作',\n          slotName: 'opera',\n          colType: 'column',\n          // colType: 'btns',\n          btns: []\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'input',\n          prop: 'answer',\n          label: '回复内容：'\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'updateTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        }\n      ],\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineAnswer,\n          hidden: () => !this.$has(['quest-answer-examine'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteAnswer,\n          hidden: () => !this.$has(['quest-answer-delete'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '审核结果未填写'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '不通过原因未填写'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '原因未填写'\n            },\n            {\n              trigger: 'blur',\n              max: 15,\n              message: '限制15字以内'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {}\n    };\n  },\n  computed: {\n    /**\n     * 问题ID\n     */\n    id() {\n      return this.$route.query.id;\n    },\n    // 弹窗表单子项\n    dialogFormItems() {\n      let codeOptions = [];\n      this.$D('SHZT').map(item => {\n        if (item.value != 0) {\n          codeOptions.push(item);\n        }\n      });\n      return [\n        {\n          type: 'select',\n          prop: 'code',\n          label: '审核结果：',\n          options: codeOptions,\n          attrs: {}\n        },\n        {\n          type: 'select',\n          prop: 'nopassKey',\n          label: '不通过原因：',\n          options: this.$D('BTGYY'),\n          hidden(model) {\n            return model.code != 1;\n          },\n          attrs: {}\n        },\n        {\n          type: 'input',\n          prop: 'nopassReason',\n          label: '原因：',\n          hidden(model) {\n            return (\n              !model.code ||\n              model.code == 2 ||\n              !model.nopassKey ||\n              model.nopassKey != 4\n            );\n          },\n          attrs: {\n            maxlength: 15,\n            placeholder: '限制15字以内'\n          }\n        }\n      ];\n    }\n  },\n  watch: {\n    id() {\n      this.refreshTable();\n    }\n  },\n  created() {},\n  mounted() {},\n  methods: {\n    //重置表格查询\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(params) {\n      if (params.updateTime) {\n        params.editStartTime = params.updateTime[0];\n        params.editEndTime = params.updateTime[1];\n      }\n      if (params.reviewTime) {\n        params.revStartTime = params.reviewTime[0];\n        params.revEndTime = params.reviewTime[1];\n      }\n      delete params.updateTime;\n      delete params.reviewTime;\n      return getAnswerList({\n        ...params,\n        id: this.id\n      });\n    },\n    /**\n     * 刷新列表\n     */\n    refreshTable() {\n      this.$nextTick(() => {\n        this.$refs.bTable && this.$refs.bTable.onRefreshTable();\n      });\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {\n        code: '',\n        ids: [],\n        noPassReason: '',\n        nopassKey: ''\n      };\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        // 校验成功\n        auditAnswertatus(this.dialogFormData)\n          .then(() => {\n            this.$message.success('操作成功');\n            this.dialogForm.visible = false;\n            this.refreshTable();\n          })\n          .finally(() => {\n            this.dialogForm.loading = false;\n          });\n      });\n    },\n    /**\n     * 审核问题\n     */\n    onExamineAnswer(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个回复');\n        return;\n      }\n      this.dialogFormData.ids = getIdsArr(rows);\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteAnswer(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个回复');\n        return;\n      }\n      this.$confirm('确定要删除当前回复?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteAnswer(getIdsArr(rows)).then(() => {\n          this.$message.success('操作成功');\n          this.refreshTable();\n        });\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}