{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/MessageReply.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/MessageReply.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBCVGFibGUgZnJvbSAnQC9jb21wb25lbnRzL2J1c2luZXNzL0JUYWJsZSc7CmltcG9ydCBDRHluYW1pY0Zvcm0gZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9DRHluYW1pY0Zvcm0vaW5kZXgnOwppbXBvcnQgeyBEaWFsb2csIEJ1dHRvbiwgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgY29uZmlnIGZyb20gJy4vLi4vLi4vY29uZmlnJzsKaW1wb3J0IHsKICBnZXRNZXNzYWdlTGlzdCwKICBleGFtTWVzc2FnZSwKICBkZWxldGVNZXNzYWdlLAogIHJlcGx5TWVzc2FnZQp9IGZyb20gJy4vLi4vLi4vYXBpL2RhdGEnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ01lc3NhZ2VSZXBseScsCiAgY29tcG9uZW50czogewogICAgQlRhYmxlLAogICAgQ0R5bmFtaWNGb3JtLAogICAgW0RpYWxvZy5uYW1lXTogRGlhbG9nLAogICAgW0J1dHRvbi5uYW1lXTogQnV0dG9uCiAgfSwKICBwcm9wczoge30sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+WbvueJh+WJjee8gAogICAgICAvLyDooajljZXliJcKICAgICAgaGVhZGVyczogWwogICAgICAgIHsKICAgICAgICAgIHR5cGU6ICdzZWxlY3Rpb24nCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnaW5kZXgnLAogICAgICAgICAgbGFiZWw6ICfluo/lj7cnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+WbnuWkjeWGheWuuScsCiAgICAgICAgICBwcm9wOiAnY29udGVudCcsCiAgICAgICAgICBmaXhlZDogJ2xlZnQnLAogICAgICAgICAgd2lkdGg6ICcxNTAnLAogICAgICAgICAgJ3Nob3ctb3ZlcmZsb3ctdG9vbHRpcCc6IHRydWUsCiAgICAgICAgICBjb2xUeXBlOiAnY29sdW1uJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICflm77niYcnLAogICAgICAgICAgcHJvcDogJ2ltYWdlJywKICAgICAgICAgIHdpZHRoOiAnMTUwJywKICAgICAgICAgIGNvbFR5cGU6ICdjb2x1bW4nCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+mZhOS7ticsCiAgICAgICAgICBwcm9wOiAnZmlsZScsCiAgICAgICAgICBjb2xUeXBlOiAnY29sdW1uJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICfngrnotZ7mlbAnLAogICAgICAgICAgcHJvcDogJ2xpa2VDb3VudCcKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn566h55CG5ZGY5Zue5aSNJywKICAgICAgICAgIHByb3A6ICdyZXBseUNvbnRlbnQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+e8lui+keaXtumXtCcsCiAgICAgICAgICB3aWR0aDogJzE2MCcsCiAgICAgICAgICBwcm9wOiAnY3JlYXRlVGltZScsCiAgICAgICAgICAndmFsdWUtZm9ybWF0JzogJ3l5eXktTU0tZGQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+WuoeaguOaXtumXtCcsCiAgICAgICAgICB3aWR0aDogJzE2MCcsCiAgICAgICAgICBwcm9wOiAncmV2aWV3VGltZScKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn5Zue5aSN5pe26Ze0JywKICAgICAgICAgIHdpZHRoOiAnMTYwJywKICAgICAgICAgIHByb3A6ICdhZG1pbkFuc3dlclRpbWUnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+eKtuaAgScsCiAgICAgICAgICBwcm9wOiAnc3RhdHVzJywKICAgICAgICAgIGNvbFR5cGU6ICdjb2x1bW4nCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ+aTjeS9nCcsCiAgICAgICAgICB3aWR0aDogJzEyMCcsCiAgICAgICAgICBmaXhlZDogJ3JpZ2h0JywKICAgICAgICAgIHNsb3ROYW1lOiAnb3BlcmEnLAogICAgICAgICAgY29sVHlwZTogJ2NvbHVtbicKICAgICAgICAgIC8vIGNvbFR5cGU6ICdidG5zJywKICAgICAgICAgIC8vIGJ0bnM6IFsKICAgICAgICAgIC8vICAgewogICAgICAgICAgLy8gICAgIGxhYmVsOiAn5a6h5qC4JywKICAgICAgICAgIC8vICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICAvLyAgICAgc2l6ZTogJ21pbmknLAogICAgICAgICAgLy8gICAgIGNsaWNrOiB0aGlzLm9uRXhhbWluZVF1ZXN0CiAgICAgICAgICAvLyAgIH0sCiAgICAgICAgICAvLyAgIHsKICAgICAgICAgIC8vICAgICBsYWJlbDogJ+WbnuWkjScsCiAgICAgICAgICAvLyAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgLy8gICAgIHNpemU6ICdtaW5pJywKICAgICAgICAgIC8vICAgICBjbGljazogdGhpcy5vblJlcGx5UXVlc3QKICAgICAgICAgIC8vICAgfSwKICAgICAgICAgIC8vICAgewogICAgICAgICAgLy8gICAgIGxhYmVsOiAn5Yig6ZmkJywKICAgICAgICAgIC8vICAgICB0eXBlOiAndGV4dCcsCiAgICAgICAgICAvLyAgICAgc2l6ZTogJ21pbmknLAogICAgICAgICAgLy8gICAgIGNsaWNrOiB0aGlzLmRlbGV0ZVF1ZXN0CiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vIF0KICAgICAgICB9CiAgICAgIF0sCiAgICAgIC8vIOafpeivouihqOWNlemFjee9rgogICAgICBmb3JtSXRlbXM6IFsKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnaW5wdXQnLAogICAgICAgICAgcHJvcDogJ2NvbnRlbnQnLAogICAgICAgICAgbGFiZWw6ICflm57lpI3lhoXlrrnvvJonLAogICAgICAgICAgYXR0cnM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAn5Zue5aSN5YaF5a65JwogICAgICAgICAgICB9CiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAvLyB7CiAgICAgICAgLy8gICB0eXBlOiAnc2VsZWN0JywKICAgICAgICAvLyAgIHByb3A6ICdpc0ltZycsCiAgICAgICAgLy8gICBsYWJlbDogJ+aYr+WQpuacieWbvueJh++8micsCiAgICAgICAgLy8gICBvcHRpb25zOiBbCiAgICAgICAgLy8gICAgIHsgbGFiZWw6ICfmmK8nLCB2YWx1ZTogdHJ1ZSB9LAogICAgICAgIC8vICAgICB7IGxhYmVsOiAn5ZCmJywgdmFsdWU6IGZhbHNlIH0KICAgICAgICAvLyAgIF0KICAgICAgICAvLyB9LAogICAgICAgIC8vIHsKICAgICAgICAvLyAgIHR5cGU6ICdzZWxlY3QnLAogICAgICAgIC8vICAgcHJvcDogJ2lzRmlsZWQnLAogICAgICAgIC8vICAgbGFiZWw6ICfmmK/lkKbmnInpmYTku7bvvJonLAogICAgICAgIC8vICAgb3B0aW9uczogWwogICAgICAgIC8vICAgICB7IGxhYmVsOiAn5pivJywgdmFsdWU6IHRydWUgfSwKICAgICAgICAvLyAgICAgeyBsYWJlbDogJ+WQpicsIHZhbHVlOiBmYWxzZSB9CiAgICAgICAgLy8gICBdCiAgICAgICAgLy8gfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnc2VsZWN0JywKICAgICAgICAgIHByb3A6ICdzdGF0dXMnLAogICAgICAgICAgbGFiZWw6ICfnirbmgIHvvJonLAogICAgICAgICAgb3B0aW9uczogdGhpcy4kRCgnU0haVCcpCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnZGF0ZS1waWNrZXInLAogICAgICAgICAgcHJvcDogJ2VkaXRUaW1lJywKICAgICAgICAgIGxhYmVsOiAn57yW6L6R5pe26Ze077yaJywKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHR5cGU6ICdkYXRlcmFuZ2UnLAogICAgICAgICAgICAndmFsdWUtZm9ybWF0JzogJ3l5eXktTU0tZGQnLAogICAgICAgICAgICAvLyBUT0RPIOaXtumXtOagvOW8jwogICAgICAgICAgICAnc3RhcnQtcGxhY2Vob2xkZXInOiAn5byA5aeL5pel5pyfJywKICAgICAgICAgICAgJ2VuZC1wbGFjZWhvbGRlcic6ICfnu5PmnZ/ml6XmnJ8nCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0eXBlOiAnZGF0ZS1waWNrZXInLAogICAgICAgICAgcHJvcDogJ3Jldmlld1RpbWUnLAogICAgICAgICAgbGFiZWw6ICflrqHmoLjml7bpl7TvvJonLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgdHlwZTogJ2RhdGVyYW5nZScsCiAgICAgICAgICAgICd2YWx1ZS1mb3JtYXQnOiAneXl5eS1NTS1kZCcsCiAgICAgICAgICAgIC8vIFRPRE8g5pe26Ze05qC85byPCiAgICAgICAgICAgICdzdGFydC1wbGFjZWhvbGRlcic6ICflvIDlp4vml6XmnJ8nLAogICAgICAgICAgICAnZW5kLXBsYWNlaG9sZGVyJzogJ+e7k+adn+aXpeacnycKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0sCiAgICAgIGRpYWxvZ1RpdGxlOiAnJywKICAgICAgZGlhbG9nVHlwZTogJycsCiAgICAgIC8vIOW3peWFt+agjwogICAgICB0b29sYmFyczogWwogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAn5om56YeP5a6h5qC4JywKICAgICAgICAgIGNsaWNrOiB0aGlzLm9uRXhhbWluZVF1ZXN0LAogICAgICAgICAgaGlkZGVuOiAoKSA9PiAhdGhpcy4kaGFzKFsnY2hlY2stbWVzc2FnZS1iYXRjaCddKQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICfmibnph4/liKDpmaQnLAogICAgICAgICAgY2xpY2s6IHRoaXMuZGVsZXRlUXVlc3QsCiAgICAgICAgICBoaWRkZW46ICgpID0+ICF0aGlzLiRoYXMoWydkZWxldGUtbWVzc2FnZS1iYXRjaCddKQogICAgICAgIH0KICAgICAgXSwKICAgICAgLy/lvLnnqpfooajljZUKICAgICAgZGlhbG9nRm9ybTogewogICAgICAgIHZpc2libGU6IGZhbHNlLAogICAgICAgIGxvYWRpbmc6IGZhbHNlCiAgICAgIH0sCiAgICAgIHJlcGx5SWQ6IG51bGwsCiAgICAgIC8v5by556qX6KGo5Y2V5bGe5oCnCiAgICAgIGRpYWxvZ0Zvcm1BdHRyczogewogICAgICAgICdsYWJlbC1wb3NpdGlvbic6ICdyaWdodCcsCiAgICAgICAgJ2xhYmVsLXdpZHRoJzogJzEzMHB4JywKICAgICAgICBydWxlczogewogICAgICAgICAgY29kZTogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeWuoeaguOe7k+aenCcKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIG5vcGFzc0tleTogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+mAieaLqeWuoeaguOS4jemAmui/h+WOn+WboCcKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIG5vcGFzc1JlYXNvbjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWOn+WboCcKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIGFuc3dlcjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+i+k+WFpeWbnuWkjScKICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgfSwKICAgICAgLy/lvLnnqpfooajljZXpu5jorqTlgLzvvIjnvJbovpHml7bkvKDlhaXvvIkKICAgICAgZGlhbG9nRm9ybURhdGE6IHt9LAogICAgICBpbml0aWFsRm9ybURhdGE6IHt9LAogICAgICAvL+ihqOagvOmAieS4reihjOaVsAogICAgICBzZWxlY3RlZFJvd3M6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGlhbG9nRm9ybUl0ZW1zKCkgewogICAgICBsZXQgZGlhbG9nVHlwZSA9IHRoaXMuZGlhbG9nVHlwZTsKICAgICAgbGV0IHJlc3VsdDsKICAgICAgc3dpdGNoIChkaWFsb2dUeXBlKSB7CiAgICAgICAgY2FzZSAnZXhhbSc6CiAgICAgICAgICByZXN1bHQgPSBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICB0eXBlOiAnc2VsZWN0JywKICAgICAgICAgICAgICBwcm9wOiAnY29kZScsCiAgICAgICAgICAgICAgbGFiZWw6ICflrqHmoLjnu5PmnpzvvJonLAogICAgICAgICAgICAgIG9wdGlvbnM6IHRoaXMuJEQoJ1NIWlQnKS5maWx0ZXIoaXRlbSA9PiBpdGVtLnZhbHVlICE9ICcwJyksCiAgICAgICAgICAgICAgYXR0cnM6IHt9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgIHR5cGU6ICdzZWxlY3QnLAogICAgICAgICAgICAvLyAgIHByb3A6ICdub3Bhc3NLZXknLAogICAgICAgICAgICAvLyAgIGhpZGRlbjoKICAgICAgICAgICAgLy8gICAgICF0aGlzLmRpYWxvZ0Zvcm1EYXRhLmNvZGUgfHwgdGhpcy5kaWFsb2dGb3JtRGF0YS5jb2RlICE9ICcxJywKICAgICAgICAgICAgLy8gICBsYWJlbDogJ+WuoeaguOS4jemAmui/h+WOn+WboO+8micsCiAgICAgICAgICAgIC8vICAgb3B0aW9uczogdGhpcy4kRCgnQlRHWVknKSwKICAgICAgICAgICAgLy8gICBhdHRyczoge30KICAgICAgICAgICAgLy8gfSwKICAgICAgICAgICAgLy8gewogICAgICAgICAgICAvLyAgIHR5cGU6ICdpbnB1dCcsCiAgICAgICAgICAgIC8vICAgcHJvcDogJ25vcGFzc1JlYXNvbicsCiAgICAgICAgICAgIC8vICAgaGlkZGVuOgogICAgICAgICAgICAvLyAgICAgIXRoaXMuZGlhbG9nRm9ybURhdGEuY29kZSB8fAogICAgICAgICAgICAvLyAgICAgdGhpcy5kaWFsb2dGb3JtRGF0YS5jb2RlID09IDIgfHwKICAgICAgICAgICAgLy8gICAgICF0aGlzLmRpYWxvZ0Zvcm1EYXRhLm5vcGFzc0tleSB8fAogICAgICAgICAgICAvLyAgICAgdGhpcy5kaWFsb2dGb3JtRGF0YS5ub3Bhc3NLZXkgIT0gJzQnLAogICAgICAgICAgICAvLyAgIGxhYmVsOiAn6Ieq5a6a5LmJ5Y6f5Zug77yaJywKICAgICAgICAgICAgLy8gICBhdHRyczogewogICAgICAgICAgICAvLyAgICAgcGxhY2RlcmhvbGRlcjogJzE15a2X5Lul5YaFJywKICAgICAgICAgICAgLy8gICAgIG1heGxlbmd0aDogJzE1JwogICAgICAgICAgICAvLyAgIH0KICAgICAgICAgICAgLy8gfQogICAgICAgICAgXTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3JlcGx5JzoKICAgICAgICAgIHJlc3VsdCA9IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHR5cGU6ICdpbnB1dCcsCiAgICAgICAgICAgICAgcHJvcDogJ2Fuc3dlcicsCiAgICAgICAgICAgICAgbGFiZWw6ICflm57lpI3lhoXlrrnvvJonLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBwbGFjZGVyaG9sZGVyOiAnMzDlrZfku6XlhoUnLAogICAgICAgICAgICAgICAgbWF4bGVuZ3RoOiAzMAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfSwKICB3YXRjaDoge30sCiAgY3JlYXRlZCgpIHsKICAgIGNvbnN0IHsgcmVwbHlJZCwgdW5yZXZpZXcgfSA9IHRoaXMuJHJvdXRlLnF1ZXJ5OwogICAgdGhpcy5yZXBseUlkID0gcmVwbHlJZDsKICAgIGlmICh1bnJldmlldykgewogICAgICB0aGlzLmluaXRpYWxGb3JtRGF0YSA9IHsKICAgICAgICBzdGF0dXM6IHVucmV2aWV3CiAgICAgIH07CiAgICB9CiAgfSwKICBtb3VudGVkKCkge30sCiAgbWV0aG9kczogewogICAgLy/ph43nva7ooajljZXlubbmn6Xor6IKICAgIHJlc2V0Rm9ybSgpIHsKICAgICAgdGhpcy4kcmVmc1snYlRhYmxlJ10ub25RdWVyeUZvcm0oKTsKICAgIH0sCiAgICAvKioKICAgICAqIOivt+axgnRhYmxl5pWw5o2uCiAgICAgKi8KICAgIGFqYXhHZXREYXRhKGRhdGEpIHsKICAgICAgY29uc3QgewogICAgICAgIC8vIHBhZ2VOdW0sCiAgICAgICAgLy8gcGFnZVNpemUsCiAgICAgICAgLy8gY29udGVudCwKICAgICAgICAvLyBzdGF0dXMsCiAgICAgICAgLy8gaXNJbWcsCiAgICAgICAgLy8gaXNGaWxlZCwKICAgICAgICBlZGl0VGltZSwKICAgICAgICByZXZpZXdUaW1lCiAgICAgIH0gPSBkYXRhOwogICAgICAvLyBjb25zdCBwYXJhbXMgPSB7CiAgICAgIC8vICAgY3VycmVudDogcGFnZU51bSwKICAgICAgLy8gICBzaXplOiBwYWdlU2l6ZSwKICAgICAgLy8gICBzdGFydERhdGU6IChlZGl0VGltZSAmJiBlZGl0VGltZVswXSkgfHwgbnVsbCwKICAgICAgLy8gICBlbmREYXRlOiAoZWRpdFRpbWUgJiYgZWRpdFRpbWVbMV0pIHx8IG51bGwsCiAgICAgIC8vICAgc3RhcnRSZXZpZXdUaW1lOiAocmV2aWV3VGltZSAmJiByZXZpZXdUaW1lWzBdKSB8fCBudWxsLAogICAgICAvLyAgIGVuZFJldmlld1RpbWU6IChyZXZpZXdUaW1lICYmIHJldmlld1RpbWVbMV0pIHx8IG51bGwsCiAgICAgIC8vICAgY29udGVudDogY29udGVudCwKICAgICAgLy8gICBzdGF0dXM6IHN0YXR1cywKICAgICAgLy8gICBpc0ltZzogaXNJbWcsCiAgICAgIC8vICAgaXNGaWxlZDogaXNGaWxlZAogICAgICAvLyB9OwogICAgICBjb25zdCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKAogICAgICAgIHsKICAgICAgICAgIHN0YXJ0RGF0ZTogKGVkaXRUaW1lICYmIGVkaXRUaW1lWzBdKSB8fCBudWxsLAogICAgICAgICAgZW5kRGF0ZTogKGVkaXRUaW1lICYmIGVkaXRUaW1lWzFdKSB8fCBudWxsLAogICAgICAgICAgc3RhcnRSZXZpZXdUaW1lOiAocmV2aWV3VGltZSAmJiByZXZpZXdUaW1lWzBdKSB8fCBudWxsLAogICAgICAgICAgZW5kUmV2aWV3VGltZTogKHJldmlld1RpbWUgJiYgcmV2aWV3VGltZVsxXSkgfHwgbnVsbAogICAgICAgIH0sCiAgICAgICAgZGF0YSwKICAgICAgICB7IGVkaXRUaW1lOiBudWxsLCByZXZpZXdUaW1lOiBudWxsLCBpZDogdGhpcy5yZXBseUlkIH0KICAgICAgKTsKICAgICAgcmV0dXJuIGdldE1lc3NhZ2VMaXN0KHBhcmFtcyk7CiAgICAgIC8vIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgLy8gICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgLy8gICAgIGxldCBsaXN0ID0gW107CiAgICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHsKICAgICAgLy8gICAgICAgbGlzdC5wdXNoKHsKICAgICAgLy8gICAgICAgICBpZDogaSwKICAgICAgLy8gICAgICAgICBudW06IGksCiAgICAgIC8vICAgICAgICAgdHlwZUNvZGU6ICd0eXBlQ29kZScgKyBpLAogICAgICAvLyAgICAgICAgIHR5cGVOYW1lOiAn5YiG57G75ZCN56ewJyArIGksCiAgICAgIC8vICAgICAgICAgc29ydDogJ+aOkuW6j+WAvCcgKyBpLAogICAgICAvLyAgICAgICAgIHRpbWU6ICfnvJbovpHml7bpl7QnCiAgICAgIC8vICAgICAgIH0pOwogICAgICAvLyAgICAgfQogICAgICAvLyAgICAgcmVzb2x2ZSh7CiAgICAgIC8vICAgICAgIHN0YXR1czogMjAwLAogICAgICAvLyAgICAgICBkYXRhOiB7CiAgICAgIC8vICAgICAgICAgdG90YWw6IDEwLAogICAgICAvLyAgICAgICAgIHJlY29yZHM6IGxpc3QKICAgICAgLy8gICAgICAgfQogICAgICAvLyAgICAgfSk7CiAgICAgIC8vICAgfSwgNTAwKTsKICAgICAgLy8gfSk7CiAgICB9LAogICAgLy/lpITnkIblm77niYfmlofku7YKICAgIGdldEZpbGVMaXN0KGRhdGEpIHsKICAgICAgY29uc3QgbGlzdCA9IEpTT04ucGFyc2UoZGF0YSk7CiAgICAgIGxldCB1cmxMaXN0ID0gW107CiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgIGxpc3RbaV0udXJsID0gY29uZmlnLkZJTEVfUFJFRklYICsgbGlzdFtpXS51cmw7CiAgICAgICAgdXJsTGlzdC5wdXNoKGxpc3RbaV0udXJsKTsKICAgICAgfQogICAgICByZXR1cm4gewogICAgICAgIGxpc3Q6IGxpc3QsCiAgICAgICAgdXJsTGlzdDogdXJsTGlzdAogICAgICB9OwogICAgfSwKICAgIC8v5LiL6L295paH5Lu2CiAgICBkb3dubG9hZEZpbGUoaXRlbSkgewogICAgICB3aW5kb3cub3BlbihpdGVtLnVybCk7CiAgICB9LAogICAgLyoqCiAgICAgKiDliJ3lp4vljJbmlrDlu7rooajljZXnmoTmlbDmja7pu5jorqTlgLwKICAgICAqLwogICAgaW5pdERpYWxvZ0Zvcm1EYXRhKCkgewogICAgICB0aGlzLmRpYWxvZ0Zvcm1EYXRhID0ge307CiAgICB9LAogICAgLyoqCiAgICAgKiDlhbPpl63nqpflj6PliY3lpITnkIYKICAgICAqLwogICAgb25CZWZvcmVDbG9zZShkb25lKSB7CiAgICAgIGlmICh0aGlzLmRpYWxvZ0Zvcm0ubG9hZGluZykgcmV0dXJuOwogICAgICBkb25lKCk7CiAgICB9LAogICAgLyoqCiAgICAgKiDooajljZXlhbPpl63liY3muIXpmaTmoKHpqozlubbph43nva7mlbDmja4KICAgICAqLwogICAgb25DbG9zZUZvcm0oKSB7CiAgICAgIHRoaXMuZGlhbG9nRm9ybS52aXNpYmxlID0gZmFsc2U7CiAgICAgIHRoaXMuZGlhbG9nRm9ybS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIC8vIHRoaXMuJHJlZnNbJ2RpYWxvZ0Zvcm0nXS5yZXNldEZpZWxkcygpOwogICAgICB0aGlzLmluaXREaWFsb2dGb3JtRGF0YSgpOwogICAgICB0aGlzLiRyZWZzWydlbEZvcm0nXS5yZXNldEZpZWxkcygpOwogICAgfSwKICAgIC8qKgogICAgICog5o+Q5Lqk6KGo5Y2VCiAgICAgKi8KICAgIG9uU3VibWl0Rm9ybSgpIHsKICAgICAgdGhpcy4kcmVmc1snZWxGb3JtJ10udmFsaWRhdGUoKS50aGVuKCgpID0+IHsKICAgICAgICBpZiAodGhpcy5kaWFsb2dUeXBlID09PSAnZXhhbScpIHsKICAgICAgICAgIGV4YW1NZXNzYWdlKAogICAgICAgICAgICBPYmplY3QuYXNzaWduKHsgaWRzOiB0aGlzLmdlclNlbGVjdElkcygpIH0sIHRoaXMuZGlhbG9nRm9ybURhdGEpCiAgICAgICAgICApLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgdGhpcy5zdWJtaXREb25lKCk7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZGlhbG9nVHlwZSA9PT0gJ3JlcGx5JykgewogICAgICAgICAgcmVwbHlNZXNzYWdlKAogICAgICAgICAgICBPYmplY3QuYXNzaWduKHsgaWQ6IHRoaXMuZ2VyU2VsZWN0SWRzKCkgfSwgdGhpcy5kaWFsb2dGb3JtRGF0YSkKICAgICAgICAgICkudGhlbihyZXMgPT4gewogICAgICAgICAgICB0aGlzLnN1Ym1pdERvbmUoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICAvLyB0aGlzLiRyZWZzWydlbEZvcm0nXS52YWxpZGF0ZSgpLnRoZW4oKCkgPT4gewogICAgICAvLyAgIC8vIOagoemqjOaIkOWKnwogICAgICAvLyAgIGV4YW1NZXNzYWdlKHsKICAgICAgLy8gICAgIGlkczogdGhpcy5nZXJTZWxlY3RJZHMoKSwKICAgICAgLy8gICAgIGNvZGU6IHRoaXMuZGlhbG9nRm9ybURhdGEucmVzdWx0LAogICAgICAvLyAgICAgbm9wYXNzUmVhc29uOiAnJwogICAgICAvLyAgIH0pOwogICAgICAvLyAgIHRoaXMuZGlhbG9nRm9ybS5sb2FkaW5nID0gZmFsc2U7CiAgICAgIC8vICAgdGhpcy4kcmVmcy5iVGFibGUuYWpheEdldFRhYmxlRGF0YUJ5UGFnZSgpOwogICAgICAvLyB9KTsKICAgIH0sCiAgICBzdWJtaXREb25lKCkgewogICAgICB0aGlzLmRpYWxvZ0Zvcm0udmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLmRpYWxvZ0Zvcm0ubG9hZGluZyA9IGZhbHNlOwogICAgICB0aGlzLnNlbGVjdGVkUm93cyA9IFtdOwogICAgICB0aGlzLmluaXREaWFsb2dGb3JtRGF0YSgpOwogICAgICB0aGlzLiRyZWZzLmJUYWJsZS5hamF4R2V0VGFibGVEYXRhQnlQYWdlKCk7CiAgICB9LAogICAgLy/ojrflj5bpgInkuK0gSWQKICAgIGdlclNlbGVjdElkcygpIHsKICAgICAgbGV0IHJvd3MgPSAnJzsKICAgICAgaWYgKCF0aGlzLnNlbGVjdGVkUm93cykgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLnNlbGVjdGVkUm93cykpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc2VsZWN0ZWRSb3dzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICByb3dzICs9IHRoaXMuc2VsZWN0ZWRSb3dzW2ldLmlkICsgJywnOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICByb3dzID0gdGhpcy5zZWxlY3RlZFJvd3MuaWQ7CiAgICAgIH0KICAgICAgcmV0dXJuIHJvd3M7CiAgICB9LAogICAgLyoqCiAgICAgKiDlrqHmoLjpl67popgKICAgICAqLwogICAgb25FeGFtaW5lUXVlc3Qocm93cykgewogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAnZXhhbSc7CiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAn5a6h5qC4JzsKICAgICAgdGhpcy5zZWxlY3RlZFJvd3MgPSByb3dzOwogICAgICBpZiAoIXJvd3MgfHwgcm93cy5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKCfoh7PlsJHpgInmi6nkuIDkuKrnlZnoqIAnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy5kaWFsb2dGb3JtRGF0YSA9IHsKICAgICAgICBub3Bhc3NSZWFzb246ICcnCiAgICAgIH07CiAgICAgIHRoaXMuZGlhbG9nRm9ybS52aXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBvblJlcGx5UXVlc3Qocm93cykgewogICAgICB0aGlzLmRpYWxvZ1R5cGUgPSAncmVwbHknOwogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ+WbnuWkjSc7CiAgICAgIHRoaXMuc2VsZWN0ZWRSb3dzID0gcm93czsKICAgICAgY29uc29sZS5sb2coJ3Jvd3MnLCByb3dzKTsKICAgICAgaWYgKCFyb3dzIHx8IHJvd3MubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSgn6Iez5bCR6YCJ5oup5LiA5Liq55WZ6KiAJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIHRoaXMuZGlhbG9nRm9ybS52aXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICAvKioKICAgICAqIOWIoOmZpOmXrumimAogICAgICovCiAgICBkZWxldGVRdWVzdChyb3dzKSB7CiAgICAgIGNvbnNvbGUubG9nKHJvd3MpOwogICAgICBpZiAoIXJvd3MgfHwgcm93cy5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKCfoh7PlsJHpgInmi6nkuIDkuKrnlZnoqIAnKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy4kY29uZmlybSgn56Gu5a6a6KaB5Yig6Zmk5b2T5YmN55WZ6KiAPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICB0aGlzLnNlbGVjdGVkUm93cyA9IHJvd3M7CiAgICAgICAgZGVsZXRlTWVzc2FnZSh7IGlkczogdGhpcy5nZXJTZWxlY3RJZHMoKSB9KS50aGVuKHJlcyA9PiB7CiAgICAgICAgICB0aGlzLiRyZWZzLmJUYWJsZS5hamF4R2V0VGFibGVEYXRhQnlQYWdlKCk7CiAgICAgICAgICB0aGlzLnNlbGVjdGVkUm93cyA9IFtdOwogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgbWVzc2FnZTogJ+WIoOmZpOaIkOWKnyEnCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy/ot7Povazlm57lpI0KICAgIHRvUmVwbHkoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdyZXBseScpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["MessageReply.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"MessageReply.vue","sourceRoot":"src/pages/school-book/views/messageManage","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"留言回复暂无数据\"\n      :headers=\"headers\"\n      :initialFormData=\"initialFormData\"\n      :form-items=\"formItems\"\n      @reset-form=\"resetForm\"\n      :ajax-get-data=\"ajaxGetData\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :header-cell-style=\"{ 'text-align': 'center' }\"\n    >\n      <template slot=\"column|status\" slot-scope=\"{ row }\">\n        <span>{{\n          ($D('SHZT').find(item => item.value == row.status) &&\n            $D('SHZT').find(item => item.value == row.status)['label']) ||\n            '-'\n        }}</span>\n      </template>\n      <template slot=\"column|content\" slot-scope=\"{ row }\">\n        <span v-if=\"row.content\" v-html=\"row.content\"></span>\n        <span v-else>-</span>\n      </template>\n      <template slot=\"column|image\" slot-scope=\"{ row }\">\n        <span\n          class=\"custom-column\"\n          v-if=\"row.images && getFileList(row.images)['list'].length > 0\"\n        >\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"getFileList(row.images)['list'][0].url\"\n            :preview-src-list=\"getFileList(row.images)['urlList']\"\n            fit=\"contain\"\n          >\n          </el-image>\n          <span class=\"custom-number\">\n            {{ getFileList(row.images)['list'].length }}\n          </span>\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|file\" slot-scope=\"{ row }\">\n        <span v-if=\"row.files && getFileList(row.files)['list'].length > 0\">\n          <span class=\"custom-file text-decoration\">\n            <!-- <el-button\n              size=\"mini\"\n              type=\"text\"\n              @click=\"downloadFile(getFileList(row.files)['list'][0])\"\n            > -->\n            {{ getFileList(row.files)['list'][0].name }}\n            <!-- </el-button> -->\n          </span>\n          <!-- <el-popover placement=\"right\" trigger=\"click\">\n            <div\n              v-for=\"item in getFileList(row.files)['list']\"\n              :key=\"item.name + item.url\"\n            >\n              <span\n                class=\"custom-number text-decoration\"\n                @click=\"downloadFile(item)\"\n              >\n                {{ item.name }}</span\n              >\n            </div>\n            <span slot=\"reference\">\n              <span class=\"custom-number text-decoration\">\n                {{ getFileList(row.files)['list'].length }}</span\n              >\n            </span>\n          </el-popover> -->\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|commentCount\" slot-scope=\"{ row }\">\n        <el-button size=\"mini\" type=\"text\" @click.stop=\"toReply(row)\">\n          {{ row.commentCount || 0 }}条回复</el-button\n        >\n      </template>\n      <template slot=\"column|unreviewedCommentCount\" slot-scope=\"{ row }\">\n        <el-button\n          size=\"mini\"\n          type=\"text\"\n          @click.stop=\"toReply(row, 'unreview')\"\n        >\n          {{ row.unreviewedCommentCount || 0 }}条回复</el-button\n        >\n      </template>\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            v-auth=\"['check-message']\"\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineQuest(row)\"\n            >审核</el-button\n          >\n          <el-button\n            v-auth=\"['reply-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"onReplyQuest(row, 'preview')\"\n            >回复</el-button\n          >\n          <el-button\n            v-auth=\"['delete-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteQuest(row, 'delete')\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"onCloseForm\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport config from './../../config';\nimport {\n  getMessageList,\n  examMessage,\n  deleteMessage,\n  replyMessage\n} from './../../api/data';\nexport default {\n  name: 'MessageReply',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n\n  data() {\n    return {\n      //图片前缀\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n        },\n        {\n          label: '回复内容',\n          prop: 'content',\n          fixed: 'left',\n          width: '150',\n          'show-overflow-tooltip': true,\n          colType: 'column'\n        },\n        {\n          label: '图片',\n          prop: 'image',\n          width: '150',\n          colType: 'column'\n        },\n        {\n          label: '附件',\n          prop: 'file',\n          colType: 'column'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '管理员回复',\n          prop: 'replyContent'\n        },\n        {\n          label: '编辑时间',\n          width: '160',\n          prop: 'createTime',\n          'value-format': 'yyyy-MM-dd'\n        },\n        {\n          label: '审核时间',\n          width: '160',\n          prop: 'reviewTime'\n        },\n        {\n          label: '回复时间',\n          width: '160',\n          prop: 'adminAnswerTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          colType: 'column'\n        },\n        {\n          label: '操作',\n          width: '120',\n          fixed: 'right',\n          slotName: 'opera',\n          colType: 'column'\n          // colType: 'btns',\n          // btns: [\n          //   {\n          //     label: '审核',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onExamineQuest\n          //   },\n          //   {\n          //     label: '回复',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onReplyQuest\n          //   },\n          //   {\n          //     label: '删除',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.deleteQuest\n          //   }\n          // ]\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'input',\n          prop: 'content',\n          label: '回复内容：',\n          attrs: [\n            {\n              placeholder: '回复内容'\n            }\n          ]\n        },\n        // {\n        //   type: 'select',\n        //   prop: 'isImg',\n        //   label: '是否有图片：',\n        //   options: [\n        //     { label: '是', value: true },\n        //     { label: '否', value: false }\n        //   ]\n        // },\n        // {\n        //   type: 'select',\n        //   prop: 'isFiled',\n        //   label: '是否有附件：',\n        //   options: [\n        //     { label: '是', value: true },\n        //     { label: '否', value: false }\n        //   ]\n        // },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'editTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        }\n      ],\n      dialogTitle: '',\n      dialogType: '',\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineQuest,\n          hidden: () => !this.$has(['check-message-batch'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteQuest,\n          hidden: () => !this.$has(['delete-message-batch'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      replyId: null,\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核结果'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核不通过原因'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入原因'\n            }\n          ],\n          answer: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入回复'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {},\n      initialFormData: {},\n      //表格选中行数\n      selectedRows: null\n    };\n  },\n  computed: {\n    dialogFormItems() {\n      let dialogType = this.dialogType;\n      let result;\n      switch (dialogType) {\n        case 'exam':\n          result = [\n            {\n              type: 'select',\n              prop: 'code',\n              label: '审核结果：',\n              options: this.$D('SHZT').filter(item => item.value != '0'),\n              attrs: {}\n            }\n            // {\n            //   type: 'select',\n            //   prop: 'nopassKey',\n            //   hidden:\n            //     !this.dialogFormData.code || this.dialogFormData.code != '1',\n            //   label: '审核不通过原因：',\n            //   options: this.$D('BTGYY'),\n            //   attrs: {}\n            // },\n            // {\n            //   type: 'input',\n            //   prop: 'nopassReason',\n            //   hidden:\n            //     !this.dialogFormData.code ||\n            //     this.dialogFormData.code == 2 ||\n            //     !this.dialogFormData.nopassKey ||\n            //     this.dialogFormData.nopassKey != '4',\n            //   label: '自定义原因：',\n            //   attrs: {\n            //     placderholder: '15字以内',\n            //     maxlength: '15'\n            //   }\n            // }\n          ];\n          break;\n        case 'reply':\n          result = [\n            {\n              type: 'input',\n              prop: 'answer',\n              label: '回复内容：',\n              attrs: {\n                placderholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n      }\n      return result;\n    }\n  },\n  watch: {},\n  created() {\n    const { replyId, unreview } = this.$route.query;\n    this.replyId = replyId;\n    if (unreview) {\n      this.initialFormData = {\n        status: unreview\n      };\n    }\n  },\n  mounted() {},\n  methods: {\n    //重置表单并查询\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(data) {\n      const {\n        // pageNum,\n        // pageSize,\n        // content,\n        // status,\n        // isImg,\n        // isFiled,\n        editTime,\n        reviewTime\n      } = data;\n      // const params = {\n      //   current: pageNum,\n      //   size: pageSize,\n      //   startDate: (editTime && editTime[0]) || null,\n      //   endDate: (editTime && editTime[1]) || null,\n      //   startReviewTime: (reviewTime && reviewTime[0]) || null,\n      //   endReviewTime: (reviewTime && reviewTime[1]) || null,\n      //   content: content,\n      //   status: status,\n      //   isImg: isImg,\n      //   isFiled: isFiled\n      // };\n      const params = Object.assign(\n        {\n          startDate: (editTime && editTime[0]) || null,\n          endDate: (editTime && editTime[1]) || null,\n          startReviewTime: (reviewTime && reviewTime[0]) || null,\n          endReviewTime: (reviewTime && reviewTime[1]) || null\n        },\n        data,\n        { editTime: null, reviewTime: null, id: this.replyId }\n      );\n      return getMessageList(params);\n      // return new Promise(resolve => {\n      //   setTimeout(() => {\n      //     let list = [];\n      //     for (let i = 0; i < 10; i++) {\n      //       list.push({\n      //         id: i,\n      //         num: i,\n      //         typeCode: 'typeCode' + i,\n      //         typeName: '分类名称' + i,\n      //         sort: '排序值' + i,\n      //         time: '编辑时间'\n      //       });\n      //     }\n      //     resolve({\n      //       status: 200,\n      //       data: {\n      //         total: 10,\n      //         records: list\n      //       }\n      //     });\n      //   }, 500);\n      // });\n    },\n    //处理图片文件\n    getFileList(data) {\n      const list = JSON.parse(data);\n      let urlList = [];\n      for (let i = 0; i < list.length; i++) {\n        list[i].url = config.FILE_PREFIX + list[i].url;\n        urlList.push(list[i].url);\n      }\n      return {\n        list: list,\n        urlList: urlList\n      };\n    },\n    //下载文件\n    downloadFile(item) {\n      window.open(item.url);\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {};\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      // this.$refs['dialogForm'].resetFields();\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        if (this.dialogType === 'exam') {\n          examMessage(\n            Object.assign({ ids: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        } else if (this.dialogType === 'reply') {\n          replyMessage(\n            Object.assign({ id: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        }\n      });\n\n      // this.$refs['elForm'].validate().then(() => {\n      //   // 校验成功\n      //   examMessage({\n      //     ids: this.gerSelectIds(),\n      //     code: this.dialogFormData.result,\n      //     nopassReason: ''\n      //   });\n      //   this.dialogForm.loading = false;\n      //   this.$refs.bTable.ajaxGetTableDataByPage();\n      // });\n    },\n    submitDone() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      this.selectedRows = [];\n      this.initDialogFormData();\n      this.$refs.bTable.ajaxGetTableDataByPage();\n    },\n    //获取选中 Id\n    gerSelectIds() {\n      let rows = '';\n      if (!this.selectedRows) {\n        return;\n      }\n      if (Array.isArray(this.selectedRows)) {\n        for (let i = 0; i < this.selectedRows.length; i++) {\n          rows += this.selectedRows[i].id + ',';\n        }\n      } else {\n        rows = this.selectedRows.id;\n      }\n      return rows;\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      this.dialogType = 'exam';\n      this.dialogTitle = '审核';\n      this.selectedRows = rows;\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogFormData = {\n        nopassReason: ''\n      };\n      this.dialogForm.visible = true;\n    },\n    onReplyQuest(rows) {\n      this.dialogType = 'reply';\n      this.dialogTitle = '回复';\n      this.selectedRows = rows;\n      console.log('rows', rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteQuest(rows) {\n      console.log(rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.$confirm('确定要删除当前留言?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.selectedRows = rows;\n        deleteMessage({ ids: this.gerSelectIds() }).then(res => {\n          this.$refs.bTable.ajaxGetTableDataByPage();\n          this.selectedRows = [];\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        });\n      });\n    },\n    //跳转回复\n    toReply() {\n      console.log('reply');\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.reason-input {\n  width: 198px;\n}\n</style>\n"]}]}