{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BTable/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BTable/index.vue","mtime":1646020538151},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/components/business/BTable","sourcesContent":["<template>\r\n  <div class=\"c-table\">\r\n    <c-dynamic-form\r\n      v-if=\"formItems && formItems.length\"\r\n      ref=\"cDynamicForm\"\r\n      :form-data=\"formData\"\r\n      :form-items=\"computedFormItems\"\r\n      :form-attrs=\"formAttrs\"\r\n      @change-model=\"model => (formData = model)\"\r\n      @keyup.enter.native=\"onQueryForm\"\r\n    >\r\n      <el-form-item slot=\"form-after\">\r\n        <el-button @click=\"onResetForm\">重置</el-button>\r\n        <el-button type=\"primary\" @click=\"onQueryForm\">查询</el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showQueryFilter\"\r\n          @click=\"onFilterQueryCondition\"\r\n          >设置筛选项</el-button\r\n        >\r\n      </el-form-item>\r\n    </c-dynamic-form>\r\n    <div class=\"toolbars\">\r\n      <div class=\"toolbars-left\">\r\n        <template v-for=\"(tool, index) in toolbars\">\r\n          <el-dropdown\r\n            v-if=\"tool.type === 'dropdown'\"\r\n            :key=\"index\"\r\n            size=\"small\"\r\n            @command=\"\r\n              command =>\r\n                typeof tool.command === 'function' &&\r\n                tool.command(command, selectRows)\r\n            \"\r\n          >\r\n            <el-button type=\"primary\" v-bind=\"tool.attrs\" size=\"small\">\r\n              {{ tool.label }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n            </el-button>\r\n            <el-dropdown-menu\r\n              v-if=\"tool.btns && tool.btns.length\"\r\n              slot=\"dropdown\"\r\n            >\r\n              <el-dropdown-item\r\n                v-for=\"(btn, i) in tool.btns\"\r\n                v-bind=\"btn.attrs\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                :key=\"'' + index + i\"\r\n                v-show=\"!isHiddenButton(tool)\"\r\n                @click.native=\"\r\n                  typeof btn.click === 'function' && btn.click(selectRows)\r\n                \"\r\n              >\r\n                {{ btn.label }}\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          <slot\r\n            v-else-if=\"tool.type === 'slot'\"\r\n            :name=\"'toolbars|' + tool.slotName\"\r\n            v-bind:rows=\"selectRows\"\r\n          />\r\n          <el-button\r\n            v-else\r\n            v-bind=\"tool.attrs\"\r\n            :key=\"index\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            v-show=\"!isHiddenButton(tool)\"\r\n            @click=\"typeof tool.click === 'function' && tool.click(selectRows)\"\r\n          >\r\n            {{ tool.label }}\r\n          </el-button>\r\n        </template>\r\n      </div>\r\n      <div class=\"toolbars-right\">\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showRefresh\"\r\n          size=\"small\"\r\n          @click=\"onRefreshTable\"\r\n          >刷新</el-button\r\n        >\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showColumn\"\r\n          size=\"small\"\r\n          @click=\"onChangeColumn\"\r\n          >自定义显示列</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- <hl-table :data=\"data\" :headers=\"headers\"></hl-table> -->\r\n    <slot name=\"table-before\" />\r\n    <slot name=\"table-title\"></slot>\r\n    <c-table\r\n      :border=\"true\"\r\n      v-bind=\"$attrs\"\r\n      v-on=\"$listeners\"\r\n      size=\"small\"\r\n      :data=\"tableData\"\r\n      :headers=\"computedHeaders\"\r\n      @selection-change=\"onSelectionChange\"\r\n      @sort-change=\"onSortChange\"\r\n      ref=\"table\"\r\n    >\r\n      <!-- 自定义列插槽 -->\r\n      <template\r\n        v-for=\"col in headers\"\r\n        :slot=\"'column|' + (col.slotName || col.prop)\"\r\n        slot-scope=\"scope\"\r\n      >\r\n        <slot\r\n          :name=\"'column|' + (col.slotName || col.prop)\"\r\n          :row=\"scope.row\"\r\n          :$index=\"scope.$index\"\r\n        ></slot>\r\n      </template>\r\n    </c-table>\r\n    <el-pagination\r\n      background\r\n      layout=\"total, prev, pager, next, sizes, slot, jumper\"\r\n      :page-sizes=\"pageSizes\"\r\n      :total=\"pageParams.total\"\r\n      :current-page.sync=\"pageParams.page\"\r\n      :page-size=\"pageParams.limit\"\r\n      :style=\"{ 'margin-top': pgMarginTop + 'px' }\"\r\n      @size-change=\"onPgSizeChange\"\r\n    >\r\n      <span class=\"el-pagination-slot\">跳至</span>\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n<script>\r\nlet CFilterCheckPanel = () =>\r\n  import('@/components/common/CFilterCheckPanel/index.js');\r\nimport axios from '@/plugins/axios';\r\nimport { Button, Pagination, Loading, FormItem, Message } from 'element-ui';\r\nimport CDynamicForm from '../../common/CDynamicForm';\r\nimport CTable from '../../common/CTable';\r\nimport { getConfig } from './config';\r\n/**\r\n * 格式化空数据显示\r\n */\r\nlet formatterEmptyData = str =>\r\n  ['', null, undefined].indexOf(str) >= 0 ? '-' : str;\r\nexport default {\r\n  name: 'BTable',\r\n  props: {\r\n    //数据查询是否展示loading\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //数据查询func，返回promise对象\r\n    ajaxGetData: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    //保存筛选结果（显示列/筛选项）\r\n    ajaxFilterSave: {\r\n      type: Function\r\n    },\r\n    //查询筛选结果（显示列/筛选项）\r\n    ajaxFilterQuery: {\r\n      type: Function\r\n    },\r\n    //表头数组\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    //分页组件与表间距\r\n    pgMarginTop: {\r\n      type: Number,\r\n      default: 20\r\n    },\r\n    //每页展示数量选择\r\n    pageSizes: {\r\n      type: Array,\r\n      default: () => [10, 50, 100, 500, 1000]\r\n    },\r\n    //默认每页展示数量\r\n    pageLimit: {\r\n      type: Number,\r\n      default: 50\r\n    },\r\n    // 表单配置\r\n    formItems: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 初始化表单数据\r\n    initialFormData: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    // 工具栏\r\n    toolbars: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    //显示刷新按钮\r\n    showRefresh: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    //显示列\r\n    showColumn: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //显示筛选项按钮\r\n    showQueryFilter: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //保存column列显示所使用的的key\r\n    saveColumnKey: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    //保存筛选项显示所使用的的key\r\n    saveQueryKey: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    //项目系统(用于保存列数据时的参数)\r\n    system: {\r\n      type: String,\r\n      default: undefined\r\n    },\r\n    //保存列对应的成功提示文案\r\n    saveSuccessMsg: {\r\n      type: String,\r\n      default: '保存成功'\r\n    },\r\n    //保存列对应的失败提示文案\r\n    saveErrorMsg: {\r\n      type: String,\r\n      default: '数据保存失败'\r\n    },\r\n    /**\r\n     * 立即加载\r\n     */\r\n    immediateLoad: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n    /**\r\n     * 行数据键值\r\n     */\r\n    // rowKey: {\r\n    //   type: [Function, String]\r\n    // },\r\n    // expandRowKeys: {\r\n    //   type: Array\r\n    // }\r\n  },\r\n  components: {\r\n    CTable,\r\n    ElPagination: Pagination,\r\n    CDynamicForm,\r\n    [FormItem.name]: FormItem,\r\n    [Button.name]: Button\r\n  },\r\n  data() {\r\n    return {\r\n      headerPromise: null,\r\n      computedHeaders: [],\r\n      computedFormItems: [],\r\n      ajaxCount: 0,\r\n      selectRows: [],\r\n      loadingIns: null,\r\n      //分页参数\r\n      pageParams: {\r\n        total: 0,\r\n        offset: 0,\r\n        limit: this.pageLimit,\r\n        page: 1\r\n      },\r\n      //排序参数\r\n      sortParams: {\r\n        sort: undefined,\r\n        order: undefined\r\n      },\r\n      tableData: [],\r\n      // 表单数据\r\n      formData: { ...this.initialFormData },\r\n      // 表单数据\r\n      formAttrs: {\r\n        inline: true,\r\n        size: 'small'\r\n      },\r\n      // 是否是数组\r\n      isArray: arr => Array.isArray(arr),\r\n      sysConfig: {} //根据配置参数及prop入参，动态配置\r\n    };\r\n  },\r\n  watch: {\r\n    //每页展示数量变化\r\n    'pageParams.limit'() {\r\n      let { page } = this.pageParams;\r\n      if (page == 1) {\r\n        //在第一页修改每页数量时，触发重新请求\r\n        this.ajaxGetTableDataByPage();\r\n      } else {\r\n        //非首页修改，将页码改为首页，触发页码更新监听\r\n        this.pageParams.page = 1;\r\n      }\r\n    },\r\n    //当前页码变化\r\n    'pageParams.page'() {\r\n      let { page, limit } = this.pageParams;\r\n      this.pageParams.offset = limit * (page - 1);\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    // 数据变化\r\n    tableData() {\r\n      this.$emit('table-data-change', this.tableData);\r\n    },\r\n    formItems() {\r\n      //formItems 变化处理\r\n      this.dealQueryItems();\r\n    }\r\n  },\r\n  computed: {\r\n    //请求入参\r\n    ajaxPageParams() {\r\n      // let param = this.pageParams;\r\n      let { offset, limit, page } = this.pageParams;\r\n      return { offset, limit, pageSize: limit, pageNum: page };\r\n    },\r\n    //存储列数据所用key\r\n    computedSaveColumnKey() {\r\n      if (this.saveColumnKey) return this.saveColumnKey;\r\n      let key;\r\n      try {\r\n        key = this.$route.path;\r\n      } catch (error) {\r\n        key = 'default';\r\n      }\r\n      return 'table|' + key;\r\n    },\r\n    //存储筛选项所用key\r\n    computedSaveQueryKey() {\r\n      if (this.saveQueryKey) return this.saveQueryKey;\r\n      let key;\r\n      try {\r\n        key = this.$route.path;\r\n      } catch (error) {\r\n        key = 'default';\r\n      }\r\n      return 'query|' + key;\r\n    }\r\n  },\r\n  created() {\r\n    this.initConfig(); //默认配置初始化\r\n    this.headerPromise = this.dealHeaders(); //表头处理\r\n    this.dealQueryItems(); //表单查询项处理\r\n  },\r\n  mounted() {\r\n    this.immediateLoad && this.ajaxGetTableDataByPage();\r\n  },\r\n  methods: {\r\n    //分页接口请求数据处理\r\n    ajaxGetTableDataByPage() {\r\n      (this.$refs.cDynamicForm\r\n        ? this.$refs.cDynamicForm.validate()\r\n        : Promise.resolve()\r\n      ).then(() => {\r\n        let tAjaxCount = ++this.ajaxCount;\r\n        let lastLoadingMap = this.lastLoadingMap;\r\n        if (!this.$refs.table) return; //查询中途实例被销毁，终端\r\n        //默认load实例不存在，创建/已存在，使用原有load对象\r\n        if (!this.loadingIns) {\r\n          //填充loading展示默认值，兼容处理\r\n          let loadIns = {\r\n            close() {}\r\n          };\r\n          //需要展示loading\r\n          if (this.loading) {\r\n            loadIns = Loading.service({\r\n              target: this.$refs.table.$el\r\n            });\r\n          }\r\n          this.loadingIns = loadIns;\r\n        }\r\n        let ajaxParams = {\r\n          ...this.ajaxPageParams,\r\n          ...this.formData,\r\n          ...this.sortParams\r\n        };\r\n        //获取func入参\r\n        let dataFun = this.ajaxGetData;\r\n        //完成回调\r\n        let callFun = res => {\r\n          // console.log('-', tAjaxCount, ajaxCount, res, this.pageParams);\r\n          if (tAjaxCount != this.ajaxCount) return; //当前请求非最新请求，跳过处理\r\n          this.loadingIns.close(); //关闭loading\r\n          this.loadingIns = null; //置空load示例\r\n          if (!res) return;\r\n          let data = res.data || {};\r\n          this.tableData = Array.isArray(data.records) ? data.records : []; //表数据\r\n          this.pageParams.total = data.total || 0; //数据长度\r\n          if (this.tableData.length === 0) this.pageParams.page = 1; //无数据时，重定向第一页\r\n        };\r\n        //func判非空并执行\r\n        let dataPromise = dataFun && dataFun(ajaxParams);\r\n        //promise接收返回值\r\n        if (dataPromise && typeof dataPromise.then == 'function') {\r\n          Promise.all([dataPromise, this.headerPromise])\r\n            .then(res => {\r\n              callFun(res[0]);\r\n            })\r\n            .catch(e => {\r\n              console.error(e);\r\n              callFun();\r\n            });\r\n        } else {\r\n          callFun();\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取服务端保存的列/筛选项配置信息\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    ajaxGetShowFilterData(type = 1) {\r\n      let { system, ajaxFilterQuery } = this.sysConfig;\r\n      let key = this.getSaveKey(type);\r\n      if (typeof ajaxFilterQuery == 'function')\r\n        return ajaxFilterQuery({\r\n          system,\r\n          key\r\n        });\r\n      return [];\r\n    },\r\n    /**\r\n     * 保存显示列/筛选项\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    ajaxSaveFilterData(params, type = 1) {\r\n      let { system, ajaxFilterSave } = this.sysConfig;\r\n      let key = this.getSaveKey(type);\r\n      if (typeof ajaxFilterSave == 'function')\r\n        return ajaxFilterSave({\r\n          system,\r\n          key,\r\n          columns: params\r\n        });\r\n      return [];\r\n    },\r\n    //表单查询项预处理，默认筛选显示数据从远程或本地获取并覆盖\r\n    async dealQueryItems() {\r\n      let formItems = this.formItems;\r\n      let { ajaxFilterQuery, ajaxFilterSave } = this.sysConfig;\r\n      //需要“显示列”按钮时，表头需要获取本地或远程保存数据\r\n      if (this.showQueryFilter) {\r\n        let remoteQuerys;\r\n        //服务端保存\r\n        if (ajaxFilterQuery && ajaxFilterSave) {\r\n          try {\r\n            let res = await this.ajaxGetShowFilterData(2);\r\n            remoteQuerys = res;\r\n            console.log('remote-querys', remoteQuerys);\r\n          } catch (error) {\r\n            remoteQuerys = [];\r\n          }\r\n        } else {\r\n          remoteQuerys = this.getLocalFilterData(2);\r\n          console.log('local-querys', remoteQuerys);\r\n        }\r\n        this.dealColumnsHeader(formItems, remoteQuerys); //使用服务端数据覆盖本地数据\r\n      }\r\n      //对header做默认赋值处理\r\n      formItems = formItems.map(headItem => {\r\n        //初始需要赋值字段，否则页面无法根据字段响应\r\n        headItem.required = headItem.required || false;\r\n        headItem.hidden = headItem.hidden || false;\r\n\r\n        // 下拉选择默认启用清除按钮功能\r\n        if (headItem.type === 'select') {\r\n          let clearable = headItem.attrs && headItem.attrs.clearable;\r\n          clearable = clearable === undefined ? true : clearable;\r\n          if (!headItem.attrs) headItem.attrs = {};\r\n          headItem.attrs.clearable = clearable;\r\n        }\r\n        return headItem;\r\n      });\r\n      this.computedFormItems = formItems;\r\n    },\r\n    //header二次封装，处理分页返回数据\r\n    async dealHeaders() {\r\n      let headers = this.headers;\r\n      let { ajaxFilterQuery, ajaxFilterSave } = this.sysConfig;\r\n      //需要“显示列”按钮时，表头需要获取本地或远程保存数据\r\n      if (this.showColumn) {\r\n        let remoteHeaders;\r\n        //服务端保存\r\n        if (ajaxFilterQuery && ajaxFilterSave) {\r\n          try {\r\n            let res = await this.ajaxGetShowFilterData();\r\n            remoteHeaders = res;\r\n            console.log('remote-headers', remoteHeaders);\r\n          } catch (error) {\r\n            remoteHeaders = [];\r\n          }\r\n        } else {\r\n          remoteHeaders = this.getLocalFilterData();\r\n          console.log('local-headers', remoteHeaders);\r\n        }\r\n        this.dealColumnsHeader(headers, remoteHeaders); //使用服务端数据覆盖本地数据\r\n      }\r\n      //对header做默认赋值处理\r\n      this.computedHeaders = headers.map(headItem => {\r\n        //初始需要赋值字段，否则页面无法根据字段响应\r\n        headItem.required = headItem.required || false;\r\n        headItem.hidden = headItem.hidden || false;\r\n        headItem.resizable = headItem.resizable || false;\r\n        let fun = headItem.index;\r\n        //序号类型，补充分页信息返回\r\n        if (headItem.type == 'index' && typeof fun == 'function') {\r\n          headItem.index = index =>\r\n            fun(index, this.pageParams.page, this.pageParams.limit);\r\n          // console.log(headItem.index);\r\n        }\r\n        // 处理空数据显示横杠\r\n        let formatter = headItem.formatter;\r\n        if (typeof formatter === 'function') {\r\n          headItem.formatter = (...args) => {\r\n            let res = formatter.apply(null, args);\r\n            return formatterEmptyData(res);\r\n          };\r\n        } else {\r\n          headItem.formatter = (row, col, value) => formatterEmptyData(value);\r\n        }\r\n        return headItem;\r\n      });\r\n    },\r\n    // 初始化配置，从全局取配置\r\n    initConfig() {\r\n      let config = getConfig();\r\n      let { system, ajaxFilterSave, ajaxFilterQuery } = this.$props;\r\n      this.sysConfig.system = system !== undefined ? system : config.system;\r\n      this.sysConfig.ajaxFilterSave =\r\n        ajaxFilterSave !== undefined ? ajaxFilterSave : config.ajaxFilterSave;\r\n      this.sysConfig.ajaxFilterQuery =\r\n        ajaxFilterQuery !== undefined\r\n          ? ajaxFilterQuery\r\n          : config.ajaxFilterQuery;\r\n    },\r\n    /**\r\n     * 获取保存列或筛选项的key\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    getSaveKey(type) {\r\n      return type == 1 ? this.computedSaveColumnKey : this.computedSaveQueryKey;\r\n    },\r\n    /**\r\n     * 保存本地列/筛选项数据\r\n     * @param {Array} saveData 需要保存的表头列/筛选项数据\r\n     * @param {Number} type 1=需要保存的表头列/2=筛选项数据\r\n     * @returns {Promise} 返回promise对象\r\n     */\r\n    saveLocalFilterData(saveData, type = 1) {\r\n      let key = this.getSaveKey(type);\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          localStorage.setItem(key, JSON.stringify(saveData));\r\n          resolve();\r\n        } catch (error) {\r\n          Message({\r\n            message: error.name + ':' + error.message,\r\n            type: 'warning',\r\n            duration: 5 * 1000\r\n          });\r\n          reject();\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取本地列数据\r\n     * @param {Number} type 1=需要保存的表头列/2=筛选项数据\r\n     */\r\n    getLocalFilterData(type = 1) {\r\n      let key = this.getSaveKey(type);\r\n      let result;\r\n      try {\r\n        result = JSON.parse(localStorage.getItem(key)) || [];\r\n      } catch (error) {\r\n        result = [];\r\n      }\r\n      return result;\r\n    },\r\n    /**\r\n     * 获取查询参数\r\n     */\r\n    getQueryParam() {\r\n      return {\r\n        ...this.ajaxPageParams,\r\n        ...this.formData,\r\n        ...this.sortParams\r\n      };\r\n    },\r\n    /**\r\n     * 统一处理表头数据，服务端数据覆盖本地数据（数据以本地为准，本地不存在的列不作处理）\r\n     * @param {Array} localList 本地初始的表头数据\r\n     * @param {Array} remoteList 服务端配置的表头数据\r\n     */\r\n    dealColumnsHeader(localList, remoteList) {\r\n      // console.time('dealColumnsHeader-time');\r\n      let tempRemoteList = JSON.parse(JSON.stringify(remoteList)); //拷贝远程数据\r\n      for (let i = 0, len = localList.length; i < len; i++) {\r\n        let localItem = localList[i];\r\n        let localProp = localItem.prop;\r\n        //数据关键key不存在，此数据项不做处理\r\n        if (!localProp) {\r\n          continue;\r\n        }\r\n        for (let j = 0; j < tempRemoteList.length; j++) {\r\n          let remoteItem = tempRemoteList[j];\r\n          let remoteProp = remoteItem.prop;\r\n          //数据key一致，覆盖本地数据，并在拷贝数据中移除此项，不做重复循环\r\n          if (remoteProp == localProp) {\r\n            Object.assign(localItem, remoteItem, {\r\n              required: localItem.required,\r\n              label: localItem.label //优先使用本地名称\r\n            });\r\n            tempRemoteList.splice(j, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // console.timeEnd('dealColumnsHeader-time');\r\n    },\r\n    /**\r\n     * 页码切换\r\n     * @param {Number} curr 当前页卡索引\r\n     */\r\n    // onPgCurrentChange(curr) {\r\n    //   console.log(curr);\r\n    //   this.pageParams.page = curr;\r\n    // },\r\n    //每页展示数量切换\r\n    onPgSizeChange(size) {\r\n      this.pageParams.limit = size;\r\n    },\r\n    /**\r\n     * 表单查询\r\n     */\r\n    onQueryForm() {\r\n      this.$emit('query-form');\r\n      let { page } = this.pageParams;\r\n      page === 1 ? this.ajaxGetTableDataByPage() : (this.pageParams.page = 1);\r\n    },\r\n    /**\r\n     * 表单重置\r\n     */\r\n    onResetForm() {\r\n      this.formData = { ...this.initialFormData };\r\n      this.$refs.cDynamicForm && this.$refs.cDynamicForm.init();\r\n      this.$emit('reset-form');\r\n    },\r\n    //过滤筛选条件\r\n    async onFilterQueryCondition() {\r\n      let { ajaxFilterSave, ajaxFilterQuery } = this.sysConfig;\r\n      let checkFilterPlugin = (await CFilterCheckPanel()).default;\r\n      //调用显示列插件\r\n      checkFilterPlugin.show({\r\n        data: this.formItems, //源数据 checkbox集合\r\n        //点击提交时调用的接口\r\n        ajaxFun:\r\n          ajaxFilterSave && ajaxFilterQuery\r\n            ? params => this.ajaxSaveFilterData(params, 2) //本地缓存\r\n            : params => this.saveLocalFilterData(params, 2), //接口保存\r\n        successMsg: this.saveSuccessMsg,\r\n        errorMsg: this.saveErrorMsg\r\n      });\r\n    },\r\n    //监听选择变化\r\n    onSelectionChange(rows) {\r\n      this.selectRows = rows;\r\n    },\r\n    //监听排序变化\r\n    onSortChange({ order, prop }) {\r\n      this.sortParams = {\r\n        order: order == 'ascending' ? 'asc' : 'desc',\r\n        sort: prop\r\n      };\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    //刷新table\r\n    onRefreshTable() {\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    //显示列\r\n    async onChangeColumn() {\r\n      let { ajaxFilterSave, ajaxFilterQuery } = this.sysConfig;\r\n      let checkFilterPlugin = (await CFilterCheckPanel()).default;\r\n      //调用显示列插件\r\n      checkFilterPlugin.show({\r\n        title: '自定义显示列',\r\n        data: this.headers, //源数据 checkbox集合\r\n        //点击提交时调用的接口\r\n        ajaxFun:\r\n          ajaxFilterSave && ajaxFilterQuery\r\n            ? this.ajaxSaveFilterData //本地缓存\r\n            : this.saveLocalFilterData, //接口保存\r\n        successMsg: this.saveSuccessMsg,\r\n        errorMsg: this.saveErrorMsg\r\n      });\r\n    },\r\n    /**\r\n     * 是否显示按钮\r\n     * @param {*} btn 修改列表\r\n     */\r\n    isHiddenButton(btn) {\r\n      let { hidden } = btn;\r\n      if (typeof hidden === 'function') return hidden(btn);\r\n      return hidden;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.toolbars {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.el-button + .el-dropdown,\r\n.el-dropdown + .el-button {\r\n  margin-left: 10px;\r\n}\r\n.el-pagination-slot {\r\n  color: @normal-txt;\r\n  font-weight: normal;\r\n  margin-right: -54px;\r\n  background: #fff;\r\n  display: inline-block;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n</style>\r\n"]}]}