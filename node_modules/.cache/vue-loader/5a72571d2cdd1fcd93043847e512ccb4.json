{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/components/business/BAllotUser/index.vue?vue&type=style&index=0&id=19c86f4a&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/components/business/BAllotUser/index.vue","mtime":1627979214341},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaGVhZGVyIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4OwogICYtcmlnaHQgewogICAgZmxvYXQ6IHJpZ2h0OwogICAgZm9udC1zaXplOiAxNHB4OwogICAgbGluZS1oZWlnaHQ6IDMycHg7CiAgICAuY3VycmVudC1yb2xlIHsKICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICB9CiAgfQp9Ci5tZW51LWJveCB7CiAgJjo6YWZ0ZXIgewogICAgZGlzcGxheTogYmxvY2s7CiAgICBjb250ZW50OiAnJzsKICAgIGNsZWFyOiBib3RoOwogIH0KICAuY2FyZC1ib3ggewogICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gODRweCAtIDk0cHggLSA2MHB4KTsKICAgIG1hcmdpbi1ib3R0b206IDA7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgcGFkZGluZy10b3A6IDU4cHg7CiAgICAmLmNhcmQtYXV0byB7CiAgICAgIGhlaWdodDogYXV0bzsKICAgIH0KICAgIC5jYXJkLWxhYmVsIHsKICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICBsZWZ0OiAwOwogICAgICByaWdodDogMDsKICAgICAgdG9wOiAwOwogICAgICBiYWNrZ3JvdW5kOiAjNDA3MmVlOwogICAgICBwYWRkaW5nOiAxOHB4IDAgMjBweDsKICAgICAgY29sb3I6ICNmZmY7CiAgICAgIHotaW5kZXg6IDI7CiAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAvLyBoZWlnaHQ6IDU4cHg7CiAgICB9CiAgICAuY2FyZC1sYWJlbDIgewogICAgICBiYWNrZ3JvdW5kOiAjMGU1ZWJiOwogICAgfQogICAgLmNhcmQtbGlzdCB7CiAgICAgIG1hcmdpbjogLTIwcHg7CiAgICAgID4gLmNhcmQtaXRlbSB7CiAgICAgICAgcGFkZGluZzogNnB4IDEwcHg7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgIGJhY2tncm91bmQ6ICNlNmU2ZTY7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgICAudXNlci1saXN0IHsKICAgICAgbWFyZ2luOiAyMHB4IC0yMHB4IDA7CiAgICAgIHBhZGRpbmc6IDAgMjBweDsKICAgIH0KICAgIC5pdGVtLWJ0biB7CiAgICAgICYgKyAuaXRlbS1idG4gewogICAgICAgIG1hcmdpbi10b3A6IDE1cHg7CiAgICAgIH0KICAgIH0KICB9Cn0KLmVsLXNjcm9sbGJhcl94IC9kZWVwLyAuZWwtc2Nyb2xsYmFyX193cmFwIHsKICBvdmVyZmxvdy14OiBoaWRkZW47Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/score-analysis-admin/components/business/BAllotUser","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"header\">\n      <div class=\"header-right\">\n        <span class=\"current-role\">当前角色：</span>\n        <el-tag>{{ roleName }}</el-tag>\n      </div>\n      <div class=\"header-left\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-arrow-left\"\n          size=\"small\"\n          @click=\"$router.push('/system/role')\"\n          >返回</el-button\n        >\n      </div>\n    </div>\n    <div v-loading=\"loading\" class=\"menu-box\">\n      <el-col :sm=\"10\" class=\"card-box-col\">\n        <el-card class=\"card-box\">\n          <div class=\"card-label tc\">\n            未分配用户\n          </div>\n          <div>\n            <el-input\n              size=\"small\"\n              v-model.trim=\"undist.staffName\"\n              placeholder=\"输入账号或姓名搜索\"\n              @keyup.native=\"search($event, 0)\"\n            />\n          </div>\n\n          <div\n            class=\"user-list\"\n            @scroll=\"scroll($event, 0)\"\n            style=\"overflow-y: auto; height: calc(100vh - 84px - 94px - 126px - 40px); \"\n          >\n            <!-- <el-scrollbar\n              ref=\"scrollbar\"\n              class=\"el-scrollbar_x\"\n              style=\"overflow-y: auto; height: calc(100vh - 84px - 94px - 126px - 40px); \"\n            > -->\n            <el-table\n              size=\"small\"\n              :data=\"undist.list\"\n              border\n              @selection-change=\"\n                res => {\n                  undist.checked = res;\n                }\n              \"\n            >\n              <el-table-column type=\"selection\" align=\"center\" />\n              <el-table-column label=\"账号\" prop=\"staffCode\" />\n              <el-table-column label=\"姓名\" prop=\"staffName\" />\n            </el-table>\n            <!-- </el-scrollbar> -->\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :sm=\"4\" class=\"card-box-col\">\n        <div class=\"card-box tb\" style=\"display: table; width: 100%;\">\n          <div\n            class=\"td\"\n            style=\"vertical-align: middle;text-align:center; display: table-cell;\"\n          >\n            <div class=\"item-btn\">\n              <el-button\n                size=\"small\"\n                :loading=\"distLoading\"\n                type=\"primary\"\n                @click=\"add\"\n              >\n                添加分配\n                <i class=\"el-icon-arrow-right\" />\n              </el-button>\n            </div>\n            <div class=\"item-btn cancelbtn\">\n              <el-button size=\"small\" :loading=\"undistLoading\" @click=\"remove\">\n                <i class=\"el-icon-arrow-left\" />\n                取消分配\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </el-col>\n      <el-col :sm=\"10\" class=\"card-box-col\">\n        <el-card class=\"card-box\">\n          <div class=\"card-label card-label2 tc\">\n            已分配用户\n          </div>\n          <div>\n            <el-input\n              size=\"small\"\n              v-model.trim=\"dist.staffName\"\n              placeholder=\"输入账号或姓名搜索\"\n              @keyup.native=\"search($event, 1)\"\n            />\n          </div>\n\n          <div\n            class=\"user-list\"\n            style=\"height:calc(100vh - 84px - 94px - 126px - 40px);overflow-y: auto; overflow-x: hidden;\"\n            @scroll=\"scroll($event, 1)\"\n          >\n            <!-- <el-scrollbar\n              class=\"el-scrollbar_x\"\n              style=\"height:calc(100vh - 84px - 94px - 126px - 40px);overflow-y: auto; overflow-x: hidden;\"\n            > -->\n            <el-table\n              size=\"small\"\n              :data=\"dist.list\"\n              border\n              @selection-change=\"\n                res => {\n                  dist.checked = res;\n                }\n              \"\n            >\n              <el-table-column type=\"selection\" align=\"center\" />\n              <el-table-column label=\"账号\" prop=\"staffCode\" />\n              <el-table-column label=\"姓名\" prop=\"staffName\" />\n            </el-table>\n            <!-- </el-scrollbar> -->\n          </div>\n        </el-card>\n      </el-col>\n    </div>\n  </div>\n</template>\n<script>\nimport Vue from 'vue';\nimport axios from '@/plugins/axios';\nimport {\n  Card,\n  Tree,\n  Row,\n  Input,\n  Select,\n  Form,\n  FormItem,\n  Col,\n  Table,\n  TableColumn,\n  Scrollbar,\n  Tag,\n  Loading\n} from 'element-ui';\nimport CSvgIcon from '@/components/common/CSvgIcon';\n\nlet count = 0;\n\nfunction deleteOrFindArr(arrData, obj, children, _all, find, replaceArr) {\n  //删除或查找数组中有某个对象的元素. _all代表是否全部删除\n  children = children || 'children'; //obj可以是基本数据类型.replaceArr在删除的位置添加的数据\n  if (!Object.prototype.toString.call(find) === '[object Array]') {\n    find = find ? [] : find;\n  }\n  if (Object.prototype.toString.call(arrData) === '[object Array]') {\n    for (var i = 0; i < arrData.length; i++) {\n      var m = arrData[i],\n        flg = 1;\n      if (obj && typeof obj == 'object') {\n        for (var j in obj) {\n          if (\n            typeof obj[j] == 'function'\n              ? !obj[j](j, m[j], m, arrData, i)\n              : m[j] != obj[j]\n          ) {\n            flg = 0;\n            break;\n          }\n        }\n      } else {\n        if (m != obj) {\n          flg = 0;\n        }\n      }\n      if (flg) {\n        if (find) {\n          find.push(m);\n        } else {\n          if (typeof replaceArr == 'function') {\n            replaceArr = replaceArr(i, m, arrData);\n          }\n          replaceArr =\n            Object.prototype.toString.call(replaceArr) == '[object Array]'\n              ? replaceArr\n              : replaceArr || [];\n          arrData.splice.apply(arrData, [i, 1].concat(replaceArr));\n          i--;\n          _all && (i = i + replaceArr.length);\n        }\n        if (!_all) {\n          break;\n        }\n      }\n      obj &&\n        typeof obj == 'object' &&\n        deleteOrFindArr(m, obj, children, _all, find, replaceArr);\n    }\n  } else if (arrData && typeof arrData == 'object') {\n    Object.prototype.toString.call(arrData[children]) === '[object Array]' &&\n      deleteOrFindArr(arrData[children], obj, children, _all, find, replaceArr);\n  }\n  return find;\n}\n\nVue.use(Loading);\nexport default {\n  name: 'BAllotUser',\n  components: {\n    [Card.name]: Card,\n    [Tree.name]: Tree,\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Input.name]: Input,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [CSvgIcon.name]: CSvgIcon,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    [Scrollbar.name]: Scrollbar,\n    [Tag.name]: Tag\n  },\n  props: {\n    /**\n     * 服务器类型\n     */\n    serverType: {\n      type: String,\n      default: ''\n    }\n  },\n  data() {\n    return {\n      roleName: '',\n      listLoading: false,\n      dist: {\n        //已分配用户\n        pagin: {\n          roleId: this.$route.query.roleId,\n          limit: 50,\n          page: 1,\n          offset: 0\n        },\n        staffName: '', //搜索字段\n        checked: [],\n        list: []\n      },\n      undist: {\n        //未分配用户\n        pagin: {\n          roleId: this.$route.query.roleId,\n          limit: 50,\n          page: 1,\n          offset: 0\n        },\n        staffName: '',\n        checked: [],\n        list: [\n          // { id: 1, name: \"张三\", number: \"100011\" }\n        ]\n      },\n      saveData: {\n        //已分配用户\n        add: [], //添加了\n        remove: [] //移除了\n      },\n      distLoading: false, // 分配中\n      undistLoading: false, // 取消分配中\n      loading: false, // 加载中\n      lastRequest1: null,\n      lastRequest2: null\n    };\n  },\n  created() {\n    var roleId = this.$route.query.roleId;\n    if (!roleId) {\n      return this.$router.go(-1);\n    }\n    this.loading = true;\n    Promise.all([this.getUndist(), this.getDist()])\n      .then(() => {\n        return axios(\n          {\n            method: 'GET',\n            url: `/usergw/admin/roleAuth/getRoleName/${roleId}`\n          },\n          this.serverType\n        );\n      })\n      .then(res => {\n        this.roleName = res.data;\n        this.loading = false;\n      })\n      .catch(() => {\n        this.loading = false;\n      });\n  },\n  methods: {\n    lock(type) {\n      setTimeout(() => {\n        this['_lock' + type] = false;\n      }, 50);\n    },\n    /**\n     * 查询用户列表\n     */\n    queryUser(type, pagin, key) {\n      // type=0分配  1未分配,key:搜索字段\n      return axios(\n        {\n          method: 'GET',\n          url: '/usergw/admin/edusysStaff/selectUserByRoleId',\n          params: {\n            type: type,\n            ...pagin,\n            staffName: key\n          }\n        },\n        this.serverType\n      );\n    },\n    getUndist(key) {\n      //未分配\n      // console.log(this.undist.pagin.offset);\n      let lastRequeset = (this.lastRequest1 = ++count);\n      return this.queryUser(1, this.undist.pagin, this.undist.staffName)\n        .then(res => {\n          // 是否是最后一次请求\n          if (lastRequeset !== this.lastRequest1) return;\n          var data = res.data.records || [];\n          this.undist.list = this.undist.list.concat(data);\n          // this._el && (this._el.scrollTop = this._scrollTop);\n          // if (data.length == this.undist.pagin.limit) {\n          this.$nextTick(() => {\n            this._el && (this._el.scrollTop = this._scrollTop);\n            this.lock(0);\n          });\n          // }\n        })\n        .catch(() => {\n          //this.lock(0)\n        });\n    },\n    getDist(key) {\n      let lastRequeset = (this.lastRequest2 = ++count);\n      return this.queryUser(0, this.dist.pagin, this.dist.staffName)\n        .then(res => {\n          // 是否是最后一次请求\n          if (lastRequeset !== this.lastRequest2) return;\n          var data = res.data.records || [];\n          this.dist.list = this.dist.list.concat(data);\n          // this._el && (this._el.scrollTop = this._scrollTop);\n          // if (data.length == this.dist.pagin.limit) {\n          this.$nextTick(() => {\n            this._el && (this._el.scrollTop = this._scrollTop);\n            this.lock(1);\n          });\n          // }\n        })\n        .catch(() => {\n          //this.lock(1)\n        });\n    },\n    search(ev, type) {\n      if (ev.which == 13) {\n        if (type) {\n          this.dist.pagin.page = 1;\n          this.dist.pagin.offset = 0;\n          this.dist.list = [];\n          this.getDist();\n        } else {\n          this.undist.pagin.page = 1;\n          this.undist.pagin.offset = 0;\n          this.undist.list = [];\n          this.getUndist();\n        }\n      }\n    },\n    scroll(ev, type) {\n      //type:0未分配\n      var el = ev.target || ev.srcElement;\n      var max = el.scrollHeight - Math.max(el.clientHeight, el.offsetHeight);\n      // console.log(max,el.scrollTop);\n      if (max - el.scrollTop <= 10) {\n        if (this['_lock' + type]) {\n          return;\n        }\n        this['_lock' + type] = true;\n        this.$nextTick(() => {\n          this._el = el;\n          this._scrollTop = el.scrollTop;\n          type ? this.dist.pagin.page++ : this.undist.pagin.page++;\n          type\n            ? (this.dist.pagin.offset =\n                (this.dist.pagin.page - 1) * this.dist.pagin.limit)\n            : (this.undist.pagin.offset =\n                (this.undist.pagin.page - 1) * this.undist.pagin.limit);\n          type ? this.getDist() : this.getUndist();\n        });\n      }\n      // console.log(Math.random());\n    },\n    add() {\n      //console.log(this.undist.checked);\n      if (!(this.undist.checked && this.undist.checked.length > 0)) {\n        return this.$message.warning('请至少选择一个未分配用户');\n      }\n      this.distLoading = true;\n      this.updateDistData(\n        this.undist.checked.map(item => item.staffId),\n        []\n      )\n        .then(() => {\n          this.distLoading = false;\n          for (var i in this.undist.checked) {\n            var m = this.undist.checked[i];\n            this.dist.list.unshift(m);\n            deleteOrFindArr(this.undist.list, m, '', 0);\n\n            deleteOrFindArr(this.saveData.remove, m.staffId, '', 0);\n            var res = deleteOrFindArr(this.saveData.add, m.staffId, '', 0, 1);\n            if (res.length < 1) {\n              this.saveData.add.push(m.staffId);\n            }\n          }\n          this.refresh(0);\n          this.refresh(1);\n        })\n        .catch(() => {\n          this.distLoading = false;\n        });\n      //console.log(this.saveData)\n    },\n    remove() {\n      //console.log(this.dist.checked);\n      if (!(this.dist.checked && this.dist.checked.length > 0)) {\n        return this.$message.warning('请至少选择一个已分配用户');\n      }\n      this.undistLoading = true;\n      this.updateDistData(\n        [],\n        this.dist.checked.map(item => item.staffId)\n      )\n        .then(() => {\n          this.undistLoading = false;\n          for (var i in this.dist.checked) {\n            var m = this.dist.checked[i];\n            this.undist.list.unshift(m);\n            deleteOrFindArr(this.dist.list, m, '', 0);\n\n            deleteOrFindArr(this.saveData.add, m.staffId, '', 0);\n            var res = deleteOrFindArr(\n              this.saveData.remove,\n              m.staffId,\n              '',\n              0,\n              1\n            );\n            if (res.length < 1) {\n              this.saveData.remove.push(m.staffId);\n            }\n          }\n          this.refresh(0);\n          this.refresh(1);\n        })\n        .catch(() => {\n          this.undistLoading = false;\n        });\n      //console.log(this.saveData)\n    },\n    /**\n     * 保存用户分配数据\n     */\n    saveAllotData(data) {\n      return axios(\n        {\n          method: 'POST',\n          url: '/usergw/admin/roleUser/roleAddUser',\n          data\n        },\n        this.serverType\n      );\n    },\n    handleSave() {\n      //保存\n      // console.log(this.saveData)\n      return this.saveAllotData({\n        ...this.saveData,\n        roleId: this.$route.query.roleId\n      }).then(res => {\n        this.saveData.add = [];\n        this.saveData.remove = [];\n        this.$message.success('保存成功');\n      });\n    },\n    /**\n     * 更新分配数据\n     * @param {Array} add 添加分配\n     * @param {Array} remove 移除分配\n     */\n    updateDistData(add, remove) {\n      return this.saveAllotData({\n        add,\n        remove,\n        roleId: this.$route.query.roleId\n      }).then(res => {\n        this.saveData.add = [];\n        this.saveData.remove = [];\n        this.$message.success('保存成功');\n      });\n    },\n    /**\n     * 刷新列表\n     * - 0 (未分配列表)\n     * - 1 (已分配列表)\n     * @param {Number} type 刷新什么列表\n     */\n    refresh(type) {\n      var name = type ? 'dist' : 'undist';\n      // 刷新列表的方法\n      var fn = type ? this.getDist : this.getUndist;\n      // 列表的参数\n      var param = type ? this.dist : this.undist;\n      // 滚动容器\n      var el = this.$refs[type ? 'dist' : 'undist'];\n      if (param.list.length) {\n        var offset = param.pagin.offset;\n        var limit = param.pagin.limit;\n        param.pagin.offset = 0;\n        param.pagin.limit = param.list.length;\n        var restore = () => {\n          param.pagin.offset = offset;\n          param.pagin.limit = limit;\n        };\n        param.list = [];\n        fn()\n          .then(() => {\n            restore();\n          })\n          .catch(restore);\n      } else {\n        param.pagin.offset = 0;\n        fn();\n      }\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.header {\n  margin-bottom: 15px;\n  &-right {\n    float: right;\n    font-size: 14px;\n    line-height: 32px;\n    .current-role {\n      font-weight: bold;\n    }\n  }\n}\n.menu-box {\n  &::after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n  .card-box {\n    height: calc(100vh - 84px - 94px - 60px);\n    margin-bottom: 0;\n    overflow: hidden;\n    position: relative;\n    padding-top: 58px;\n    &.card-auto {\n      height: auto;\n    }\n    .card-label {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      background: #4072ee;\n      padding: 18px 0 20px;\n      color: #fff;\n      z-index: 2;\n      font-size: 14px;\n      text-align: center;\n      // height: 58px;\n    }\n    .card-label2 {\n      background: #0e5ebb;\n    }\n    .card-list {\n      margin: -20px;\n      > .card-item {\n        padding: 6px 10px;\n        cursor: pointer;\n        font-size: 14px;\n        &:hover {\n          background: #e6e6e6;\n        }\n      }\n    }\n    .user-list {\n      margin: 20px -20px 0;\n      padding: 0 20px;\n    }\n    .item-btn {\n      & + .item-btn {\n        margin-top: 15px;\n      }\n    }\n  }\n}\n.el-scrollbar_x /deep/ .el-scrollbar__wrap {\n  overflow-x: hidden;\n}\n</style>\n"]}]}