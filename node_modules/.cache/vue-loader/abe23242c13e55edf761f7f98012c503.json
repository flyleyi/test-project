{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/common/CDynamicForm/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/common/CDynamicForm/index.vue","mtime":1627979214237},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEZk1vZHVsZXMgZnJvbSAnLi9jb21wb25lbnRzL2RmLW1vZHVsZXMnOwppbXBvcnQgeyBGb3JtLCBGb3JtSXRlbSB9IGZyb20gJ2VsZW1lbnQtdWknOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDRHluYW1pY0Zvcm0nLAogIGNvbXBvbmVudHM6IHsKICAgIC4uLkRmTW9kdWxlcywKICAgIFtGb3JtLm5hbWVdOiBGb3JtLAogICAgW0Zvcm1JdGVtLm5hbWVdOiBGb3JtSXRlbQogIH0sCiAgcHJvdmlkZSgpIHsKICAgIHJldHVybiB7CiAgICAgIENEeW5hbWljRm9ybTogdGhpcwogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIOihqOWNleaVsOaNrgogICAgICovCiAgICBmb3JtRGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSkKICAgIH0sCiAgICAvKioKICAgICAqIOihqOWNleWFg+e0oOWIl+ihqAogICAgICovCiAgICBmb3JtSXRlbXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgLyoqCiAgICAgKiDooajljZXlsZ7mgKcKICAgICAqLwogICAgZm9ybUF0dHJzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluaXRDb3VudDogMCwgLy/lj5jmm7Tml7bph43mlrDmuLLmn5PooajljZXnu4Tku7YKICAgICAgbW9kZWw6IHt9LCAvLyDmlbDmja7mqKHlnosKICAgICAgYWpheExvYWRMaXN0OiBbXSwgLy8gYWpheOato+WcqOivt+axguWIl+ihqAogICAgICAvLyDop6Pnu5HliJfooagKICAgICAgdW53YXRjaExpc3Q6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHt9LAogIHdhdGNoOiB7CiAgICBmb3JtRGF0YTogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyOiAnY2hhbmdlRm9ybURhdGEnLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIOmFjee9rumhueWPmOWKqOmHjeaWsOWIneWni+WMlgogICAgICovCiAgICBmb3JtSXRlbXM6IHsKICAgICAgaGFuZGxlcjogJ2luaXQnLAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmV4dGVuZEVsRm9ybU1ldGhvZHMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICog5omL5Yqo5pu05paw6KGo5Y2V57uE5Lu277yM5L2/5qCh6aqM5Yqf6IO95Y+K6IGU5Yqo5LiL5ouJ5Yqf6IO95q2j5bi45L2/55SoCiAgICAgKi8KICAgIGluaXQoKSB7CiAgICAgIHRoaXMuaW5pdENvdW50ICs9IDE7CiAgICAgIHRoaXMuY2hhbmdlRm9ybUl0ZW1zKCk7CiAgICB9LAogICAgLyoqCiAgICAgKiDooajljZXlhYPntKDphY3nva7mlLnlj5gKICAgICAqLwogICAgY2hhbmdlRm9ybUl0ZW1zKCkgewogICAgICAvLyB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIC8vICAgLy8g6Kej57uR5LiK5qyh57uR5a6a55qECiAgICAgIC8vICAgdGhpcy5leGVjVW53YXRjaCgpOwogICAgICAvLyAgIC8vIOebkeWQrOaPkuS7tuexu+Wei+eahOihqOWNleWFg+e0oOWAvAogICAgICAvLyAgIGNvbnN0IGZuID0gbGlzdCA9PgogICAgICAvLyAgICAgbGlzdC5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAvLyAgICAgICBpZiAoaXRlbS50eXBlID09PSAnY3VzdG9tJykgewogICAgICAvLyAgICAgICAgIGNvbnN0IHVud2F0Y2ggPSB0aGlzLiR3YXRjaCgKICAgICAgLy8gICAgICAgICAgIGBtb2RlbC4ke2l0ZW0ucHJvcH1gLAogICAgICAvLyAgICAgICAgICAgKG5ld1ZhbCwgb2xkVmFsKSA9PiB7CiAgICAgIC8vICAgICAgICAgICAgIC8vIOWQkeS4iumAmuefpeaVsOaNruWPmOabtAogICAgICAvLyAgICAgICAgICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UtbW9kZWwnLCB0aGlzLm1vZGVsLCBuZXdWYWwsIGl0ZW0ucHJvcCk7CiAgICAgIC8vICAgICAgICAgICB9CiAgICAgIC8vICAgICAgICAgKTsKICAgICAgLy8gICAgICAgICB0aGlzLnVud2F0Y2hMaXN0LnB1c2godW53YXRjaCk7CiAgICAgIC8vICAgICAgIH0KICAgICAgLy8gICAgICAgQXJyYXkuaXNBcnJheShpdGVtLmNoaWxkcmVuKSAmJiBmbihpdGVtLmNoaWxkcmVuKTsKICAgICAgLy8gICAgIH0pOwogICAgICAvLyAgIGZuKHRoaXMuZm9ybUl0ZW1zKTsKICAgICAgLy8gfSk7CiAgICB9LAogICAgLyoqCiAgICAgKiDmiafooYzop6Pnu5EKICAgICAqLwogICAgZXhlY1Vud2F0Y2goKSB7CiAgICAgIHRoaXMudW53YXRjaExpc3QubWFwKGl0ZW0gPT4gaXRlbSgpKTsKICAgICAgdGhpcy51bndhdGNoTGlzdCA9IFtdOwogICAgfSwKICAgIC8qKgogICAgICog5Yid5aeL5YyW5pWw5o2u5qih5Z6LCiAgICAgKi8KICAgIGNoYW5nZUZvcm1EYXRhKCkgewogICAgICB0aGlzLm1vZGVsID0gdGhpcy5mb3JtRGF0YTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDlgLzmlLnlj5gKICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUg5YC8CiAgICAgKiBAcGFyYW0geyp9IGl0ZW0g6KGo5Y2V5YWD57Sg6YWN572uCiAgICAgKi8KICAgIG9uQ2hhbmdlVmFsdWUodmFsdWUsIGl0ZW0pIHsKICAgICAgLy8g5pu05paw5pWw5o2uCiAgICAgIC8vIHRoaXMubW9kZWxbaXRlbS5wcm9wXSA9IHZhbHVlOwogICAgICB0aGlzLiRzZXQodGhpcy5tb2RlbCwgaXRlbS5wcm9wLCB2YWx1ZSk7CiAgICAgIC8vIOWQkeS4iumAmuefpeaVsOaNruWPmOabtAogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UtbW9kZWwnLCB0aGlzLm1vZGVsLCB2YWx1ZSwgaXRlbS5wcm9wKTsKICAgIH0sCiAgICAvKioKICAgICAqIOWxleekuuWAvOaUueWPmAogICAgICogQHBhcmFtIHsqfSB2YWx1ZSDlgLwKICAgICAqIEBwYXJhbSB7Kn0ga2V5IOWvueixoWtleQogICAgICovCiAgICBvbkNoYW5nZUxhYmVsKGtleSwgdmFsdWUpIHsKICAgICAgLy8g5pu05paw5pWw5o2uCiAgICAgIHRoaXMubW9kZWxba2V5XSA9IHZhbHVlOwogICAgICAvLyDlkJHkuIrpgJrnn6XmlbDmja7lj5jmm7QKICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlLW1vZGVsJywgdGhpcy5tb2RlbCwgdmFsdWUsIGtleSk7CiAgICB9LAogICAgLyoqCiAgICAgKiBhamF46K+35rGC5Y+R6LW3CiAgICAgKiBAcGFyYW0ge1N5bWJvbH0gc3ltYm9sIOivt+axguWUr+S4gOagh+ivhgogICAgICovCiAgICBvbkFqYXhTdGFydChzeW1ib2wpIHsKICAgICAgdGhpcy5hamF4TG9hZExpc3QucHVzaChzeW1ib2wpOwogICAgfSwKICAgIC8qKgogICAgICogYWpheOivt+axgue7k+adnwogICAgICogQHBhcmFtIHtTeW1ib2x9IHN5bWJvbCDor7fmsYLllK/kuIDmoIfor4YKICAgICAqLwogICAgb25BamF4RW5kKHN5bWJvbCkgewogICAgICBsZXQgeyBhamF4TG9hZExpc3QgfSA9IHRoaXM7CiAgICAgIGxldCBpbmRleCA9IGFqYXhMb2FkTGlzdC5pbmRleE9mKHN5bWJvbCk7CiAgICAgIGluZGV4ICE9PSAtMSAmJiBhamF4TG9hZExpc3Quc3BsaWNlKGluZGV4LCAxKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDnu6fmib9FbEZvcm3nu4Tku7bmlrnms5UKICAgICAqLwogICAgZXh0ZW5kRWxGb3JtTWV0aG9kcygpIHsKICAgICAgbGV0IGVsRm9ybSA9IHRoaXMuJHJlZnMuZWxGb3JtOwogICAgICBbJ3ZhbGlkYXRlJywgJ3ZhbGlkYXRlRmllbGQnLCAncmVzZXRGaWVsZHMnLCAnY2xlYXJWYWxpZGF0ZSddLmZvckVhY2goCiAgICAgICAga2V5ID0+IHsKICAgICAgICAgIGxldCBtZXRob2RzID0gZWxGb3JtW2tleV07CiAgICAgICAgICB0eXBlb2YgbWV0aG9kcyA9PT0gJ2Z1bmN0aW9uJyAmJiAodGhpc1trZXldID0gbWV0aG9kcyk7CiAgICAgICAgfQogICAgICApOwogICAgfSwKICAgIC8qKgogICAgICog6K6+572ubW9kZWzmlbDmja4KICAgICAqIEBwYXJhbSB7Kn0gcHJvcCDlrZfmrrXlkI0KICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUg5YC8CiAgICAgKi8KICAgIHNldE1vZGVsRGF0YShwcm9wLCB2YWx1ZSkgewogICAgICBsZXQgcmVzID0gdGhpcy5mb3JtSXRlbXMuZmluZChpdGVtID0+IGl0ZW0ucHJvcCA9PT0gcHJvcCk7CiAgICAgIHJlcyAmJiB0aGlzLm9uQ2hhbmdlVmFsdWUodmFsdWUsIHJlcyk7CiAgICB9LAogICAgLyoqCiAgICAgKiDmmK/lkKbpmpDol4/ooajljZXpobkKICAgICAqIEBwYXJhbSB7Kn0gaXRlbSDooajljZXpobkKICAgICAqLwogICAgaXNIaWRkZW4oaXRlbSkgewogICAgICBpZiAodHlwZW9mIGl0ZW0uaGlkZGVuID09PSAnZnVuY3Rpb24nKQogICAgICAgIHJldHVybiBpdGVtLmhpZGRlbi5jYWxsKG51bGwsIHRoaXMubW9kZWwpOwogICAgICByZXR1cm4gaXRlbS5oaWRkZW47CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/components/common/CDynamicForm","sourcesContent":["<template>\n  <el-form\n    class=\"dynamic-form\"\n    ref=\"elForm\"\n    v-bind=\"formAttrs\"\n    :model=\"model\"\n    @submit.native.prevent\n  >\n    <slot name=\"form-before\" />\n    <template v-for=\"(item, index) in formItems\">\n      <el-form-item\n        v-if=\"item.type && !isHidden(item)\"\n        :key=\"(item.initCount || initCount) + '|' + index\"\n        :prop=\"item.prop\"\n        :label=\"item.label\"\n        :rules=\"item.rules\"\n      >\n        <slot\n          :name=\"'custom|' + item.prop\"\n          v-bind:data=\"model\"\n          v-if=\"item.type == 'custom'\"\n        ></slot>\n        <component\n          :value=\"model[item.prop]\"\n          :is=\"`df-${item.type}`\"\n          :config=\"item\"\n          @change-value=\"val => onChangeValue(val, item)\"\n          @change-label=\"onChangeLabel\"\n          @ajax-start=\"onAjaxStart\"\n          @ajax-end=\"onAjaxEnd\"\n          v-else\n        />\n      </el-form-item>\n    </template>\n    <slot name=\"form-after\" />\n  </el-form>\n</template>\n\n<script>\nimport DfModules from './components/df-modules';\nimport { Form, FormItem } from 'element-ui';\n\nexport default {\n  name: 'CDynamicForm',\n  components: {\n    ...DfModules,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem\n  },\n  provide() {\n    return {\n      CDynamicForm: this\n    };\n  },\n  props: {\n    /**\n     * 表单数据\n     */\n    formData: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * 表单元素列表\n     */\n    formItems: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * 表单属性\n     */\n    formAttrs: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      initCount: 0, //变更时重新渲染表单组件\n      model: {}, // 数据模型\n      ajaxLoadList: [], // ajax正在请求列表\n      // 解绑列表\n      unwatchList: []\n    };\n  },\n  computed: {},\n  watch: {\n    formData: {\n      deep: true,\n      handler: 'changeFormData',\n      immediate: true\n    },\n    /**\n     * 配置项变动重新初始化\n     */\n    formItems: {\n      handler: 'init',\n      immediate: true\n    }\n  },\n  mounted() {\n    this.extendElFormMethods();\n  },\n  methods: {\n    /**\n     * 手动更新表单组件，使校验功能及联动下拉功能正常使用\n     */\n    init() {\n      this.initCount += 1;\n      this.changeFormItems();\n    },\n    /**\n     * 表单元素配置改变\n     */\n    changeFormItems() {\n      // this.$nextTick(() => {\n      //   // 解绑上次绑定的\n      //   this.execUnwatch();\n      //   // 监听插件类型的表单元素值\n      //   const fn = list =>\n      //     list.forEach(item => {\n      //       if (item.type === 'custom') {\n      //         const unwatch = this.$watch(\n      //           `model.${item.prop}`,\n      //           (newVal, oldVal) => {\n      //             // 向上通知数据变更\n      //             this.$emit('change-model', this.model, newVal, item.prop);\n      //           }\n      //         );\n      //         this.unwatchList.push(unwatch);\n      //       }\n      //       Array.isArray(item.children) && fn(item.children);\n      //     });\n      //   fn(this.formItems);\n      // });\n    },\n    /**\n     * 执行解绑\n     */\n    execUnwatch() {\n      this.unwatchList.map(item => item());\n      this.unwatchList = [];\n    },\n    /**\n     * 初始化数据模型\n     */\n    changeFormData() {\n      this.model = this.formData;\n    },\n\n    /**\n     * 值改变\n     * @param {*} value 值\n     * @param {*} item 表单元素配置\n     */\n    onChangeValue(value, item) {\n      // 更新数据\n      // this.model[item.prop] = value;\n      this.$set(this.model, item.prop, value);\n      // 向上通知数据变更\n      this.$emit('change-model', this.model, value, item.prop);\n    },\n    /**\n     * 展示值改变\n     * @param {*} value 值\n     * @param {*} key 对象key\n     */\n    onChangeLabel(key, value) {\n      // 更新数据\n      this.model[key] = value;\n      // 向上通知数据变更\n      this.$emit('change-model', this.model, value, key);\n    },\n    /**\n     * ajax请求发起\n     * @param {Symbol} symbol 请求唯一标识\n     */\n    onAjaxStart(symbol) {\n      this.ajaxLoadList.push(symbol);\n    },\n    /**\n     * ajax请求结束\n     * @param {Symbol} symbol 请求唯一标识\n     */\n    onAjaxEnd(symbol) {\n      let { ajaxLoadList } = this;\n      let index = ajaxLoadList.indexOf(symbol);\n      index !== -1 && ajaxLoadList.splice(index, 1);\n    },\n\n    /**\n     * 继承ElForm组件方法\n     */\n    extendElFormMethods() {\n      let elForm = this.$refs.elForm;\n      ['validate', 'validateField', 'resetFields', 'clearValidate'].forEach(\n        key => {\n          let methods = elForm[key];\n          typeof methods === 'function' && (this[key] = methods);\n        }\n      );\n    },\n    /**\n     * 设置model数据\n     * @param {*} prop 字段名\n     * @param {*} value 值\n     */\n    setModelData(prop, value) {\n      let res = this.formItems.find(item => item.prop === prop);\n      res && this.onChangeValue(value, res);\n    },\n    /**\n     * 是否隐藏表单项\n     * @param {*} item 表单项\n     */\n    isHidden(item) {\n      if (typeof item.hidden === 'function')\n        return item.hidden.call(null, this.model);\n      return item.hidden;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped></style>\n"]}]}