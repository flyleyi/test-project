{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/common/CDynamicForm/components/DfCascader.vue?vue&type=style&index=0&id=49506fee&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/common/CDynamicForm/components/DfCascader.vue","mtime":1627979214237},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmN0cmVlIHsNCiAgJi1pbnB1dCAvZGVlcC8gaW5wdXQgew0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgfQ0KDQogICYtcG9zIHsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgbGVmdDogMDsNCiAgICB0b3A6IDEwMCU7DQogICAgei1pbmRleDogMTExMTsNCiAgICByaWdodDogMDsNCiAgICBib3gtc2hhZG93OiAwIDJweCAxMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNGU3ZWQ7DQogICAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgcGFkZGluZzogNnB4IDIwcHg7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICBtYXJnaW4tYm90dG9tOiA0MHB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["DfCascader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DfCascader.vue","sourceRoot":"src/components/common/CDynamicForm/components","sourcesContent":["<template>\r\n  <div class=\"ctree\" @click.stop>\r\n    <!-- <template v-if=\"!attrs.cascader\">\r\n      <el-input\r\n        v-model.trim=\"innerValue\"\r\n        @click.native=\"isTreeOpen = true\"\r\n        class=\"ctree-input\"\r\n        type=\"input\"\r\n        suffix-icon=\"el-icon-arrow-down\"\r\n        readonly\r\n      >\r\n      </el-input>\r\n      <div\r\n        class=\"ctree-pos el-popper\"\r\n        x-placement=\"bottom-start\"\r\n        v-if=\"isTreeOpen\"\r\n      >\r\n        <div class=\"popper__arrow\" style=\"left:35px\"></div>\r\n        <el-tree\r\n          :props=\"defaultProps\"\r\n          @node-click=\"handleNodeClick\"\r\n          @check=\"handleCheck\"\r\n          v-bind=\"attrs\"\r\n          v-on=\"events\"\r\n          :data=\"tree\"\r\n        ></el-tree>\r\n      </div>\r\n    </template> -->\r\n    <template>\r\n      <el-cascader\r\n        v-on=\"events\"\r\n        v-bind=\"attrs\"\r\n        :props=\"attrs.props\"\r\n        v-model=\"val\"\r\n        :options=\"\r\n          treeDataChangeField(\r\n            tree,\r\n            attrs.settings || {\r\n              data: { id: 'value', name: 'label' },\r\n              treeNodes: 'children'\r\n            }\r\n          )\r\n        \"\r\n        @change=\"handleChange\"\r\n        style=\"width:100%\"\r\n      ></el-cascader>\r\n    </template>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Tree, Input, Cascader } from 'element-ui';\r\nimport Utils from './utils';\r\nimport dfMixin from '../mixins/df-mixin';\r\nexport default {\r\n  name: 'DfCascader',\r\n  mixins: [dfMixin],\r\n  components: {\r\n    [Tree.name]: Tree,\r\n    [Input.name]: Input,\r\n    [Cascader.name]: Cascader\r\n  },\r\n  created() {\r\n    //console.log('ctree Created...');\r\n\r\n    //多tags模式下不建议使用getData方式获取数据,会导致多次重复创建重复请求\r\n    this.attrs.getData &&\r\n      this.attrs.getData().then(res => {\r\n        this.tree = Utils.deleteEmpty(res.data || res || []);\r\n        console.log(this.tree);\r\n      });\r\n  },\r\n  props: {\r\n    value: [String, Number, Array]\r\n  },\r\n  data() {\r\n    return {\r\n      // data: [{\r\n      //   label: '一级 1',\r\n      //   id: 1\r\n      // }],\r\n      // defaultProps: {\r\n      //   children: 'children',\r\n      //   label: 'label'\r\n      // },\r\n      // isTreeOpen: false,\r\n      tree: []\r\n    };\r\n  },\r\n  watch: {\r\n    val() {\r\n      //解决v-model绑定\r\n      this.$emit('input', this.val);\r\n    },\r\n    'attrs.tree': {\r\n      handler(now) {\r\n        //console.log('attrs.tree', now , this);\r\n        if (this.attrs.getData) {\r\n          return;\r\n        }\r\n        this.tree = now || [];\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    treeDataChangeField: Utils.treeDataChangeField,\r\n    // handleNodeClick(data, node, ref) {\r\n    //   //树被点击事件\r\n    //   console.log(data, node, ref);\r\n    //   this.emit(node.data.id);\r\n    //   this.closeTree();\r\n    // },\r\n    // handleCheck() {\r\n    //   //当树复选框被点击的时候触发\r\n    //   console.log(arguments);\r\n    // },\r\n    // closeTree() {\r\n    //   //关闭树弹窗\r\n    //   this.isTreeOpen = false;\r\n    // },\r\n    handleChange(value) {\r\n      //当级联选中节点变化时触发\r\n      console.log(value);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.ctree {\r\n  &-input /deep/ input {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &-pos {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 100%;\r\n    z-index: 1111;\r\n    right: 0;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n    border: 1px solid #e4e7ed;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n    padding: 6px 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 40px;\r\n  }\r\n}\r\n</style>\r\n"]}]}