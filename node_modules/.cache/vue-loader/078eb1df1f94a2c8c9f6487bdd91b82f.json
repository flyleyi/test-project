{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BRoleManage/index.vue?vue&type=style&index=0&id=4263c0a1&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BRoleManage/index.vue","mtime":1627979214236},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucm9sZSB7CiAgYmFja2dyb3VuZDogI2ZmZjsKICBwYWRkaW5nOiAwIDI1cHggMDsKICAmLW1haW4gewogICAgcGFkZGluZy10b3A6IDIzcHg7CiAgfQogIC5kaWFsb2cgewogICAgJi1jb250ZW50IHsKICAgICAgJi1pdGVtIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAyOXB4OwogICAgICAgIG1hcmdpbi1sZWZ0OiA4cHg7CiAgICAgICAgJi1sYWJlbCB7CiAgICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgICAgIG1pbi13aWR0aDogOTBweDsKICAgICAgICB9CiAgICAgICAgJi1yZWQgewogICAgICAgICAgY29sb3I6ICNmNTIyMmQ7CiAgICAgICAgfQogICAgICAgICYtdGV4dCB7CiAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgICAgIH0KICAgICAgfQogICAgICAmLWJ0bnMgewogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICBwYWRkaW5nLWJvdHRvbTogMjdweDsKICAgICAgICBidXR0b24gewogICAgICAgICAgbWFyZ2luOiAwIDIwcHg7CiAgICAgICAgICB3aWR0aDogODZweDsKICAgICAgICAgIGhlaWdodDogMzZweDsKICAgICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgICAgICAgIC8vIGZvbnQtZmFtaWx5OiBQaW5nRmFuZ1NDLVJlZ3VsYXIsIFBpbmdGYW5nIFNDOwogICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/business/BRoleManage","sourcesContent":["<template>\n  <!-- 角色管理 -->\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      :headers=\"columns\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"ajaxGetRoleData\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n    ></b-table>\n    <!-- 新增编辑弹窗 -->\n    <el-dialog\n      :title=\"dialog.isedit ? '编辑' : '新增'\"\n      width=\"540px\"\n      center\n      class=\"dialog\"\n      :visible.sync=\"dialog.visible\"\n    >\n      <el-form ref=\"elForm\" label-width=\"80px\" :model=\"ruleForm\" :rules=\"rules\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input type=\"input\" v-model.trim=\"ruleForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input type=\"input\" v-model.trim=\"ruleForm.roleDesc\"></el-input>\n        </el-form-item>\n        <el-form-item v-if=\"dialog.isedit\" label=\"角色状态\" prop=\"roleDesc\">\n          <el-select v-model=\"ruleForm.isShow\">\n            <el-option\n              v-for=\"(item, index) in formItems[2].options\"\n              :key=\"index\"\n              :value=\"item.value\"\n              :label=\"item.label\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"dialog.visible = false\">取消</el-button>\n        <el-button size=\"small\" type=\"primary\" @click=\"sureDialog\"\n          >确定</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  Dialog,\n  Button,\n  Select,\n  Option,\n  Input,\n  Form,\n  FormItem\n} from 'element-ui';\nimport BTable from '../BTable';\nimport axios from '@/plugins/axios';\nfunction mergeDefault() {\n  var f = {},\n    m = arguments.length,\n    o = arguments[m - 1],\n    b = 0,\n    k,\n    h,\n    d,\n    g;\n  if (typeof o == 'boolean') {\n    b++;\n    h = o;\n  }\n  if (Object.prototype.toString.call(arguments[0]) === '[object Array]') {\n    d = true;\n    g = arguments[0];\n    k = arguments[1];\n  } else {\n    k = arguments[0] || {};\n  }\n  for (var c = 0; c < m - b; c++) {\n    var a = arguments[c];\n    for (var e in d ? g : k) {\n      var n = d ? g[e] : e;\n      if (a && a[n] !== undefined) {\n        h ? (f[n] = a[n]) : (k[n] = a[n]);\n      } else {\n        h && c == 0 && (f[n] = k[n]);\n      }\n    }\n  }\n  return h ? f : k;\n}\n\nexport default {\n  name: 'BRoleManage',\n  // 注册组件\n  components: {\n    [Dialog.name]: Dialog,\n    [Button.name]: Button,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [Input.name]: Input,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    BTable\n  },\n  props: {\n    /**\n     * 服务器类型\n     */\n    serverType: {\n      type: String,\n      default: ''\n    }\n  },\n  // 定义数据\n  data() {\n    // 权限校验方法\n    let $has = this.$has;\n    typeof $has !== 'function' && ($has = () => true);\n    return {\n      $has,\n      dialog: {\n        visible: false,\n        isedit: false\n      },\n      ruleForm: {\n        // roleId: '',//角色编码\n        roleName: '', //角色姓名\n        roleDesc: '', //角色描述\n        isShow: '' //角色状态 0启用 1禁用\n      },\n      rules: {\n        roleName: [\n          { required: true, trigger: 'blur', message: '角色名称未填写' }\n        ],\n        isShow: [{ required: true, trigger: 'blur', message: '角色状态未填写' }]\n      }\n    };\n  },\n  // 计算属性\n  computed: {\n    /**\n     * 表单列\n     */\n    columns() {\n      let btns = [\n        {\n          label: '编辑',\n          click: this.editTableRole,\n          hidden: () => !this.$has(['role-edit']),\n          size: 'mini',\n          type: 'primary'\n        },\n        {\n          label: '删除',\n          click: row => this.del(row.roleId),\n          hidden: () => !this.$has(['role-delete']),\n          size: 'mini',\n          type: 'primary'\n        },\n        {\n          label: '菜单授权',\n          click: row => this.menuPermission(row.roleId),\n          hidden: () => !this.$has(['role-permission']),\n          size: 'mini',\n          type: 'primary'\n        },\n        {\n          label: '分配用户',\n          click: row => this.allotUser(row.roleId),\n          hidden: () => !this.$has(['role-allotUser']),\n          size: 'mini',\n          type: 'primary'\n        }\n      ];\n      return [\n        {\n          label: '角色编码',\n          prop: 'roleId'\n        },\n        {\n          label: '角色名称',\n          prop: 'roleName',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '角色描述',\n          prop: 'roleDesc',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '角色状态',\n          prop: 'isShow',\n          formatter(row, column, cellValue) {\n            return cellValue == '0' ? '启用' : '禁用';\n          }\n        },\n        {\n          label: '操作',\n          colType: 'btns',\n          btns: btns.filter(item => this.$has(item.auth)),\n          width: '340px'\n        }\n      ];\n    },\n    /**\n     * 表单项\n     */\n    formItems() {\n      return [\n        {\n          type: 'input',\n          prop: 'roleName',\n          label: '角色名称：'\n        },\n        {\n          type: 'input',\n          prop: 'roleId',\n          label: '角色编码：'\n        },\n        {\n          type: 'select',\n          options: [\n            {\n              value: '0',\n              label: '启用'\n            },\n            {\n              value: '1',\n              label: '禁用'\n            }\n          ],\n          prop: 'isShow',\n          label: '状态：'\n        }\n      ];\n    },\n    /**\n     * 工具栏\n     */\n    toolbars() {\n      let toolbars = [\n        {\n          label: '新增',\n          click: this.addtableRole,\n          auth: ['role-add']\n        }\n      ];\n      return toolbars.filter(item => this.$has(item.auth));\n    }\n  },\n  // 侦听器\n  watch: {},\n  // 创建完成钩子\n  created() {},\n  // 挂在完成钩子\n  mounted() {},\n  // 方法定义\n  methods: {\n    ajaxGetRoleData(params) {\n      return axios(\n        {\n          method: 'GET',\n          url: '/usergw/admin/common/pageList/301',\n          params\n        },\n        this.serverType\n      );\n    },\n    menuPermission(id) {\n      //菜单授权\n      this.$router.push({\n        path: '/system/role/menu-auth',\n        query: {\n          id: id\n        }\n      });\n    },\n    del(id) {\n      //删除\n      this.$confirm('删除后不可恢复，确定删除？', '删除确认', {\n        customClass: 'box-danger',\n        center: true\n      })\n        .then(() => {\n          this.confirmLoading = true;\n          axios(\n            {\n              method: 'GET',\n              url: `/usergw/admin/roleAuth/deleteRole/${id}`\n            },\n            this.serverType\n          )\n            .then(({ data }) => {\n              this.$message({\n                type: 'success',\n                message: '删除成功!'\n              });\n              this.$refs.bTable.ajaxGetTableDataByPage();\n            })\n            .catch(() => {\n              this.confirmLoading = false;\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    allotUser(id) {\n      this.$router.push({\n        path: '/system/role/allot-user',\n        query: {\n          roleId: id\n        }\n      });\n    },\n    addtableRole() {\n      this.dialog.visible = true;\n      this.dialog.isedit = false;\n      for (var i in this.ruleForm) {\n        this.ruleForm[i] = '';\n      }\n      delete this.ruleForm.roleId;\n    },\n    editTableRole(row) {\n      this.dialog.visible = true;\n      this.dialog.isedit = true;\n      mergeDefault(this.ruleForm, row);\n      this.ruleForm.roleId = row.roleId;\n    },\n    async sureDialog() {\n      //新增编辑弹窗\n      if (!this.dialog.isedit) {\n        this.ruleForm.isShow = '0';\n      }\n      try {\n        await this.$refs.elForm.validate();\n\n        this.confirmLoading = true;\n        if (this.dialog.isedit) {\n          axios(\n            {\n              method: 'POST',\n              url: '/usergw/admin/common/save/301/02',\n              data: this.ruleForm\n            },\n            this.serverType\n          )\n            .then(({ data }) => {\n              this.dialog.visible = false;\n              this.$message({\n                type: 'success',\n                message: '编辑成功!'\n              });\n              this.$refs.bTable.ajaxGetTableDataByPage();\n            })\n            .catch(() => {\n              this.confirmLoading = false;\n            });\n        } else {\n          axios(\n            {\n              method: 'POST',\n              url: '/usergw/admin/common/save/301/01',\n              data: this.ruleForm\n            },\n            this.serverType\n          )\n            .then(({ data }) => {\n              this.dialog.visible = false;\n              this.$message({\n                type: 'success',\n                message: '新增成功!'\n              });\n              this.$refs.bTable.ajaxGetTableDataByPage();\n            })\n            .catch(() => {\n              this.confirmLoading = false;\n            });\n        }\n      } catch (e) {\n        // 表单校验失败\n        console.error('表单校验失败', e);\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.role {\n  background: #fff;\n  padding: 0 25px 0;\n  &-main {\n    padding-top: 23px;\n  }\n  .dialog {\n    &-content {\n      &-item {\n        margin-bottom: 29px;\n        margin-left: 8px;\n        &-label {\n          float: left;\n          min-width: 90px;\n        }\n        &-red {\n          color: #f5222d;\n        }\n        &-text {\n          text-align: left;\n        }\n      }\n      &-btns {\n        text-align: center;\n        padding-bottom: 27px;\n        button {\n          margin: 0 20px;\n          width: 86px;\n          height: 36px;\n          font-size: 14px;\n          // font-family: PingFangSC-Regular, PingFang SC;\n          font-weight: 400;\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}