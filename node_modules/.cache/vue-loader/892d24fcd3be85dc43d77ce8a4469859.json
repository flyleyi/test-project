{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/share-platform-admin/views/resourceLabel/labelManage/index.vue?vue&type=style&index=0&id=43931d6a&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/share-platform-admin/views/resourceLabel/labelManage/index.vue","mtime":1645176309822},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGFiZWwtYm94IHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwp9Ci50YWctbmFtZSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNjAwOwogIHdpZHRoOiAxMzBweDsKICBsaW5lLWhlaWdodDogMzJweDsKfQouYnV0dG9uLWZsZXggewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5idXR0b24tZmxleC10b3cgewogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KLmVsLWlub3V0LWJ1dHRvbiB7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7Cn0KLmVsLWlucHV0IHsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0KLmJveC1jYXJkIHsKICBtYXJnaW46IDEwcHggMDsKICB3aWR0aDogMTAwJTsKfQoudGFnLWdyb3VwLWl0ZW0gewogIG1hcmdpbjogNXB4Owp9Ci5hY3RpdmUgewogIGJhY2tncm91bmQ6ICM0MzkzZmQ7CiAgY29sb3I6ICNmZmY7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingssCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/share-platform-admin/views/resourceLabel/labelManage","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <div class=\"label-box\">\n      <el-tabs v-model=\"activeName\" type=\"border-card\" @tab-click=\"handleClick\">\n        <el-tab-pane label=\"一级资源标签\" name=\"first\">\n          <div class=\"button-flex\">\n            <span class=\"tag-name\">一级资源标签列表</span>\n            <el-button size=\"small\" @click=\"addFirstLabel\"\n              >添加一级资源标签</el-button\n            >\n          </div>\n          <b-table\n            ref=\"bTable\"\n            loading\n            empty-text=\"暂无数据\"\n            :headers=\"headers\"\n            :ajax-get-data=\"getLabelList\"\n            :show-column=\"false\"\n            :show-refresh=\"false\"\n            :pageLimit=\"10\"\n          ></b-table>\n        </el-tab-pane>\n        <el-tab-pane label=\"二级资源标签\" name=\"second\"\n          ><div class=\"button-flex\">\n            <div class=\"el-inout-button\">\n              <el-input\n                placeholder=\"搜索二级资源标签\"\n                prefix-icon=\"el-icon-search\"\n                v-model=\"inputData\"\n                size=\"small\"\n              >\n              </el-input>\n              <el-button type=\"primary\" size=\"small\" @click=\"selectLabel\"\n                >查询</el-button\n              >\n            </div>\n            <el-button size=\"small\" @click=\"visibleImport = true\"\n              >批量添加二级资源标签</el-button\n            >\n          </div>\n          <el-card class=\"box-card\" :body-style=\"{ padding: '5px' }\">\n            <el-button\n              round\n              :class=\"['tag-group-item', { active: currentId === '' }]\"\n              @click=\"changeTab('全部')\"\n              size=\"mini\"\n              >全部</el-button\n            >\n            <el-button\n              round\n              size=\"mini\"\n              :class=\"['tag-group-item', { active: currentId === item.id }]\"\n              v-for=\"item in allFirstLable\"\n              :key=\"item.id\"\n              @click=\"changeTab(item)\"\n            >\n              {{ item.resourcesName }}\n            </el-button>\n          </el-card>\n          <div class=\"button-flex button-flex-tow\">\n            <span class=\"tag-name\">二级资源标签列表</span>\n            <el-button size=\"small\" @click=\"addSecondLabel\"\n              >添加二级资源标签</el-button\n            >\n          </div>\n          <el-table :data=\"secHeaders.records\" border size=\"small\">\n            <el-table-column\n              prop=\"resourcesName\"\n              label=\"资源标签名称\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"resourceExplain\"\n              label=\"说明\"\n            ></el-table-column>\n            <el-table-column label=\"操作\" width=\"150\">\n              <template slot-scope=\"scope\">\n                <el-button\n                  @click=\"onSecUpdate(scope.row)\"\n                  type=\"text\"\n                  size=\"small\"\n                  >编辑</el-button\n                >\n                <el-button\n                  @click=\"onSecDelete(scope.row)\"\n                  type=\"text\"\n                  size=\"small\"\n                  >删除</el-button\n                >\n              </template>\n            </el-table-column></el-table\n          >\n          <el-pagination\n            style=\"text-align:right;margin-top:10px;margin-right: 100%;\"\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"currentPage\"\n            :page-sizes=\"[10, 50, 100, 500]\"\n            :page-size=\"pagesize\"\n            background\n            layout=\"total, sizes, prev, pager, next, jumper\"\n            :total=\"secHeaders.total\"\n          >\n          </el-pagination>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n    <!-- 编辑标签 -->\n    <el-dialog\n      width=\"500px\"\n      center\n      :visible.sync=\"forbiddenDialog.visible\"\n      :title=\"forbiddenTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"beforeCloseFbDialog\"\n    >\n      <el-form\n        ref=\"resourcesForm\"\n        :model=\"forbiddenDialog\"\n        :rules=\"forbiddenDialog.rules\"\n      >\n        <el-form-item\n          label=\"一级资源标签\"\n          v-if=\"fistLableFlag\"\n          prop=\"firstLableValue\"\n        >\n          <el-select\n            style=\"width:100%\"\n            v-model=\"forbiddenDialog.firstLableValue\"\n          >\n            <el-option\n              v-for=\"item in allFirstLable\"\n              :key=\"item.id\"\n              :label=\"item.resourcesName\"\n              :value=\"item.id\"\n            >\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item :label=\"lableTitle\" prop=\"resourcesName\">\n          <el-input\n            v-model=\"forbiddenDialog.resourcesName\"\n            :maxlength=\"maxlength\"\n            show-word-limit\n          >\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"标签说明\" prop=\"resourcesRemark\">\n          <el-input\n            placeholder=\"请填写资源标签说明,方便用户理解！(20字以内)\"\n            :maxlength=\"20\"\n            v-model=\"forbiddenDialog.resourcesRemark\"\n            show-word-limit\n            type=\"textarea\"\n            :rows=\"2\"\n          >\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"onCloseFbDialog\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"forbiddenDialog.loading\"\n          @click.stop.prevent=\"onSubmitFbDialog\"\n          >确定</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 添加标签弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"addNoDialog.visible\"\n      :title=\"addNoDialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"beforeCloseAddDialog\"\n    >\n      <el-form\n        ref=\"addDialogForm\"\n        :model=\"addNoDialog\"\n        :rules=\"addNoDialog.rules\"\n      >\n        <el-form-item :label=\"addlableTitle\" prop=\"resourcesName\">\n          <el-input\n            :placeholder=\"placeholder\"\n            :maxlength=\"maxlength\"\n            v-model=\"addNoDialog.resourcesName\"\n            show-word-limit\n          >\n          </el-input>\n        </el-form-item>\n        <el-form-item label=\"标签说明\" prop=\"resourcesRemark\">\n          <el-input\n            placeholder=\"请填写资源标签说明,方便用户理解！(20字以内)\"\n            :maxlength=\"20\"\n            v-model=\"addNoDialog.resourcesRemark\"\n            show-word-limit\n            type=\"textarea\"\n            :rows=\"2\"\n          >\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <el-checkbox v-model=\"checked\" class=\"checkBox\"\n        >继续新增下一个</el-checkbox\n      >\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"onCloseAddDialog\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"addNoDialog.loading\"\n          @click.stop.prevent=\"onSubmitAddDialog\"\n          >确定</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 批量添加二类标签 -->\n    <!-- 批量新增企业号 -->\n    <el-dialog\n      :visible.sync=\"visibleImport\"\n      title=\"批量导入\"\n      width=\"500px\"\n      center\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      @closed=\"onClosed\"\n    >\n      <div class=\"import-data-content\">\n        <h3 style=\"margin:5px;\"><strong>导入流程</strong></h3>\n        <p>\n          1、我们为您设置了导入模板，下载后按照模板格式内容上传即可；\n        </p>\n        <p>2、黄色表头表示的列为必填项；</p>\n        <p>3、请不要进行插入列操作；</p>\n        <p>4、excel表格数据行之间不要有空行。</p>\n        <el-button\n          type=\"primary\"\n          size=\"small\"\n          style=\"magrin:5px;margin-top:5px;\"\n          @click=\"downloadTemplate\"\n          >下载模板</el-button\n        >\n        <h3 style=\"margin:5px;\"><strong>上传内容</strong></h3>\n        <el-input :value=\"fileName\" placeholder=\"选择文件\" readonly>\n          <el-button slot=\"append\" @click=\"$refs.file.click()\">浏览</el-button>\n        </el-input>\n        <input\n          v-show=\"false\"\n          v-if=\"renderFile\"\n          type=\"file\"\n          ref=\"file\"\n          accept=\".xls,.xlsx\"\n          @change=\"onChange\"\n        />\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"visibleImport = false\">取消</el-button>\n        <el-button size=\"small\" type=\"primary\" @click=\"startUpalodFile\">\n          确定上传\n        </el-button>\n      </span>\n    </el-dialog>\n    <!-- 上传成功后的数据展示与处理 -->\n    <el-dialog\n      title=\"上传完成\"\n      width=\"700px\"\n      height=\"600px\"\n      center\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :visible.sync=\"dialogTableVisible\"\n    >\n      <el-table :data=\"importDataTable\" size=\"small\" border>\n        <el-table-column prop=\"firstLevelLabel\" label=\"一级资源标签\">\n          <template slot-scope=\"props\">\n            <p :style=\"{ color: typeColors[props.row.isFirstLevelLabel] }\">\n              {{\n                props.row.firstLevelLabel == ''\n                  ? '--'\n                  : props.row.firstLevelLabel\n              }}\n            </p>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"secondLevelLabel\" label=\"二级资源标签\">\n          <template slot-scope=\"props\">\n            <p v-if=\"props.row.secondLevelLabel == ''\" style=\"color: red;\">\n              --\n            </p>\n            <p\n              v-else\n              :style=\"{\n                color:\n                  typeColors[\n                    props.row.isSecondLevelLabel == '0' &&\n                    props.row.isSecondRepeat == '0'\n                      ? 0\n                      : 1\n                  ]\n              }\"\n            >\n              {{ props.row.secondLevelLabel }}\n            </p>\n          </template>\n        </el-table-column>\n        <el-table-column\n          fixed=\"right\"\n          prop=\"operation\"\n          label=\"操作\"\n          width=\"100\"\n        >\n          <template slot-scope=\"props\">\n            <el-button type=\"text\" size=\"small\" @click=\"changeInfo(props)\"\n              >编辑</el-button\n            >\n            <el-button type=\"text\" size=\"small\" @click=\"onDeleteClick(props)\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n      <div style=\"font-size: 0.8rem;color: gray;text-align: left;\">\n        <p>\n          1.红色标记的\"——\"为上传的不存在的一级资源标签，可编辑选择其他标签提交，或新增该一级资源标签后重新导入！\n        </p>\n        <p>2.红色标记的二级资源标签为已存在的标签，请编辑修改或删除！</p>\n      </div>\n      <span slot=\"footer\">\n        <el-button size=\"small\" @click=\"onCloseImportDialog\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click.stop.prevent=\"onSubmitImportDialog\"\n          >确定</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 上传资料编辑弹窗 -->\n    <el-dialog\n      width=\"650px\"\n      center\n      :visible.sync=\"importChangeDialog.visible\"\n      title=\"编辑\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onCloseImDialog\"\n    >\n      <el-form\n        ref=\"importForm\"\n        :model=\"importChangeDialog\"\n        :rules=\"importChangeDialog.rules\"\n      >\n        <el-form-item prop=\"firstLableValue\" style=\"margin-bottom: 20px;\">\n          <el-select\n            v-model=\"importChangeDialog.firstLableValue\"\n            placeholder=\"请选择一级资源标签\"\n          >\n            <el-option\n              v-for=\"item in allFirstLable\"\n              :key=\"item.id\"\n              :label=\"item.resourcesName\"\n              :value=\"item.resourcesName\"\n            >\n            </el-option>\n          </el-select>\n          <div style=\"display:inline-block;\">\n            <el-input\n              style=\"margin-left:10px;\"\n              v-model=\"importChangeDialog.SecondLable\"\n            ></el-input>\n          </div>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"onCloseImDialog\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click.stop.prevent=\"onSubmitImDialog\"\n          >保存</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  Input,\n  Dialog,\n  Form,\n  FormItem,\n  Select,\n  Option,\n  MessageBox,\n  Message,\n  Loading,\n  Pagination\n} from 'element-ui';\nimport BTable from '@/components/business/BTable';\nimport {\n  getLabelList,\n  postUpdateLableName,\n  getDeleteLableName,\n  postAddLableName,\n  getAllFirstLableName,\n  getSecLabelList,\n  deleteSecLableName,\n  getTemplate,\n  postImport,\n  checkDataImport,\n  postSubImport,\n  postDeleteImport\n} from '@/pages/share-platform-admin/api/resourceLabel';\n/**\n * 获取文件地址后缀名\n * @param {string} url url地址\n */\nfunction getExtension(url) {\n  if (!url || typeof url !== 'string') return '';\n  // eslint-disable-next-line no-useless-escape\n  var res = /\\.([0-9a-zA-Z]+)(?:[\\?#]|$)/i.exec(url);\n  if (!res) return '';\n  return res[1];\n}\nexport default {\n  name: 'ResourceLabelManage',\n  components: {\n    [Input.name]: Input,\n    [Dialog.name]: Dialog,\n    [Form.name]: Form,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [FormItem.name]: FormItem,\n    [Pagination.name]: Pagination,\n    BTable\n  },\n  data() {\n    return {\n      typeColors: {\n        1: 'red',\n        0: 'black'\n      },\n      activeName: 'first',\n      inputData: '',\n      visibleImport: false,\n      isWhat: '',\n      maxlength: '5',\n      isError: false,\n      headers: [\n        {\n          label: '标签名称',\n          prop: 'resourcesName'\n        },\n        {\n          label: '说明',\n          prop: 'resourceExplain'\n        },\n        {\n          label: '操作',\n          colType: 'btns',\n          width: '150px',\n          btns: [\n            {\n              label: '编辑',\n              type: 'text',\n              size: 'mini',\n              click: this.onUpdate\n            },\n            {\n              label: '删除',\n              type: 'text',\n              size: 'mini',\n              click: this.onDelete\n            }\n          ]\n        }\n      ],\n      secHeaders: {},\n      currentPage: 1, //当前页码\n      pagesize: 10, //每页的数据数量\n      secAddLableId: '',\n      secAddLableName: '',\n      updateType: '',\n      //修改、新增资源标签弹窗配置\n      forbiddenTitle: '',\n      lableTitle: '',\n      currentId: '',\n      // 是否点击搜索\n      isClickSearch: false,\n      resourceNameNow: '',\n      fistLableFlag: false,\n      forbiddenDialog: {\n        row: null, //弹窗对应的table 行数据\n        visible: false, //弹窗是否可见\n        loading: false, //是否在请求中\n        resourcesName: '',\n        firstLableValue: '',\n        resourcesRemark: '',\n        id: '',\n        rules: {\n          //校验效果\n          firstLableValue: {\n            required: true,\n            trigger: 'blur',\n            message: '一级标签不可为空'\n          },\n          resourcesName: {\n            required: true,\n            trigger: 'blur',\n            message: '二级标签名称不可为空'\n          },\n          resourcesRemark: {\n            required: true,\n            trigger: 'blur',\n            message: '标签说明不可为空'\n          }\n        }\n      },\n      checked: false,\n      addType: '',\n      addNoDialogTitle: '',\n      addlableTitle: '',\n      placeholder: '',\n      addNoDialog: {\n        //row: null,\n        visible: false,\n        loading: false,\n        resourcesName: '',\n        resourcesRemark: '',\n        rules: {\n          resourcesName: {\n            required: true,\n            trigger: 'blur',\n            message: '资源标签不可为空'\n          },\n          resourcesRemark: {\n            required: true,\n            trigger: 'blur',\n            message: '标签说明不可为空'\n          }\n        }\n      },\n      allFirstLable: [],\n      file: null, // 文件\n      renderFile: true, // 渲染文件上传表单\n      dialogTableVisible: false,\n      importDataTable: [],\n      rowImportData: {},\n      importChangeDialog: {\n        visible: false, //弹窗是否可见\n        firstLableValue: '',\n        SecondLable: '',\n        id: '',\n        rules: {\n          //校验效果\n          firstLableValue: {\n            required: true,\n            trigger: 'blur',\n            message: '一级资源标签不可为空'\n          },\n          SecondLable: {\n            required: true,\n            trigger: 'blur',\n            message: '二级资源标签不可为空'\n          }\n        }\n      }\n    };\n  },\n  created() {\n    this.getAllFirstLableName();\n  },\n  computed: {\n    fileName() {\n      return (this.file && this.file.name) || '';\n    }\n  },\n  methods: {\n    //获取一类标签列表\n    getLabelList,\n    //刷新组件列表\n    refreshTable() {\n      this.$nextTick(() => {\n        this.$refs.bTable.onRefreshTable();\n      });\n    },\n    /**\n     * 批量导入\n     */\n    // 下载模板\n    downloadTemplate() {\n      getTemplate().then(res => {\n        const blob = new Blob([res], {\n          type: 'application/vnd.ms-excel'\n        });\n        let link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.setAttribute('download', '新增二级资源标签模板.xls');\n        link.click();\n        link = null;\n        this.$message.success('下载成功');\n      });\n    },\n    //关闭模态框动画结束\n    onClosed() {\n      this.$emit('close');\n    },\n    // 选择文件\n    onChange(event) {\n      let { files } = event.target;\n      let file = files[0];\n      this.resetFile();\n      if (!files.length) return;\n      if (!this.checkFile(files[0])) return;\n      this.file = file;\n    },\n    /**\n     * 校验文件\n     */\n    checkFile(file) {\n      // 校验文件类型\n      let isExcel =\n        ['xls', 'xlsx'].indexOf(getExtension(file.name).toLowerCase()) !== -1;\n      // 校验文件大小\n      //let isLt = file.size / 1024 / 1024 < this.maxFileSize;\n      if (!isExcel) Message.warning('上传文件只能是xls、xlsx格式');\n      //if (!isLt) Message.warning('上传文件只能最大2MB');\n      return isExcel; //&& isLt;\n    },\n    /**\n     * 重置file表单，解决重复选择同一个文件不触发change事件问题\n     */\n    resetFile() {\n      this.renderFile = false;\n      this.$nextTick(() => {\n        this.renderFile = true;\n      });\n    },\n    //确认上传\n    startUpalodFile() {\n      if (!this.file || !(this.file instanceof File))\n        return Message.warning('请添加文件');\n      let formData = new FormData();\n      formData.append('file', this.file, this.fileName); //filename是键，file是要传的文件\n      let loading = Loading.service({\n        text: '导入中...'\n      });\n      postImport('/resources/import', formData)\n        .then(res => {\n          if (res.data && res.success) {\n            this.importDataTable = res.data;\n            this.$message({\n              message: '导入成功',\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n                this.visibleImport = false;\n                this.dialogTableVisible = true;\n                this.$emit('close');\n                this.file = null;\n              }\n            });\n          } else {\n            this.$message.error(res.data.message);\n          }\n        })\n        .catch(e => {\n          console.log('e', e);\n        })\n        .finally(() => {\n          setTimeout(() => {\n            loading.close(); //处理后关闭弹窗\n          }, 1000);\n        });\n    },\n    //数据处理--编辑按钮\n    changeInfo(data) {\n      this.importChangeDialog.visible = true;\n      this.importChangeDialog.SecondLable = data.row.secondLevelLabel;\n      if (data.row.isFirstLevelLabel == '0') {\n        this.importChangeDialog.firstLableValue = data.row.firstLevelLabel;\n      }\n      this.rowImportData = data;\n    },\n    onDeleteClick(data) {\n      this.$confirm('确定删除该笔数据吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(({ value }) => {\n          const params = {\n            id: data.row.id,\n            firstLevelLabel: data.row.firstLevelLabel,\n            secondLevelLabel: data.row.secondLevelLabel,\n            randId: data.row.randId,\n            isFirstLevelLabel: data.row.isFirstLevelLabel,\n            isSecondLevelLabel: data.row.isSecondLevelLabel\n          };\n          postDeleteImport(params).then(res => {\n            this.importDataTable.splice(data.$index, 1);\n            this.$message({\n              type: 'success',\n              message: '删除成功！'\n            });\n            this.importDataTable = res.data;\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消'\n          });\n        });\n    },\n    onCloseImDialog() {\n      this.$refs['importForm'].resetFields();\n      this.importChangeDialog.visible = false;\n    },\n    onSubmitImDialog() {\n      this.$refs['importForm'].validate((valid, obj) => {\n        if (!valid) return;\n        // 部分输入框校验未通过\n        else {\n          const rowIndex = this.rowImportData.$index;\n          let queryData = {\n            id: this.rowImportData.row.id,\n            isFirstLevelLabel: this.rowImportData.row.isFirstLevelLabel,\n            isSecondLevelLabel: this.rowImportData.row.isSecondLevelLabel,\n            firstLevelLabel: this.importChangeDialog.firstLableValue,\n            secondLevelLabel: this.importChangeDialog.SecondLable,\n            isSecondRepeat: this.rowImportData.row.isSecondRepeat,\n            randId: this.rowImportData.row.randId\n          };\n          checkDataImport(queryData)\n            .then(res => {\n              if (res.data && res.success) {\n                // if (res.data[0].isFirstLevelLabel == 0) {\n                //   this.$message({\n                //     type: 'error',\n                //     message: '一级标签资源不存在！'\n                //   });\n                //   return false;\n                // } else if (res.data[0].isSecondLevelLabel == 1) {\n                //   this.$message({\n                //     type: 'error',\n                //     message: '二级标签资源已存在！'\n                //   });\n                //   return false;\n                // } else {\n                //   this.importDataTable[\n                //     rowIndex\n                //   ].firstLevelLabel = this.importChangeDialog.firstLableValue;\n                //   this.importDataTable[rowIndex].isFirstLevelLabel = 0;\n                //   this.importDataTable[\n                //     rowIndex\n                //   ].secondLevelLabel = this.importChangeDialog.SecondLable;\n                //   this.importDataTable[rowIndex].isSecondLevelLabel = 0;\n                // }\n                this.$message({\n                  type: 'success',\n                  message: '修改成功！'\n                });\n                this.importDataTable = res.data;\n                setTimeout(() => {\n                  this.onCloseImDialog(); //处理后关闭弹窗\n                }, 1000);\n              } else {\n                this.$message({\n                  type: 'error',\n                  message: '校验失败！'\n                });\n                return false;\n              }\n            })\n            .catch(ress => {\n              this.$message({\n                type: 'error',\n                message: '校验失败！'\n              });\n            });\n        }\n      });\n    },\n    onCloseImportDialog() {\n      this.$confirm('确定取消批量新增操作吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(({ value }) => {\n          this.dialogTableVisible = false;\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '取消'\n          });\n        });\n    },\n    onSubmitImportDialog() {\n      let loading = Loading.service({\n        text: '数据上传中...'\n      });\n      let firstTest = this.importDataTable.every(function(item) {\n        return item.isFirstLevelLabel == 0 && item.firstLevelLabel != '';\n      });\n      let secTest = this.importDataTable.every(function(item) {\n        return (\n          item.isSecondLevelLabel == 0 &&\n          item.isSecondRepeat == 0 &&\n          item.secondLevelLabel != ''\n        );\n      });\n      if (this.importDataTable == '') {\n        this.$message({\n          message: '没有导入的数据！',\n          type: 'error'\n        });\n        loading.close();\n        return false;\n      }\n      if (!firstTest) {\n        this.$message({\n          message: '一级资源标签存在标红，请先修改！',\n          type: 'error'\n        });\n        loading.close();\n        return false;\n      } else if (!secTest) {\n        this.$message({\n          message: '二级资源标签存在标红，请先修改！',\n          type: 'error'\n        });\n        loading.close();\n        return false;\n      } else {\n        postSubImport(this.importDataTable)\n          .then(res => {\n            if (res.success) {\n              this.$message({\n                message: res.message,\n                type: 'success'\n              });\n              this.handleClick();\n              this.importChangeDialog.visible = false;\n              this.dialogTableVisible = false;\n            }\n          })\n          .catch(res => {\n            this.$message({\n              message: res.message,\n              type: 'error'\n            });\n          })\n          .finally(() => {\n            setTimeout(() => {\n              loading.close(); //处理后关闭弹窗\n            }, 1000);\n          });\n      }\n    },\n    /**\n     * 批量导入结束\n     */\n    //编辑修改一类\n    onUpdate(row) {\n      this.forbiddenTitle = '编辑一级资源标签';\n      this.lableTitle = '一级资源标签';\n      this.maxlength = '5';\n      this.updateType = '1';\n      this.forbiddenDialog.visible = true;\n      this.forbiddenDialog.resourcesName = row.resourcesName;\n      this.forbiddenDialog.resourcesRemark = row.resourceExplain;\n      this.forbiddenDialog.id = row.id;\n    },\n    //编辑修改二类\n    onSecUpdate(row) {\n      this.forbiddenTitle = '编辑二级资源标签';\n      this.lableTitle = '二级资源标签';\n      this.fistLableFlag = true;\n      this.maxlength = '15';\n      this.updateType = '2';\n      this.forbiddenDialog.parentName = row.parentName;\n      this.forbiddenDialog.firstLableValue = row.parentName;\n      this.forbiddenDialog.parentId = row.parentId;\n      this.forbiddenDialog.visible = true;\n      this.forbiddenDialog.resourcesName = row.resourcesName;\n      this.forbiddenDialog.resourcesRemark = row.resourceExplain;\n      this.forbiddenDialog.id = row.id;\n    },\n    //提交修改标签内容\n    onSubmitFbDialog() {\n      this.$refs['resourcesForm'].validate((valid, obj) => {\n        if (!valid) return; // 部分输入框校验未通过\n        this.forbiddenDialog.loading = true;\n        let queryParam = {};\n        if (this.updateType == '1') {\n          this.isWhat = '1';\n          queryParam = {\n            isWhat: Number('1'),\n            resourceName: this.forbiddenDialog.resourcesName,\n            resourceExplain: this.forbiddenDialog.resourcesRemark,\n            id: this.forbiddenDialog.id\n          };\n        } else {\n          this.isWhat = '2';\n          queryParam = {\n            isWhat: Number('2'),\n            resourceName: this.forbiddenDialog.resourcesName,\n            resourceExplain: this.forbiddenDialog.resourcesRemark,\n            id: this.forbiddenDialog.id,\n            parentId:\n              this.forbiddenDialog.firstLableValue ==\n              this.forbiddenDialog.parentName\n                ? this.forbiddenDialog.parentId\n                : this.forbiddenDialog.firstLableValue\n          };\n        }\n        postUpdateLableName(queryParam)\n          .then(res => {\n            this.refreshTable();\n            this.refreshList(this.secAddLableId);\n            this.$message({\n              type: 'success',\n              message: '修改成功'\n            });\n          })\n          .catch(rers => {\n            this.$message({\n              type: 'error',\n              message: '修改失败'\n            });\n          });\n        setTimeout(() => {\n          this.forbiddenDialog.loading = false;\n          this.onCloseFbDialog(); //处理后关闭弹窗\n        }, 1000);\n      });\n    },\n    //关闭编辑窗口前处理\n    beforeCloseFbDialog(done) {\n      this.forbiddenDialog.visible = false;\n      this.fistLableFlag = false;\n      if (this.forbiddenDialog.loading) return;\n      this.$refs['resourcesForm'].resetFields();\n      done();\n    },\n    //点击取消关闭编辑弹窗\n    onCloseFbDialog() {\n      this.fistLableFlag = false;\n      if (this.forbiddenDialog.loading) return;\n      this.$refs['resourcesForm'].resetFields();\n      this.forbiddenDialog.visible = false;\n    },\n    //删除一类标签\n    onDelete(row) {\n      this.$confirm('确认删除该资源标签?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          getDeleteLableName(row.id).then(res => {\n            this.refreshTable();\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    //新增一类标签\n    addFirstLabel() {\n      this.addNoDialogTitle = '新增一级资源标签';\n      this.addlableTitle = '一级资源标签';\n      this.maxlength = '5';\n      this.placeholder = '请填写一级资源标签名称';\n      this.addType = '1';\n      this.addNoDialog.visible = true;\n    },\n    //新增二类标签\n    addSecondLabel() {\n      if (this.secAddLableId == '' || this.inputData == '') {\n        this.$alert('<strong>请先点选一级资源标签按钮</strong>', '提示', {\n          dangerouslyUseHTMLString: true\n        });\n      } else {\n        this.addNoDialogTitle =\n          '新增\"' + this.secAddLableName + '\"下的二级资源标签';\n        this.addlableTitle = '二级资源标签';\n        this.maxlength = '15';\n        this.placeholder = '请填写二级资源标签名称';\n        this.addType = '2';\n        this.addNoDialog.visible = true;\n      }\n    },\n    //提交新增标签\n    onSubmitAddDialog() {\n      this.$refs['addDialogForm'].validate((valid, obj) => {\n        if (!valid) return; // 部分输入框校验未通过\n        this.addNoDialog.loading = true;\n        if (this.addType == '1') this.isWhat = '1';\n        else this.isWhat = '2';\n        let querys = {\n          resourceName: this.addNoDialog.resourcesName,\n          resourceExplain: this.addNoDialog.resourcesRemark,\n          isWhat: Number(this.isWhat)\n        };\n        if (this.isWhat == '2') {\n          querys.parentId = this.secAddLableId;\n        }\n\n        postAddLableName(querys)\n          .then(res => {\n            //this.refreshTable();\n            this.refreshList(this.secAddLableId);\n            this.$message({\n              type: 'success',\n              message: '新增成功'\n            });\n          })\n          .catch(rers => {\n            this.isError = true;\n            this.addNoDialog.loading = false;\n          });\n        setTimeout(() => {\n          this.addNoDialog.loading = false;\n          this.onEndCloseDialog(); //处理后关闭弹窗\n        }, 1000);\n      });\n    },\n    //关闭窗口前处理\n    beforeCloseAddDialog(done) {\n      this.addNoDialog.visible = false;\n      this.checked = false;\n      // this.secAddLableId = '';\n      // this.secAddLableName = '';\n      //if (this.addNoDialog.loading) return;\n      this.$refs['addDialogForm'].resetFields();\n      done();\n    },\n    //点击取消关闭弹窗\n    onCloseAddDialog() {\n      if (this.addNoDialog.loading) return;\n      if (this.isError) {\n        this.addNoDialog.visible = true;\n      } else {\n        this.addNoDialog.visible = false;\n        // this.secAddLableId = '';\n        // this.secAddLableName = '';\n      }\n      this.checked = false;\n      this.isError = false;\n      this.$refs['addDialogForm'].resetFields();\n    },\n    //操作完成后处理\n    onEndCloseDialog() {\n      if (this.addNoDialog.loading) return;\n      if (this.isError) {\n        this.addNoDialog.visible = true;\n      } else {\n        if (this.checked) {\n          this.addNoDialog.visible = true;\n        } else {\n          this.addNoDialog.visible = false;\n          // this.secAddLableId = '';\n          // this.secAddLableName = '';\n        }\n      }\n      this.isError = false;\n      this.$refs['addDialogForm'].resetFields();\n    },\n    //切换tab获取二类标签列表\n    handleClick() {\n      const params = {\n        limit: this.pagesize,\n        offset: this.currentPage\n      };\n      this.getAllFirstLableName();\n      this.inputData = '';\n      this.secAddLableId = '';\n      this.secAddLableName = '';\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    },\n    //获取所有一类标签列表\n    getAllFirstLableName() {\n      getAllFirstLableName().then(res => {\n        this.allFirstLable = res.data;\n      });\n    },\n    refreshList(item) {\n      this.currentPage = 1;\n      const params = {\n        limit: this.pagesize,\n        offset: this.currentPage,\n        id: item\n      };\n      this.currentId = item;\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    },\n    //按钮切换控制//点击标签按钮根据一类获取二类资源搜索信息\n    changeTab(item) {\n      this.isClickSearch = false;\n      this.currentPage = 1;\n      const params = {\n        limit: this.pagesize,\n        offset: this.currentPage\n      };\n      if (item === '全部') {\n        this.secAddLableId = '';\n        this.secAddLableName = '';\n        this.inputData = '';\n        this.filterList = [];\n        this.currentId = '';\n        this.currentTab = {};\n      } else {\n        this.inputData = item.resourcesName;\n        this.secAddLableId = item.id;\n        this.secAddLableName = item.resourcesName;\n        this.filterList = item.child;\n        this.currentId = item.id;\n        this.currentTab = item;\n        params.id = item.id;\n      }\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    },\n    //查询按钮\n    selectLabel() {\n      this.currentPage = 1;\n      this.resourceNameNow = this.inputData;\n      this.isClickSearch = true;\n      this.secAddLableId = '';\n      this.secAddLableName = '';\n      if (this.inputData == '') {\n        this.currentId = '';\n      } else {\n        this.currentId = '其他';\n      }\n\n      const params = {\n        limit: this.pagesize,\n        offset: this.currentPage,\n        resourceName: this.inputData\n      };\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    },\n    //删除二类标签\n    onSecDelete(row) {\n      this.$confirm('确认删除该资源标签?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      })\n        .then(() => {\n          deleteSecLableName(row.id).then(res => {\n            this.refreshTable();\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.refreshList(this.secAddLableId);\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    //分页\n    handleSizeChange(pagesize) {\n      this.pagesize = pagesize;\n      this.currentPage = 1;\n      const params = {\n        limit: this.pagesize,\n        offset: this.currentPage\n      };\n      if (this.isClickSearch) {\n        params.resourceName = this.resourceNameNow;\n      } else {\n        params.id = this.currentId;\n      }\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    },\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      const params = {\n        limit: this.pagesize,\n        offset: (currentPage - 1) * this.pagesize\n      };\n      if (this.isClickSearch) {\n        params.resourceName = this.resourceNameNow;\n      } else {\n        params.id = this.currentId;\n      }\n      getSecLabelList(params).then(res => {\n        this.secHeaders = res.data;\n      });\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.label-box {\n  background-color: #fff;\n}\n.tag-name {\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 600;\n  width: 130px;\n  line-height: 32px;\n}\n.button-flex {\n  display: flex;\n  justify-content: space-between;\n}\n.button-flex-tow {\n  margin-bottom: 10px;\n}\n.el-inout-button {\n  display: flex;\n  justify-content: flex-start;\n}\n.el-input {\n  margin-right: 10px;\n}\n.box-card {\n  margin: 10px 0;\n  width: 100%;\n}\n.tag-group-item {\n  margin: 5px;\n}\n.active {\n  background: #4393fd;\n  color: #fff;\n}\n</style>\n"]}]}