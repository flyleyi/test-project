{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/index.vue?vue&type=style&index=0&id=2624a36d&lang=less&scoped=true&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/index.vue","mtime":1645178321164},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/less-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5leGFtTWFuYWdlIHsKICAvZGVlcC8gLmVsLWlucHV0X19pbm5lciwKICAuZWwtc2VsZWN0IHsKICAgIHdpZHRoOiAxMDAlOwogIH0KICAvZGVlcC8gLmVsLWZvcm0taXRlbS0tbWluaS5lbC1mb3JtLWl0ZW0sCiAgL2RlZXAvIC5lbC1mb3JtLWl0ZW0tLXNtYWxsLmVsLWZvcm0taXRlbSB7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIH0KICAvZGVlcC8gLnRvb2xiYXJzIHsKICAgIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgfQogIC9kZWVwLyAuZWwtdGFibGUgewogICAgZm9udC1zaXplOiAxNHB4OwogICAgZm9udC1mYW1pbHk6IFBpbmdGYW5nU0MtUmVndWxhciwgUGluZ0ZhbmcgU0M7CiAgICBmb250LXdlaWdodDogNDAwOwogICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC42NSk7CiAgfQogIC9kZWVwLyAuZWwtdGFibGUgdGhlYWQsCiAgL2RlZXAvIC5lbC10YWJsZSB0aCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgZm9udC1mYW1pbHk6IFBpbmdGYW5nU0MtTWVkaXVtLCBQaW5nRmFuZyBTQzsKICAgIGZvbnQtd2VpZ2h0OiA2MDA7CiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg1KTsKICB9CiAgL2RlZXAvIC5lbC10YWJsZSB0aCB7CiAgICBwYWRkaW5nOiAxMnB4IDA7CiAgfQogIC9kZWVwLyAuZWwtZGlhbG9nIHsKICAgIC5lbC1kaWFsb2dfX2JvZHkgewogICAgICBtYXgtaGVpZ2h0OiAzNzBweDsKICAgICAgb3ZlcmZsb3cteTogYXV0bzsKICAgIH0KICAgIC5lbC1kaWFsb2dfX2hlYWRlciB7CiAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjVmNWY1OwogICAgfQogICAgLmVsLWJ1dHRvbi0tZGVmYXVsdCB7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICM1NDgxZTk7CiAgICAgIGJhY2tncm91bmQ6ICNmZmY7CiAgICAgIGNvbG9yOiAjNTQ4MWU5OwogICAgfQogICAgLmVsLWJ1dHRvbiArIC5lbC1idXR0b24gewogICAgICBtYXJnaW4tbGVmdDogMTJweDsKICAgIH0KICAgIC5lbC1mb3JtLWl0ZW1fX2xhYmVsIHsKICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgd2lkdGg6IDk1cHggIWltcG9ydGFudDsKICAgIH0KICAgIC5lbC1mb3JtLWl0ZW1fX2NvbnRlbnQgewogICAgICBtYXJnaW4tbGVmdDogOTVweCAhaW1wb3J0YW50OwogICAgfQogICAgLmZvcm0taXRlbS1zZWxmIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIH0KICAgIC5ncmFkZS1ib3ggewogICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgICAgIC5lbC1mb3JtLWl0ZW1fX2xhYmVsIHsKICAgICAgICB3aWR0aDogMTMwcHggIWltcG9ydGFudDsKICAgICAgICBwYWRkaW5nOiA5cHggMTJweCA5cHggMDsKICAgICAgICBsaW5lLWhlaWdodDogMjJweDsKICAgICAgICBzcGFuIHsKICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMnB4OwogICAgICAgIH0KICAgICAgfQogICAgICAuZWwtZm9ybS1pdGVtX19sYWJlbDo6YmVmb3JlIHsKICAgICAgICBjb250ZW50OiAnJyAhaW1wb3J0YW50OwogICAgICAgIG1hcmdpbi1yaWdodDogMCAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC5lbC1mb3JtLWl0ZW1fX2NvbnRlbnQgewogICAgICAgIG1hcmdpbi1sZWZ0OiAxMzBweCAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC5lbC1mb3JtLWl0ZW0gewogICAgICAgIG1hcmdpbi1ib3R0b206IDBweDsKICAgICAgfQogICAgfQogIH0KICAvZGVlcC8gbGFiZWwgewogICAgY3Vyc29yOiBpbml0aWFsICFpbXBvcnRhbnQ7CiAgfQp9Ci9kZWVwLyAuZWwtZm9ybS1pdGVtX19lcnJvciB7CiAgcG9zaXRpb246IHN0YXRpYzsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingskvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/pages/score-analysis-admin/views/components/ExamManage","sourcesContent":["<!-- ExamManage 考试管理 -->\n<template>\n  <div class=\"examManage\">\n    <b-table\n      class=\"b-table\"\n      ref=\"bTable\"\n      loading\n      :headers=\"columns\"\n      :form-items=\"formItems\"\n      :toolbars=\"toolbars\"\n      :showRefresh=\"false\"\n      :showColumn=\"false\"\n      :ajax-get-data=\"ajaxGetTableDataByPage\"\n      @reset-form=\"resetForm\"\n      :pageLimit=\"10\"\n    ></b-table>\n    <!-- 新增编辑弹窗 -->\n    <el-dialog\n      :title=\"dialog.isedit ? '编辑考试' : '新建考试'\"\n      width=\"580px\"\n      center\n      class=\"dialog\"\n      :visible.sync=\"dialog.visible\"\n      @close=\"resetDialog\"\n      :close-on-click-modal=\"false\"\n    >\n      <el-form\n        ref=\"elForm\"\n        label-width=\"110px\"\n        :model=\"ruleForm\"\n        :rules=\"rules\"\n      >\n        <el-form-item label=\"考试名称\" prop=\"examName\">\n          <el-input\n            type=\"input\"\n            v-model.trim=\"ruleForm.examName\"\n            maxlength=\"30\"\n            placeholder=\"请规范命名，如2020学年高二第二学期期中两校联考\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"考试类型\" prop=\"examType\">\n          <el-radio-group v-model=\"ruleForm.examType\">\n            <el-radio\n              v-for=\"(item, index) in radioArr\"\n              :label=\"item.label\"\n              :key=\"index\"\n              >{{ item.name }}</el-radio\n            >\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"考试形式\" prop=\"examForm\">\n          <el-radio-group\n            v-model=\"ruleForm.examForm\"\n            :disabled=\"dialog.isedit\"\n            @change=\"changeRadioExamForm\"\n          >\n            <el-radio\n              v-for=\"(item, index) in radioArr2\"\n              :label=\"item.label\"\n              :key=\"index\"\n              >{{ item.name }}</el-radio\n            >\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"考试时间\" prop=\"date\">\n          <el-date-picker\n            v-model=\"ruleForm.date\"\n            type=\"daterange\"\n            range-separator=\"-\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            value-format=\"yyyy-MM-dd\"\n          >\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item\n          label=\"区域\"\n          prop=\"areaCode\"\n          v-if=\"ruleForm.examForm == 2\"\n          key=\"areaCode\"\n        >\n          <el-select\n            v-model=\"ruleForm.areaCode\"\n            filterable\n            placeholder=\"请选择区域\"\n            @change=\"changeAreaCode\"\n            :disabled=\"dialog.isedit\"\n          >\n            <el-option\n              v-for=\"(item, index) in areaList\"\n              :key=\"index\"\n              :value=\"item.areaCode\"\n              :label=\"item.areaName\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item\n          label=\"学校/学部\"\n          prop=\"schoolListArr\"\n          key=\"schoolListArr\"\n        >\n          <el-select\n            v-model=\"ruleForm.schoolListArr\"\n            multiple\n            filterable\n            placeholder=\"请选择学校/学部\"\n            :disabled=\"\n              dialog.isedit ||\n                (ruleForm.examForm == 2 && ruleForm.areaCode == '')\n            \"\n            @change=\"changeSchoolListArr\"\n            @remove-tag=\"removeTag\"\n            value-key=\"schoolCode\"\n          >\n            <el-option\n              v-for=\"(item, index) in schoolList\"\n              :key=\"index\"\n              :value=\"item\"\n              :label=\"item.schoolName\"\n            />\n          </el-select>\n        </el-form-item>\n        <template v-if=\"ruleForm.schoolListArr.length > 0\">\n          <div class=\"el-form-item is-required form-item-self\">\n            <div class=\"el-form-item__label\">考试年级</div>\n          </div>\n          <div class=\"grade-box\">\n            <el-form-item\n              v-for=\"(item, index) in ruleForm.schoolListArr\"\n              :key=\"item.schoolCode\"\n              :prop=\"`schoolListArr[${index}].gradeListArr`\"\n              :rules=\"{\n                required: true,\n                trigger: 'blur',\n                message: `请选择${item.schoolName}考试年级`\n              }\"\n            >\n              <span slot=\"label\">{{ item.schoolName }}： </span>\n              <el-checkbox-group v-model=\"item.gradeListArr\">\n                <el-checkbox\n                  v-for=\"gradeItem in item.gradeList\"\n                  :key=\"gradeItem.gradeCode\"\n                  :label=\"gradeItem\"\n                  :checked=\"getChecked(item.gradeListArr, gradeItem)\"\n                  :disabled=\"dialog.isedit\"\n                  >{{ gradeItem.gradeName }}</el-checkbox\n                >\n              </el-checkbox-group>\n              <!-- <el-select\n            v-model=\"item.gradeListArr\"\n            placeholder=\"请选择考试年级\"\n            value-key=\"id\"\n            filterable\n            multiple\n          >\n            <el-option\n              v-for=\"gradeItem in item.gradeList\"\n              :key=\"gradeItem.yearGradeCode\"\n              :label=\"gradeItem.yearGradeName\"\n              :value=\"gradeItem\"\n            >\n            </el-option>\n          </el-select> -->\n            </el-form-item>\n          </div>\n        </template>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"dialog.visible = false\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"sureDialog\"\n          :loading=\"confirmLoading\"\n          >确认</el-button\n        >\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport api from './../../../api/examManage';\nfunction mergeDefault() {\n  var f = {},\n    m = arguments.length,\n    o = arguments[m - 1],\n    b = 0,\n    k,\n    h,\n    d,\n    g;\n  if (typeof o == 'boolean') {\n    b++;\n    h = o;\n  }\n  if (Object.prototype.toString.call(arguments[0]) === '[object Array]') {\n    d = true;\n    g = arguments[0];\n    k = arguments[1];\n  } else {\n    k = arguments[0] || {};\n  }\n  for (var c = 0; c < m - b; c++) {\n    var a = arguments[c];\n    for (var e in d ? g : k) {\n      var n = d ? g[e] : e;\n      if (a && a[n] !== undefined) {\n        h ? (f[n] = a[n]) : (k[n] = a[n]);\n      } else {\n        h && c == 0 && (f[n] = k[n]);\n      }\n    }\n  }\n  return h ? f : k;\n}\nexport default {\n  name: 'ExamManage',\n  data() {\n    return {\n      params: {\n        school: '',\n        areaCode: '',\n        examForm: '',\n        schoolYear: '',\n        examNameLike: '',\n        current: 1,\n        size: 10\n      },\n      schoolList: [],\n      schoolYearList: [],\n      areaList: [],\n      dialog: {\n        visible: false,\n        isedit: false\n      },\n      editRow: {},\n      ruleForm: {\n        examName: '',\n        examType: null,\n        examForm: 1,\n        date: [],\n        schoolListArr: [],\n        areaCode: '',\n        areaName: ''\n      },\n      rules: {\n        examName: [\n          {\n            required: true,\n            trigger: 'blur',\n            message: '请填写考试名称'\n          },\n          { max: 30, trigger: '', message: '最大长度30个字符' }\n        ],\n        examType: [\n          { required: true, trigger: 'change', message: '请选择考试类型' }\n        ],\n        examForm: [\n          { required: true, trigger: 'change', message: '请选择考试形式' }\n        ],\n        areaCode: [\n          {\n            required: true,\n            trigger: 'blur',\n            message: '请选择区域'\n          }\n        ],\n        date: [{ required: true, trigger: 'blur', message: '请选择考试时间' }],\n        schoolListArr: [\n          {\n            required: true,\n            trigger: 'blur',\n            message: '请选择参加考试的学校/学部'\n          }\n        ]\n      },\n      radioArr: [\n        {\n          name: '月考',\n          label: 1\n        },\n        {\n          name: '期中考',\n          label: 2\n        },\n        {\n          name: '期末考',\n          label: 3\n        }\n      ],\n      radioArr2: [\n        {\n          name: '普通',\n          label: 1\n        },\n        {\n          name: '联考',\n          label: 2\n        }\n      ],\n      schoolGradeListAll: [], //年级列表-与学校关联\n      schoolGradeList: [], //复选框\n      confirmLoading: false, // 提交中\n      tree: [], //学校树\n      schoolarr: [] //备份选择学校数据\n    };\n  },\n  computed: {\n    /**\n     * 表单列\n     */\n    columns() {\n      let btns = [\n        {\n          label: '试卷管理',\n          click: row => this.linkToPaperManage(row),\n          auth: ['exam-manage'],\n          size: 'mini',\n          type: 'text'\n        },\n        {\n          label: '编辑',\n          click: this.handleEdit,\n          auth: ['exam-edit'],\n          size: 'mini',\n          type: 'text'\n        },\n        {\n          label: '删除',\n          click: row => this.del(row.id),\n          auth: ['exam-del'],\n          size: 'mini',\n          type: 'text'\n        }\n      ];\n      return [\n        {\n          label: '考试名称',\n          prop: 'examName'\n        },\n        {\n          label: '区域/学校',\n          prop: 'schoolNameList'\n        },\n        {\n          label: '考试科目',\n          prop: 'subjectNameList',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '考试类型',\n          prop: 'examType',\n          formatter(row, column, cellValue) {\n            switch (cellValue) {\n              case 1:\n                return '月考';\n              case 2:\n                return '期中考';\n              case 3:\n                return '期末考';\n            }\n          }\n        },\n        {\n          label: '考试形式',\n          prop: 'examForm',\n          formatter(row, column, cellValue) {\n            return cellValue == 1 ? '普通' : '联考';\n          }\n        },\n        {\n          label: '考试年级',\n          prop: 'gradeNameList'\n        },\n        {\n          label: '学年',\n          prop: 'schoolYear'\n        },\n        {\n          label: '考试时间',\n          prop: 'startDate',\n          formatter(row, column, cellValue) {\n            return row.startDate + '至' + row.endDate;\n          }\n        },\n        {\n          label: '报告生成情况',\n          prop: 'reportStatus',\n          formatter(row, column, cellValue) {\n            switch (cellValue) {\n              case 0:\n                return '未生成';\n              case 1:\n                return '等待生成';\n              case 2:\n                return '已生成';\n            }\n          }\n        },\n        {\n          label: '操作',\n          colType: 'btns',\n          btns: btns.filter(item => this.$has(item.auth)),\n          width: '160px'\n        }\n      ];\n    },\n    /**\n     * 表单项\n     */\n    formItems() {\n      return [\n        {\n          type: 'input',\n          prop: 'examNameLike',\n          label: '考试名称：',\n          attrs: {\n            placeholder: '请输入考试名称'\n          }\n        },\n        {\n          type: 'select',\n          prop: 'areaCode',\n          label: '区域：',\n          options: this.areaList,\n          valueKey: 'areaCode',\n          labelKey: 'areaName',\n          attrs: {\n            multiple: false,\n            filterable: true\n          }\n        },\n        {\n          type: 'select',\n          prop: 'school',\n          label: '学校/学部：',\n          options: this.schoolList,\n          valueKey: 'schoolCode',\n          labelKey: 'schoolName',\n          attrs: {\n            multiple: false,\n            filterable: true\n          }\n        },\n        {\n          type: 'select',\n          prop: 'schoolYear',\n          label: '学年：',\n          options: this.schoolYearList,\n          attrs: {\n            multiple: false\n          }\n        },\n        {\n          type: 'select',\n          prop: 'examForm',\n          label: '考试形式：',\n          options: this.radioArr2,\n          valueKey: 'label',\n          labelKey: 'name',\n          attrs: {\n            multiple: false\n          }\n        }\n      ];\n    },\n    /**\n     * 工具栏\n     */\n    toolbars() {\n      let toolbars = [\n        {\n          label: '新建考试',\n          click: this.handleAdd,\n          auth: ['exam-add']\n        }\n      ];\n      return toolbars.filter(item => this.$has(item.auth));\n    }\n  },\n  created() {\n    this.getSchool('');\n    this.getSchoolYear();\n    this.getAreaList();\n  },\n\n  mounted() {},\n  watch: {},\n  methods: {\n    // 获取区域列表\n    getAreaList() {\n      api.getAreaList().then(({ data }) => {\n        this.areaList = data;\n      });\n    },\n    // 获取学校列表\n    getSchool(areaCode) {\n      api.getSchool(areaCode).then(({ data }) => {\n        this.schoolList = data;\n        if (areaCode !== '') {\n          this.ruleForm.schoolListArr = [];\n          this.schoolarr = [];\n          data.forEach(item => {\n            this.ruleForm.schoolListArr.push({\n              gradeList: [],\n              gradeListArr: [],\n              schoolCode: item.schoolCode,\n              schoolName: item.schoolName\n            });\n            this.changeSchoolListArr(this.ruleForm.schoolListArr);\n          });\n        }\n      });\n    },\n    // 获取年级列表\n    getSchoolYear() {\n      api.getSchoolYear().then(({ data }) => {\n        data.forEach(item => {\n          if (item) {\n            this.schoolYearList.push({\n              label: item,\n              value: item\n            });\n          }\n        });\n      });\n    },\n    // 分页查询考试数据\n    ajaxGetTableDataByPage(params) {\n      return api.getExamPage(params);\n    },\n    // 弹窗 选择学校/学部 变化\n    changeSchoolListArr(val) {\n      if (val.length > this.schoolarr.length) {\n        this.schoolarr.push(val[val.length - 1]);\n        this.getGrade(val[val.length - 1].schoolCode);\n      }\n    },\n    // 移除学校选项\n    removeTag(removeVal) {\n      let removeIndex = this.schoolarr.findIndex(\n        item => item.schoolCode == removeVal.schoolCode\n      );\n      this.schoolarr.splice(removeIndex, 1);\n    },\n\n    // 考试年级-关联学校\n    getGrade(schoolCode, schoolNameParams, gradeListArrParams) {\n      api.getGrade(schoolCode).then(({ data }) => {\n        if (this.dialog.isedit) {\n          this.ruleForm.schoolListArr.push({\n            schoolCode,\n            schoolName: schoolNameParams,\n            gradeList: data,\n            gradeListArr: gradeListArrParams\n          });\n        } else {\n          let index = this.ruleForm.schoolListArr.findIndex(\n            i => i.schoolCode == schoolCode\n          );\n          let schoolName = this.ruleForm.schoolListArr[index].schoolName;\n          this.ruleForm.schoolListArr.splice(index, 1, {\n            schoolCode,\n            schoolName,\n            gradeList: data,\n            gradeListArr: []\n          });\n        }\n      });\n    },\n    // 考试形式更改\n    changeRadioExamForm(val) {\n      this.ruleForm.schoolListArr = [];\n      this.ruleForm.areaCode = '';\n      this.ruleForm.areaName = '';\n      this.clearDialogForm();\n    },\n    // 选择区域\n    changeAreaCode(val) {\n      this.getSchool(val);\n    },\n    // 表单重置\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    // 新增\n    handleAdd() {\n      this.dialog.visible = true;\n      this.dialog.isedit = false;\n      // this.ruleForm = this.$options.data().ruleForm;\n      this.clearDialogForm();\n    },\n    // 编辑\n    handleEdit(row) {\n      this.dialog.visible = true;\n      this.dialog.isedit = true;\n      this.editRow = row;\n      this.getExamDetail(row.id);\n    },\n    // 编辑数据\n    getExamDetail(examId) {\n      api.getExamDetail(examId).then(({ data }) => {\n        // mergeDefault(this.ruleForm, data);\n        this.ruleForm.examName = data.examName;\n        this.ruleForm.examType = data.examType;\n        this.ruleForm.examForm = data.examForm;\n        this.ruleForm.areaCode = data.areaCode;\n        this.ruleForm.areaName = data.areaName;\n        this.ruleForm.date.push(data.startDate);\n        this.ruleForm.date.push(data.endDate);\n        for (let key in data.treeMap) {\n          this.getGrade(\n            key,\n            data.treeMap[key][0].schoolName,\n            data.treeMap[key]\n          );\n        }\n      });\n    },\n    // 获取年级是否选中\n    getChecked(gradeListArr, gradeItem) {\n      let checkedIndex = gradeListArr.findIndex(\n        item => item.gradeCode === gradeItem.gradeCode\n      );\n      return checkedIndex > -1;\n    },\n    // 确认\n    sureDialog() {\n      this.$refs['elForm'].validate(valid => {\n        if (!valid) return;\n        let formParams = {\n          examName: '',\n          examType: null,\n          schoolGradeList: []\n        };\n        if (this.dialog.isedit) {\n          formParams.id = this.editRow.id;\n        }\n        this.confirmLoading = true;\n        formParams.startDate = this.ruleForm.date[0];\n        formParams.endDate = this.ruleForm.date[1];\n        formParams.examName = this.ruleForm.examName;\n        formParams.examType = this.ruleForm.examType;\n        formParams.examForm = this.ruleForm.examForm;\n        if (this.ruleForm.areaCode) {\n          formParams.areaCode = this.ruleForm.areaCode;\n          formParams.areaName = this.areaList.find(\n            i => i.areaCode == this.ruleForm.areaCode\n          ).areaName;\n        }\n\n        this.ruleForm.schoolListArr.forEach(schoolItem => {\n          let arr = this.duplicateArr(schoolItem.gradeListArr, true);\n          console.log(arr);\n          formParams.schoolGradeList.push(...arr);\n        });\n        api\n          .saveExam(formParams)\n          .then(() => {\n            this.$message.success('操作成功');\n            // 关闭窗口\n            this.dialog.visible = false;\n            this.confirmLoading = false;\n            this.$refs.bTable.ajaxGetTableDataByPage();\n          })\n          .finally(() => {\n            this.confirmLoading = false;\n          });\n      });\n    },\n    // 数组去重\n    duplicateArr(arr, type) {\n      if (arr.length == 0) {\n        return arr;\n      } else {\n        if (type) {\n          var obj = {};\n          var newArr = arr.reduce((cur, next) => {\n            obj[next.gradeCode]\n              ? ''\n              : (obj[next.gradeCode] = true && cur.push(next));\n            return cur;\n          }, []);\n          return newArr;\n        } else {\n          return Array.from(new Set(arr));\n        }\n      }\n    },\n    // 弹窗关闭前 重置数据\n    resetDialog() {\n      this.ruleForm = {\n        examName: '',\n        examType: null,\n        examForm: 1,\n        date: [],\n        schoolListArr: [],\n        areaCode: '',\n        areaName: ''\n      };\n      this.clearDialogForm();\n    },\n    // 删除\n    del(id) {\n      //删除\n      this.$confirm('删除后不可恢复，确定删除？', '删除确认', {\n        customClass: 'box-danger',\n        center: true,\n        type: 'warning'\n      })\n        .then(() => {\n          api.removeExam(id).then(({ data }) => {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.$refs.bTable.ajaxGetTableDataByPage();\n          });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    // 清空表单\n    clearDialogForm() {\n      this.$nextTick(() => {\n        this.schoolarr = [];\n        this.$refs['elForm'].clearValidate();\n      });\n    },\n    // 试卷管理跳转\n    linkToPaperManage(row) {\n      if (this.$route.name === 'PaperManage') return;\n      this.$router.push({\n        name: 'PaperManage',\n        query: {\n          id: row.id,\n          gradeNameList: row.gradeNameList,\n          examName: row.examName\n        }\n      });\n    }\n  },\n  components: {\n    BTable\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.examManage {\n  /deep/ .el-input__inner,\n  .el-select {\n    width: 100%;\n  }\n  /deep/ .el-form-item--mini.el-form-item,\n  /deep/ .el-form-item--small.el-form-item {\n    margin-bottom: 20px;\n  }\n  /deep/ .toolbars {\n    margin-bottom: 20px;\n  }\n  /deep/ .el-table {\n    font-size: 14px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    font-weight: 400;\n    color: rgba(0, 0, 0, 0.65);\n  }\n  /deep/ .el-table thead,\n  /deep/ .el-table th {\n    background-color: #fafafa;\n    font-size: 14px;\n    font-family: PingFangSC-Medium, PingFang SC;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.85);\n  }\n  /deep/ .el-table th {\n    padding: 12px 0;\n  }\n  /deep/ .el-dialog {\n    .el-dialog__body {\n      max-height: 370px;\n      overflow-y: auto;\n    }\n    .el-dialog__header {\n      text-align: left;\n      border-bottom: 1px solid #f5f5f5;\n    }\n    .el-button--default {\n      border: 1px solid #5481e9;\n      background: #fff;\n      color: #5481e9;\n    }\n    .el-button + .el-button {\n      margin-left: 12px;\n    }\n    .el-form-item__label {\n      text-align: left;\n      width: 95px !important;\n    }\n    .el-form-item__content {\n      margin-left: 95px !important;\n    }\n    .form-item-self {\n      margin-bottom: 0;\n    }\n    .grade-box {\n      padding-left: 20px;\n      .el-form-item__label {\n        width: 130px !important;\n        padding: 9px 12px 9px 0;\n        line-height: 22px;\n        span {\n          display: inline-block;\n          line-height: 22px;\n        }\n      }\n      .el-form-item__label::before {\n        content: '' !important;\n        margin-right: 0 !important;\n      }\n      .el-form-item__content {\n        margin-left: 130px !important;\n      }\n      .el-form-item {\n        margin-bottom: 0px;\n      }\n    }\n  }\n  /deep/ label {\n    cursor: initial !important;\n  }\n}\n/deep/ .el-form-item__error {\n  position: static;\n}\n</style>\n"]}]}