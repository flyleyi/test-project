{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/views/Permission/User/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/views/Permission/User/index.vue","mtime":1627979214288},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/pages/charity-foundation/views/Permission/User","sourcesContent":["<template>\n  <div class=\"PermissionBox\" v-loading=\"loading\">\n    <el-card class=\"topbar\">\n      <el-form\n        ref=\"FormData\"\n        :rules=\"rules\"\n        :model=\"FormData\"\n        class=\"form\"\n        size=\"mini\"\n      >\n        <el-form-item label=\"账号:\" prop=\"account\">\n          <el-input\n            v-model.trim=\"FormData.account\"\n            @keyup.enter.native=\"screen\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"类型:\" prop=\"type\">\n          <el-select\n            v-model=\"FormData.type\"\n            placeholder=\"请选择类型\"\n            @focus=\"getRoleList\"\n            @change=\"screen\"\n          >\n            <el-option label=\"全选\" value=\"\"></el-option>\n            <el-option\n              v-for=\"(item, index) in roleList\"\n              :key=\"index\"\n              :label=\"item.roleName\"\n              :value=\"item.roleId\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item size=\"small\">\n          <el-button type=\"primary\" class=\"btn\" @click=\"screen\">筛选</el-button>\n          <el-button type=\"primary\" class=\"btn\" @click=\"resetForm('FormData')\"\n            >重置</el-button\n          >\n          <el-button type=\"primary\" class=\"btn\" @click=\"editRow(1, {})\"\n            >新增</el-button\n          >\n          <el-button type=\"danger\" class=\"btn\" @click=\"deleteRow('all')\"\n            >删除</el-button\n          >\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <el-card class=\"table-card\">\n      <el-table\n        ref=\"multipleTable\"\n        :data=\"tableData\"\n        tooltip-effect=\"dark\"\n        style=\"width: 100%\"\n        border\n        @selection-change=\"handleSelectionChange\"\n        type=\"selection\"\n        :reserve-selection=\"true\"\n        :row-key=\"row => row.userId\"\n        highlight-current-row\n      >\n        <el-table-column type=\"selection\" width=\"40\" :reserve-selection=\"true\">\n        </el-table-column>\n        <el-table-column label=\"序号\" width=\"60\">\n          <template slot-scope=\"scope\">{{\n            scope.$index + (currentPage - 1) * pageSize + 1 > 9\n              ? scope.$index + (currentPage - 1) * pageSize + 1\n              : `0${scope.$index + (currentPage - 1) * pageSize + 1}`\n          }}</template>\n        </el-table-column>\n        <el-table-column\n          prop=\"username\"\n          label=\"账号\"\n          width=\"120\"\n          show-overflow-tooltip\n        >\n        </el-table-column>\n        <el-table-column\n          prop=\"type\"\n          width=\"120\"\n          label=\"类型\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.roleName || '--' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"menuStr\" label=\"权限\" show-overflow-tooltip>\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.menuStr || '--' }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column\n          prop=\"updateTime\"\n          label=\"操作时间\"\n          show-overflow-tooltip\n        >\n          <template slot-scope=\"scope\">\n            <span>{{ scope.row.updateTime | timeFomter }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\n          <template slot-scope=\"scope\">\n            <el-button\n              @click.native.prevent=\"editRow(2, scope.row)\"\n              type=\"text\"\n              size=\"small\"\n              class=\"tableBtn\"\n            >\n              编辑\n            </el-button>\n            <el-button\n              @click.native.prevent=\"deleteRow(scope.row)\"\n              type=\"text\"\n              size=\"small\"\n              class=\"tableBtn\"\n            >\n              删除\n            </el-button>\n            <el-button\n              @click.native.prevent=\"resetRow(scope.row, scope.$index)\"\n              type=\"text\"\n              size=\"small\"\n              class=\"tableBtn\"\n            >\n              重置密码\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!--分页-->\n      <div class=\"block\">\n        <el-pagination\n          :current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          layout=\"total, prev, pager, next, jumper\"\n          :total=\"total\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    <permission-edit ref=\"bImportData\" @close=\"closed\"></permission-edit>\n  </div>\n</template>\n\n<script>\nimport {\n  Card,\n  Form,\n  FormItem,\n  Input,\n  Select,\n  Option,\n  Button,\n  Table,\n  TableColumn,\n  Pagination\n} from 'element-ui';\nimport PermissionEdit from '../../components/permissionEdit/index';\nimport {\n  getUserList,\n  updatePassword,\n  deleteById\n} from '../../../api/user/index';\nimport { getMenuList, getRoleList } from '../../../api/auth/index';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'PermissionUser',\n  components: {\n    [Card.name]: Card,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Input.name]: Input,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [Button.name]: Button,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n    [Pagination.name]: Pagination,\n    PermissionEdit\n  },\n  data() {\n    // let passwordRules = (rule, value, callback) => {\n    //   console.log(this.passwordSuccess, 'success');\n    //   if (this.passwordSuccess) {\n    //     return callback();\n    //   } else {\n    //     return callback(new Error(this.passwordMessage));\n    //   }\n    // };\n    return {\n      FormData: {\n        account: '', // 账号\n        type: '' // 类型 1 运营 2财务\n      },\n      menuList: [], // 权限菜单\n      currentPage: 1,\n      pageSize: 10,\n      total: 0, // 总数量\n      passwordSuccess: true,\n      passwordMessage: '',\n      loading: false,\n      rules: {\n        // account: [\n        //   { required: true, message: '请输入用户名', trigger: 'blur' },\n        //   { required: true, message: '请输入用户名', trigger: 'change' }\n        // ]\n        //   password: [\n        //     { required: true, message: '请输入密码', trigger: 'blur' },\n        //     { required: true, message: '请输入密码', trigger: 'change' }\n        //   ]\n      },\n      tableData: [],\n      multipleSelection: [], //选择\n      roleList: [] // 类型\n    };\n  },\n  created() {\n    // 跳转到单点登录页面\n    console.log('aaa');\n  },\n  mounted() {\n    this.initData();\n  },\n  computed: {\n    ...mapGetters(['staffCode', 'staffName'])\n  },\n  filters: {\n    timeFomter(val) {\n      let str = '';\n      if (val) {\n        str = val.replace('T', ' ');\n      } else {\n        str = '--';\n      }\n      return str;\n    }\n  },\n  methods: {\n    initData() {\n      this.loading = true;\n      this.$refs.multipleTable.clearSelection();\n      let params = {\n        offset: this.currentPage,\n        limit: this.pageSize,\n        username: this.FormData.account ? this.FormData.account : '',\n        roleId: this.FormData.type ? this.FormData.type : ''\n      };\n      this.tableData = [];\n      getUserList(params)\n        .then(res => {\n          this.total = res.data.total;\n          this.tableData = res.data.records;\n          if (Array.isArray(this.tableData) && this.tableData.length > 0) {\n            getMenuList().then(response => {\n              let menuList = [];\n              const treeConvertList = (tree, childrenKey = 'children') => {\n                if (!Array.isArray(tree)) return [];\n                let list = [];\n                let fn = data => {\n                  list = list.concat(data.slice(0));\n                  data.forEach(item => {\n                    let children = item[childrenKey];\n                    Array.isArray(children) && fn(children);\n                  });\n                };\n                fn(tree);\n                return list;\n              };\n              menuList = treeConvertList(response.data); // 打平权限列表数据\n              this.tableData.forEach(item => {\n                let menuIds = item.menuIds ? item.menuIds.split(',') : []; // 将每人的菜单id变为数组\n                let menuStr = ''; // 将每人的菜单id变为字符串\n                menuIds.forEach(menuid => {\n                  menuStr += `${menuList.find(meun => menuid == meun.menuId)\n                    .name || ''}、`;\n                });\n                this.$set(\n                  item,\n                  'menuStr',\n                  menuStr.slice(0, menuStr.length - 1)\n                ); // 去掉最后一个字符串\n              });\n            });\n            // getRoleList().then(role => {\n            //   debugger;\n            //   this.tableData.forEach(item => {\n            //     let roleStr = ''; // 将每人的菜单id变为字符串\n            //     role.data.forEach(roleid => {\n            //       roleStr =\n            //         roleid.roleId === item.roleId ? roleid.roleName : '';\n            //     });\n            //     this.$set(item, 'roleNameStr', roleStr); // 去掉最后一个字符串\n            //   });\n            // });\n            this.$nextTick(() => {\n              this.$refs.multipleTable.doLayout(); //解决表格错位\n            });\n            this.loading = false;\n          } else {\n            this.loading = false;\n          }\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    // 获取类型数据\n    getRoleList() {\n      getRoleList().then(res => {\n        this.roleList = res.data;\n      });\n    },\n    // 筛选\n    screen() {\n      this.currentPage = 1;\n      this.total = 0;\n      this.initData();\n    },\n    // 换页\n    handleCurrentChange(val) {\n      this.currentPage = val;\n      this.initData();\n    },\n    /**\n     * 重置表单\n     */\n    async resetForm(formName) {\n      this.currentPage = 1;\n      this.$refs[formName].resetFields();\n      await this.initData();\n    },\n    /**\n     * 多选项改变\n     */\n    handleSelectionChange(val) {\n      this.multipleSelection = val;\n    },\n    /**\n     * 删除\n     */\n    deleteRow(item) {\n      if (item === 'all' && this.multipleSelection.length <= 0) {\n        this.$message.error('请选择要删除的用户');\n        return false;\n      }\n      this.$confirm('是否确定删除该用户?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        closeOnClickModal: false,\n        closeOnPressEscape: false\n      })\n        .then(() => {\n          let userId = '';\n          if (item === 'all') {\n            this.multipleSelection.forEach(user => {\n              userId += user.userId ? `${user.userId},` : '';\n            });\n            userId = userId.slice(0, userId.length - 1);\n          } else {\n            userId = item.userId;\n          }\n          deleteById({ userId: userId }).then(res => {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.initData();\n          });\n        })\n        .catch(() => {\n          //取消\n        });\n    },\n    /**\n     * 重置\n     */\n    resetRow(item, index) {\n      this.$confirm('是否确定重置该用户的密码？初始密码为 123456', '重置密码', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        closeOnClickModal: false,\n        closeOnPressEscape: false\n      })\n        .then(() => {\n          updatePassword({ userId: item.userId }).then(res => {\n            this.$message({\n              type: 'success',\n              message: '密码重置成功!'\n            });\n          });\n        })\n        .catch(() => {\n          // 取消\n        });\n    },\n    /**\n     * 修改新增\n     * @param {Number}} type 1 新增 2修改\n     */\n    editRow(type, item) {\n      item['isedit'] = type === 1 ? false : true;\n      this.$refs.bImportData.show(item);\n    },\n    /**\n     * 关闭新增或修改\n     */\n    closed() {\n      this.initData();\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.PermissionBox {\n  .topbar {\n    width: 100%;\n    .form {\n      display: flex;\n      /deep/.el-form-item {\n        display: flex;\n        align-items: center;\n        margin-right: 20px;\n        margin-bottom: 0;\n      }\n      .btn {\n        padding: 6px 15px;\n        border-radius: 5px;\n      }\n    }\n  }\n  .table-card {\n    margin-top: 20px;\n    .tableBtn {\n      font-size: 14px;\n    }\n  }\n}\n</style>\n"]}]}