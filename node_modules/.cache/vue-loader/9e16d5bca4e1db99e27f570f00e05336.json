{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BDataDict/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BDataDict/index.vue","mtime":1627979214235},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/components/business/BDataDict","sourcesContent":["<template>\n  <!-- 数据字典 -->\n  <div class=\"app-container\" @click=\"closeMenu\">\n    <div class=\"header\">\n      <el-form\n        inline\n        class=\"search-form\"\n        size=\"small\"\n        @keyup.enter.native=\"query\"\n      >\n        <el-form-item label=\"业务ID：\">\n          <el-input\n            v-model.trim=\"queryParams.dictionaryKey\"\n            style=\"width: 160px\"\n          />\n        </el-form-item>\n        <el-form-item label=\"业务名称：\">\n          <el-input\n            v-model.trim=\"queryParams.dictionaryValueZh\"\n            style=\"width: 160px\"\n          />\n        </el-form-item>\n        <el-form-item label=\"状态：\">\n          <el-select\n            v-model=\"queryParams.status\"\n            clearable\n            style=\"width: 160px\"\n          >\n            <el-option :value=\"0\" label=\"启用\" />\n            <el-option :value=\"1\" label=\"禁用\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button :loading=\"loading\" @click=\"query\">\n            查询\n          </el-button>\n          <el-button :loading=\"loading\" type=\"primary\" @click=\"resetForm\">\n            重置\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n    <el-row class=\"plate-group\">\n      <el-col :md=\"12\">\n        <div class=\"plate plate-tree shortcut-menu-box\">\n          <el-tree\n            ref=\"treeDict\"\n            :data=\"treeData\"\n            :props=\"propsOptions\"\n            :lazy=\"true\"\n            :load=\"loadNode\"\n            :default-expanded-keys=\"defaultExpandedKeys\"\n            :expand-on-click-node=\"false\"\n            node-key=\"id\"\n            highlight-current\n            class=\"tree-dict\"\n            @node-contextmenu=\"onContextMenu\"\n            @node-click=\"onNodeClick\"\n          />\n          <c-shortcut-menu\n            v-show=\"showMenu\"\n            ref=\"shortcutMenu\"\n            :style=\"menuStyle\"\n            :menu-items=\"menuItems\"\n            class=\"shortcut-menu\"\n            @command=\"command\"\n          />\n        </div>\n      </el-col>\n      <el-col :md=\"12\">\n        <div class=\"plate plate-info\">\n          <el-form>\n            <el-form-item label=\"父业务ID：\">\n              {{ nowDictData.parentKey }}\n            </el-form-item>\n            <el-form-item label=\"父业务名称：\">\n              {{ nowDictData.parentText }}\n            </el-form-item>\n            <el-form-item label=\"业务ID：\">\n              {{ nowDictData.dictionaryKey }}\n            </el-form-item>\n            <el-form-item label=\"业务名称：\">\n              {{ nowDictData.dictionaryValueZh }}\n            </el-form-item>\n            <el-form-item label=\"状态：\">\n              {{ nowDictData.status | filtersStatus }}\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-col>\n    </el-row>\n    <!-- 字典编辑模态框 start -->\n    <el-dialog\n      center\n      :visible.sync=\"showDialog\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n    >\n      <el-form\n        ref=\"editForm\"\n        :model=\"editForm\"\n        :rules=\"formRules\"\n        size=\"1\"\n        label-position=\"left\"\n        label-width=\"105px\"\n        class=\"edit-form\"\n      >\n        <el-form-item label=\"父业务ID\">\n          {{ editForm.parentKey }}\n        </el-form-item>\n        <el-form-item label=\"父业务名称\">\n          {{ editForm.parentText }}\n        </el-form-item>\n        <el-form-item label=\"业务ID\" prop=\"dictionaryKey\">\n          <el-input\n            v-model.trim=\"editForm.dictionaryKey\"\n            :disabled=\"editStatus === 'editor'\"\n          />\n        </el-form-item>\n        <el-form-item label=\"业务名称\" prop=\"dictionaryValueZh\">\n          <el-input v-model.trim=\"editForm.dictionaryValueZh\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"editForm.status\">\n            <el-radio :label=\"0\">启用</el-radio>\n            <el-radio :label=\"1\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          :loading=\"confirmLoading\"\n          size=\"small\"\n          type=\"primary\"\n          @click=\"confirm\"\n          >确定</el-button\n        >\n        <el-button\n          :loading=\"confirmLoading\"\n          size=\"small\"\n          @click=\"showDialog = false\"\n          >取消</el-button\n        >\n      </div>\n    </el-dialog>\n    <!-- 字典编辑模态框 end -->\n  </div>\n</template>\n\n<script>\nimport {\n  Row,\n  Col,\n  Form,\n  FormItem,\n  Dialog,\n  Input,\n  Tree,\n  Select,\n  Option,\n  Radio,\n  RadioGroup\n} from 'element-ui';\nimport CShortcutMenu from '../../common/CShortcutMenu';\nimport utils from '@/plugins/common/utils';\nimport axios from '@/plugins/axios';\n\nconst commands = {\n  NEW: 'new',\n  EDITOR: 'editor',\n  DELETE: 'delete'\n};\nfunction getObjXy(obj) {\n  var xy = obj.getBoundingClientRect();\n  var top =\n      xy.top -\n      document.documentElement.clientTop +\n      document.documentElement.scrollTop, //document.documentElement.clientTop 在IE67中始终为2，其他高级点的浏览器为0\n    bottom = xy.bottom,\n    left =\n      xy.left -\n      document.documentElement.clientLeft +\n      document.documentElement.scrollLeft, //document.documentElement.clientLeft 在IE67中始终为2，其他高级点的浏览器为0\n    right = xy.right,\n    width = xy.width || right - left, //IE67不存在width 使用right - left获得\n    height = xy.height || bottom - top;\n\n  return {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left,\n    width: width,\n    height: height\n  };\n}\n\nexport default {\n  name: 'BDataDict',\n  // 注册组件\n  components: {\n    [CShortcutMenu.name]: CShortcutMenu, // 快捷菜单\n    [Row.name]: Row,\n    [Col.name]: Col,\n    [Form.name]: Form,\n    [FormItem.name]: FormItem,\n    [Dialog.name]: Dialog,\n    [Input.name]: Input,\n    [Tree.name]: Tree,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [RadioGroup.name]: RadioGroup,\n    [Radio.name]: Radio\n  },\n  props: {\n    /**\n     * 服务器类型\n     */\n    serverType: {\n      type: String,\n      default: ''\n    }\n  },\n  // 定义数据\n  data() {\n    return {\n      loading: false, // 数据加载中\n      queryParams: {\n        // 查询参数\n        dictionaryKey: '', // 字典键\n        dictionaryValueZh: '', // 字典值\n        status: '' // 状态\n      },\n      treeData: [\n        // 树数据\n      ],\n      nowDictData: {}, // 当前字典数据\n      nowDictNode: {}, // 当前字典节点\n      propsOptions: {\n        // 树组件配置\n        label: 'dictionaryValueZh'\n        // isLeaf: function (data, node) {\n        //   return data.isLeaf === '1'\n        // }\n      },\n      showMenu: false, // 是否显示菜单\n      menuTop: 0, // 菜单距离顶部距离\n      menuLeft: 0, // 菜单距离右侧距离\n      menuLocation: {\n        // 菜单位置\n        pageX: 0,\n        pageY: 0,\n        relativeX: 0,\n        relativeY: 0\n      },\n      // offsetY: 0,             // 保存上次右键位置\n      // offsetX: 0,             // 保存上次右键位置\n      screenWidth: document.body.clientWidth, // 页面宽度监听\n      showDialog: false, // 是否显示模态框\n      editForm: {\n        // 菜单编辑表单\n        parentKey: '', // 父业务Id\n        parentText: '', // 父业务名称\n        parentId: '', // 父节点id\n        dictionaryKey: '', // 字典键\n        dictionaryValueZh: '', // 字典值\n        status: 0 // 状态\n      },\n      formRules: {\n        // 表单验证\n        dictionaryKey: [\n          { required: true, trigger: 'blur', message: '业务ID未填写' },\n          {\n            validator: function(rule, value, callback) {\n              if (/,/.test(value))\n                callback(new Error('非法字符，不允许存在“ , ”。'));\n              else callback();\n            }\n          },\n          { max: 64, trigger: '', message: '最大长度64个字符' }\n        ],\n        dictionaryValueZh: [\n          { required: true, trigger: 'blur', message: '业务名称未填写' },\n          { max: 128, trigger: '', message: '最大长度128个字符' }\n        ],\n        status: [\n          { required: true, trigger: 'click', message: '业务名称未填写' }\n        ]\n      },\n      editStatus: '', // 编辑状态\n      confirmLoading: false, // 提交中\n      defaultExpandedKeys: ['-1']\n    };\n  },\n  // 计算属性\n  computed: {\n    /**\n     * 快捷菜单项\n     */\n    menuItems() {\n      console.log('this.nowDictNode', this.nowDictNode);\n      if (this.nowDictNode.level === 1) {\n        // 根节点只能新增\n        return [\n          { label: '新增', command: commands.NEW, auth: ['datadict-add'] }\n        ];\n      } else if (!this.nowDictNode.isLeaf) {\n        // 有子节点不允许删除\n        return [\n          { label: '新增', command: commands.NEW, auth: ['datadict-add'] },\n          { label: '编辑', command: commands.EDITOR, auth: ['datadict-edit'] }\n        ];\n      } else {\n        // 叶子节点\n        return [\n          { label: '新增', command: commands.NEW, auth: ['datadict-add'] },\n          { label: '编辑', command: commands.EDITOR, auth: ['datadict-edit'] },\n          { label: '删除', command: commands.DELETE, auth: ['datadict-delete'] }\n        ];\n      }\n    },\n    /**\n     * 快捷菜单样式\n     */\n    menuStyle() {\n      return {\n        top: this.menuTop + 'px',\n        left: this.menuLeft + 'px'\n      };\n    },\n    /**\n     * 模态框标题\n     */\n    dialogTitle() {\n      return (\n        {\n          new: '新增',\n          editor: '编辑'\n        }[this.editStatus] || ''\n      );\n    }\n  },\n  // 侦听器\n  watch: {\n    screenWidth(newVal, oldVal) {\n      this.calcMenuPosition();\n    }\n  },\n  // 创建完成钩子\n  created() {},\n  // 挂在完成钩子\n  mounted() {\n    /**\n     * 监听页面变化事件\n     */\n    window.addEventListener('resize', this.onResize);\n  },\n  destroyed() {\n    /**\n     * 移除监听页面变化事件\n     */\n    window.removeEventListener('resize', this.onResize);\n  },\n  // 方法定义\n  methods: {\n    /**\n     * 表单查询\n     */\n    query() {\n      this.treeData = [\n        {\n          id: '-1',\n          dictionaryKey: '-1',\n          dictionaryValueZh: '数据字典',\n          status: 0\n        }\n      ];\n    },\n    /**\n     * 加载节点\n     */\n    loadNode(node, resolve) {\n      if (node.level === 0)\n        return resolve([\n          {\n            id: '-1',\n            dictionaryKey: '-1',\n            dictionaryValueZh: '数据字典',\n            status: 0\n          }\n        ]);\n      if (this.loading) return;\n      this.loading = true;\n      axios(\n        {\n          method: 'POST',\n          url: '/commonData/dictionaryApi/select/dic/children',\n          data: {\n            keyList: [node.data.dictionaryKey],\n            dictionaryValueZh: this.queryParams.dictionaryValueZh,\n            status: this.queryParams.status\n          }\n        },\n        this.serverType\n      )\n        .then(({ data }) => {\n          resolve(data || []);\n          this.loading = false;\n        })\n        .catch(() => {\n          resolve([]);\n          this.loading = false;\n        });\n      // var sendData = {};\n      // var res = false;\n      // var keys = ['dictionaryKey', 'dictionaryValueZh', 'status'];\n      // for (let key of keys) {\n      //   if (this.queryParams[key] !== '') {\n      //     res = true;\n      //     break;\n      //   }\n      // }\n      // if (res && node.level === 1) {\n      //   sendData = this.queryParams;\n      //   axios(\n      //     {\n      //       method: 'GET',\n      //       url: '/dictionary/selectDictionaryWithChildren',\n      //       params: sendData\n      //     },\n      //     this.serverType\n      //   )\n      //     .then(({ data }) => {\n      //       resolve(data || []);\n      //       this.loading = false;\n      //     })\n      //     .catch(() => {\n      //       resolve([]);\n      //       this.loading = false;\n      //     });\n      // } else {\n      //   axios(\n      //     {\n      //       url: `/dictionary/selectDictionaryWithChildren/${node.data.dictionaryId}`,\n      //       method: 'GET',\n      //       params: sendData\n      //     },\n      //     this.serverType\n      //   )\n      //     .then(({ data }) => {\n      //       resolve(data || []);\n      //       this.loading = false;\n      //     })\n      //     .catch(() => {\n      //       resolve([]);\n      //       this.loading = false;\n      //     });\n      // }\n    },\n    /**\n     * 重置表单\n     * @param {String} form 表单的ref\n     */\n    resetForm(form) {\n      this.queryParams = {\n        // 查询参数\n        dictionaryKey: '', // 字典键\n        dictionaryValueZh: '', // 字典值\n        status: '' // 状态\n      };\n    },\n    /**\n     * 右键快捷菜单\n     * @param {Event} event 事件对象\n     * @param {*} data 节点数据\n     * @param {*} node 节点\n     * @param {*} ref 节点组件本身\n     */\n    onContextMenu(event, data, node, ref) {\n      // 保存\n      this.nowDictData = data;\n      this.nowDictNode = node;\n      // 显示菜单\n      this.showMenu = true;\n      Object.keys(this.menuLocation).forEach(key => {\n        this.menuLocation[key] = event[key];\n      });\n      this.$nextTick(() => {\n        var xy = getObjXy(this.$refs['treeDict'].$el);\n        this.menuLocation.relativeX = this.menuLocation.pageX - xy.left;\n        this.menuLocation.relativeY = this.menuLocation.pageY - xy.top;\n        this.calcMenuPosition();\n      });\n    },\n    /**\n     * 关闭菜单显示\n     */\n    closeMenu() {\n      this.showMenu = false;\n    },\n    /**\n     * 计算设置菜单位置\n     */\n    calcMenuPosition() {\n      if (!this.showMenu) return;\n      this.$nextTick(() => {\n        // 快捷菜单宽度\n        var shortcutMenu = this.$refs['shortcutMenu'];\n        var treeDict = this.$refs['treeDict'];\n        var shortcutMenuWidth = shortcutMenu.$el.offsetWidth;\n        var treeDictWidth = treeDict.$el.offsetWidth;\n        var relativeX = this.menuLocation.relativeX;\n        var relativeY = this.menuLocation.relativeY;\n        this.menuTop = relativeY;\n        // 判断快捷菜单是否超出范围\n        if (relativeX + shortcutMenuWidth > treeDictWidth) {\n          this.menuLeft = treeDictWidth - shortcutMenuWidth;\n        } else {\n          this.menuLeft = relativeX;\n        }\n      });\n    },\n    /**\n     * 更新页面宽度\n     */\n    onResize: utils.debounce(function() {\n      window.screenWidth = document.body.clientWidth;\n      this.screenWidth = window.screenWidth;\n    }, 200),\n    /**\n     * 指令执行\n     */\n    command(event, command, data) {\n      switch (command) {\n        case commands.NEW:\n          this.editStatus = command;\n          // 新增\n          this.editForm = {\n            isLeaf: '1',\n            parentId: this.nowDictData.dictionaryId,\n            parentText: this.nowDictData.dictionaryValueZh,\n            parentKey: this.nowDictData.dictionaryKey,\n            dictionaryKey: '', // 字典键\n            dictionaryValueZh: '', // 字典值\n            status: 0, // 状态\n            dicOrder:\n              ((this.nowDictNode.childNodes &&\n                this.nowDictNode.childNodes.length) ||\n                0) + 1\n          };\n          this.initShowDialog();\n          break;\n        case commands.EDITOR:\n          // 编辑\n          this.editStatus = command;\n          var editData = new Object();\n          [\n            'isLeaf',\n            'parentKey',\n            'parentId',\n            'dictionaryId',\n            'dictionaryKey',\n            'dictionaryValueZh',\n            'status',\n            'dicOrder'\n          ].forEach(key => {\n            editData[key] = this.nowDictData[key];\n          });\n          editData.parentText =\n            (this.nowDictNode.parent &&\n              this.nowDictNode.parent.data &&\n              this.nowDictNode.parent.data.dictionaryValueZh) ||\n            '';\n          this.editForm = editData;\n          this.initShowDialog();\n          break;\n        case commands.DELETE:\n          // 删除\n          this.$confirm('是否确定删除?', '提示', {\n            confirmButtonText: '确定',\n            cancelButtonText: '取消',\n            type: 'warning'\n          })\n            .then(() => {\n              return axios(\n                {\n                  method: 'GET',\n                  url: '/dictionary/deleteDictionary',\n                  params: {\n                    ids: this.nowDictData.dictionaryId\n                  }\n                },\n                this.serverType\n              );\n            })\n            .then(() => {\n              return this.$nextTick();\n            })\n            .then(() => {\n              this.$refs['treeDict'].remove(this.nowDictNode);\n              this.$message.success('删除成功');\n            })\n            .catch(() => {});\n          break;\n      }\n    },\n    /**\n     * 提交表单\n     */\n    confirm() {\n      if (this.confirmLoading) return;\n      this.$refs['editForm'].validate(valid => {\n        var sendData = {};\n        if (valid) {\n          switch (this.editStatus) {\n            case 'new':\n              // 新增\n              sendData = { ...this.editForm };\n              delete sendData['isLeaf'];\n              this.confirmLoading = true;\n              axios(\n                {\n                  method: 'POST',\n                  url: '/commonData/dictionaryApi/add/dic',\n                  data: sendData\n                },\n                this.serverType\n              )\n                .then(({ data }) => {\n                  this.$nextTick(() => {\n                    if (!this.nowDictData.children) {\n                      this.$set(this.nowDictData, 'children', []);\n                    }\n                    this.nowDictData.children.push(data);\n\n                    this.showDialog = false;\n                    this.confirmLoading = false;\n                    this.$message.success('新增成功');\n                  });\n                })\n                .catch(() => {\n                  this.confirmLoading = false;\n                });\n              break;\n            case 'editor':\n              // 编辑\n              this.confirmLoading = true;\n              axios(\n                {\n                  method: 'POST',\n                  url: '/commonData/dictionaryApi/update/dic',\n                  data: { ...this.editForm }\n                },\n                this.serverType\n              )\n                .then(() => {\n                  Object.assign(this.nowDictData, this.editForm);\n                  this.showDialog = false;\n                  this.confirmLoading = false;\n                  this.$message.success('修改成功');\n                })\n                .catch(() => {\n                  this.confirmLoading = false;\n                });\n              break;\n            default:\n              this.$message.warning('提交异常，无处理方法');\n              break;\n          }\n        }\n      });\n    },\n    /**\n     * 初始化显示模态框\n     */\n    initShowDialog() {\n      this.showDialog = true;\n      this.$nextTick(() => {\n        this.$refs['editForm'].clearValidate();\n      });\n    },\n    /**\n     * 点击节点事件\n     * @param {*} data 节点数据\n     * @param {*} node 节点对象\n     * @param {*} ref 节点组件本身\n     */\n    onNodeClick(data, node, ref) {\n      this.showMenu = false;\n      this.nowDictData = data;\n      this.nowDictNode = node;\n      this.nowDictData.parentText =\n        (this.nowDictNode.parent &&\n          this.nowDictNode.parent.data &&\n          this.nowDictNode.parent.data.dictionaryValueZh) ||\n        '';\n    }\n  },\n  // 过滤器\n  filters: {\n    filtersStatus(value) {\n      return (\n        {\n          0: '启用',\n          1: '禁用'\n        }[value] || ''\n      );\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.app-container {\n  padding: 15px 20px;\n}\n.plate {\n  min-height: 300px;\n  background: rgba(254, 255, 255, 1);\n  box-shadow: 0px 3px 6px 0px rgba(219, 219, 219, 0.5);\n  border-radius: 6px;\n  border: 1px solid rgba(235, 235, 235, 1);\n  box-sizing: border-box;\n  &-info {\n    padding: 15px 28px;\n    margin: 15px;\n    .el-form-item--small.el-form-item {\n      margin-bottom: 23px;\n    }\n    /deep/ .el-form-item__label {\n      font-weight: 400;\n    }\n  }\n  &-tree {\n    padding: 15px 10px;\n    margin: 15px;\n    .el-tree {\n      background: transparent;\n    }\n  }\n}\n\n// 快捷菜单\n.shortcut-menu-box {\n  position: relative;\n  min-height: 300px;\n  overflow-y: auto;\n}\n.shortcut-menu {\n  position: absolute;\n  z-index: 2000;\n}\n// .edit-form {\n//   /deep/ .el-form-item__label {\n//     font-size: 16px;\n//   }\n//   /deep/ .el-input__inner {\n//     width: 400px;\n//   }\n//   /deep/ .el-form-item {\n//     margin-bottom: 20px;\n//   }\n// }\n</style>\n"]}]}