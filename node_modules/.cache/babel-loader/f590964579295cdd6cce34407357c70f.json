{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/MessageReply.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/MessageReply.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MessageReply.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"留言回复暂无数据\"\n      :headers=\"headers\"\n      :initialFormData=\"initialFormData\"\n      :form-items=\"formItems\"\n      @reset-form=\"resetForm\"\n      :ajax-get-data=\"ajaxGetData\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :header-cell-style=\"{ 'text-align': 'center' }\"\n    >\n      <template slot=\"column|status\" slot-scope=\"{ row }\">\n        <span>{{\n          ($D('SHZT').find(item => item.value == row.status) &&\n            $D('SHZT').find(item => item.value == row.status)['label']) ||\n            '-'\n        }}</span>\n      </template>\n      <template slot=\"column|content\" slot-scope=\"{ row }\">\n        <span v-if=\"row.content\" v-html=\"row.content\"></span>\n        <span v-else>-</span>\n      </template>\n      <template slot=\"column|image\" slot-scope=\"{ row }\">\n        <span\n          class=\"custom-column\"\n          v-if=\"row.images && getFileList(row.images)['list'].length > 0\"\n        >\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"getFileList(row.images)['list'][0].url\"\n            :preview-src-list=\"getFileList(row.images)['urlList']\"\n            fit=\"contain\"\n          >\n          </el-image>\n          <span class=\"custom-number\">\n            {{ getFileList(row.images)['list'].length }}\n          </span>\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|file\" slot-scope=\"{ row }\">\n        <span v-if=\"row.files && getFileList(row.files)['list'].length > 0\">\n          <span class=\"custom-file text-decoration\">\n            <!-- <el-button\n              size=\"mini\"\n              type=\"text\"\n              @click=\"downloadFile(getFileList(row.files)['list'][0])\"\n            > -->\n            {{ getFileList(row.files)['list'][0].name }}\n            <!-- </el-button> -->\n          </span>\n          <!-- <el-popover placement=\"right\" trigger=\"click\">\n            <div\n              v-for=\"item in getFileList(row.files)['list']\"\n              :key=\"item.name + item.url\"\n            >\n              <span\n                class=\"custom-number text-decoration\"\n                @click=\"downloadFile(item)\"\n              >\n                {{ item.name }}</span\n              >\n            </div>\n            <span slot=\"reference\">\n              <span class=\"custom-number text-decoration\">\n                {{ getFileList(row.files)['list'].length }}</span\n              >\n            </span>\n          </el-popover> -->\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|commentCount\" slot-scope=\"{ row }\">\n        <el-button size=\"mini\" type=\"text\" @click.stop=\"toReply(row)\">\n          {{ row.commentCount || 0 }}条回复</el-button\n        >\n      </template>\n      <template slot=\"column|unreviewedCommentCount\" slot-scope=\"{ row }\">\n        <el-button\n          size=\"mini\"\n          type=\"text\"\n          @click.stop=\"toReply(row, 'unreview')\"\n        >\n          {{ row.unreviewedCommentCount || 0 }}条回复</el-button\n        >\n      </template>\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            v-auth=\"['check-message']\"\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineQuest(row)\"\n            >审核</el-button\n          >\n          <el-button\n            v-auth=\"['reply-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"onReplyQuest(row, 'preview')\"\n            >回复</el-button\n          >\n          <el-button\n            v-auth=\"['delete-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteQuest(row, 'delete')\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"onCloseForm\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport config from './../../config';\nimport {\n  getMessageList,\n  examMessage,\n  deleteMessage,\n  replyMessage\n} from './../../api/data';\nexport default {\n  name: 'MessageReply',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n\n  data() {\n    return {\n      //图片前缀\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n        },\n        {\n          label: '回复内容',\n          prop: 'content',\n          fixed: 'left',\n          width: '150',\n          'show-overflow-tooltip': true,\n          colType: 'column'\n        },\n        {\n          label: '图片',\n          prop: 'image',\n          width: '150',\n          colType: 'column'\n        },\n        {\n          label: '附件',\n          prop: 'file',\n          colType: 'column'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '管理员回复',\n          prop: 'replyContent'\n        },\n        {\n          label: '编辑时间',\n          width: '160',\n          prop: 'createTime',\n          'value-format': 'yyyy-MM-dd'\n        },\n        {\n          label: '审核时间',\n          width: '160',\n          prop: 'reviewTime'\n        },\n        {\n          label: '回复时间',\n          width: '160',\n          prop: 'adminAnswerTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          colType: 'column'\n        },\n        {\n          label: '操作',\n          width: '120',\n          fixed: 'right',\n          slotName: 'opera',\n          colType: 'column'\n          // colType: 'btns',\n          // btns: [\n          //   {\n          //     label: '审核',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onExamineQuest\n          //   },\n          //   {\n          //     label: '回复',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onReplyQuest\n          //   },\n          //   {\n          //     label: '删除',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.deleteQuest\n          //   }\n          // ]\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'input',\n          prop: 'content',\n          label: '回复内容：',\n          attrs: [\n            {\n              placeholder: '回复内容'\n            }\n          ]\n        },\n        // {\n        //   type: 'select',\n        //   prop: 'isImg',\n        //   label: '是否有图片：',\n        //   options: [\n        //     { label: '是', value: true },\n        //     { label: '否', value: false }\n        //   ]\n        // },\n        // {\n        //   type: 'select',\n        //   prop: 'isFiled',\n        //   label: '是否有附件：',\n        //   options: [\n        //     { label: '是', value: true },\n        //     { label: '否', value: false }\n        //   ]\n        // },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'editTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        }\n      ],\n      dialogTitle: '',\n      dialogType: '',\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineQuest,\n          hidden: () => !this.$has(['check-message-batch'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteQuest,\n          hidden: () => !this.$has(['delete-message-batch'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      replyId: null,\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核结果'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核不通过原因'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入原因'\n            }\n          ],\n          answer: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入回复'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {},\n      initialFormData: {},\n      //表格选中行数\n      selectedRows: null\n    };\n  },\n  computed: {\n    dialogFormItems() {\n      let dialogType = this.dialogType;\n      let result;\n      switch (dialogType) {\n        case 'exam':\n          result = [\n            {\n              type: 'select',\n              prop: 'code',\n              label: '审核结果：',\n              options: this.$D('SHZT').filter(item => item.value != '0'),\n              attrs: {}\n            }\n            // {\n            //   type: 'select',\n            //   prop: 'nopassKey',\n            //   hidden:\n            //     !this.dialogFormData.code || this.dialogFormData.code != '1',\n            //   label: '审核不通过原因：',\n            //   options: this.$D('BTGYY'),\n            //   attrs: {}\n            // },\n            // {\n            //   type: 'input',\n            //   prop: 'nopassReason',\n            //   hidden:\n            //     !this.dialogFormData.code ||\n            //     this.dialogFormData.code == 2 ||\n            //     !this.dialogFormData.nopassKey ||\n            //     this.dialogFormData.nopassKey != '4',\n            //   label: '自定义原因：',\n            //   attrs: {\n            //     placderholder: '15字以内',\n            //     maxlength: '15'\n            //   }\n            // }\n          ];\n          break;\n        case 'reply':\n          result = [\n            {\n              type: 'input',\n              prop: 'answer',\n              label: '回复内容：',\n              attrs: {\n                placderholder: '30字以内',\n                maxlength: 30\n              }\n            }\n          ];\n          break;\n      }\n      return result;\n    }\n  },\n  watch: {},\n  created() {\n    const { replyId, unreview } = this.$route.query;\n    this.replyId = replyId;\n    if (unreview) {\n      this.initialFormData = {\n        status: unreview\n      };\n    }\n  },\n  mounted() {},\n  methods: {\n    //重置表单并查询\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(data) {\n      const {\n        // pageNum,\n        // pageSize,\n        // content,\n        // status,\n        // isImg,\n        // isFiled,\n        editTime,\n        reviewTime\n      } = data;\n      // const params = {\n      //   current: pageNum,\n      //   size: pageSize,\n      //   startDate: (editTime && editTime[0]) || null,\n      //   endDate: (editTime && editTime[1]) || null,\n      //   startReviewTime: (reviewTime && reviewTime[0]) || null,\n      //   endReviewTime: (reviewTime && reviewTime[1]) || null,\n      //   content: content,\n      //   status: status,\n      //   isImg: isImg,\n      //   isFiled: isFiled\n      // };\n      const params = Object.assign(\n        {\n          startDate: (editTime && editTime[0]) || null,\n          endDate: (editTime && editTime[1]) || null,\n          startReviewTime: (reviewTime && reviewTime[0]) || null,\n          endReviewTime: (reviewTime && reviewTime[1]) || null\n        },\n        data,\n        { editTime: null, reviewTime: null, id: this.replyId }\n      );\n      return getMessageList(params);\n      // return new Promise(resolve => {\n      //   setTimeout(() => {\n      //     let list = [];\n      //     for (let i = 0; i < 10; i++) {\n      //       list.push({\n      //         id: i,\n      //         num: i,\n      //         typeCode: 'typeCode' + i,\n      //         typeName: '分类名称' + i,\n      //         sort: '排序值' + i,\n      //         time: '编辑时间'\n      //       });\n      //     }\n      //     resolve({\n      //       status: 200,\n      //       data: {\n      //         total: 10,\n      //         records: list\n      //       }\n      //     });\n      //   }, 500);\n      // });\n    },\n    //处理图片文件\n    getFileList(data) {\n      const list = JSON.parse(data);\n      let urlList = [];\n      for (let i = 0; i < list.length; i++) {\n        list[i].url = config.FILE_PREFIX + list[i].url;\n        urlList.push(list[i].url);\n      }\n      return {\n        list: list,\n        urlList: urlList\n      };\n    },\n    //下载文件\n    downloadFile(item) {\n      window.open(item.url);\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {};\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      // this.$refs['dialogForm'].resetFields();\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        if (this.dialogType === 'exam') {\n          examMessage(\n            Object.assign({ ids: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        } else if (this.dialogType === 'reply') {\n          replyMessage(\n            Object.assign({ id: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        }\n      });\n\n      // this.$refs['elForm'].validate().then(() => {\n      //   // 校验成功\n      //   examMessage({\n      //     ids: this.gerSelectIds(),\n      //     code: this.dialogFormData.result,\n      //     nopassReason: ''\n      //   });\n      //   this.dialogForm.loading = false;\n      //   this.$refs.bTable.ajaxGetTableDataByPage();\n      // });\n    },\n    submitDone() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      this.selectedRows = [];\n      this.initDialogFormData();\n      this.$refs.bTable.ajaxGetTableDataByPage();\n    },\n    //获取选中 Id\n    gerSelectIds() {\n      let rows = '';\n      if (!this.selectedRows) {\n        return;\n      }\n      if (Array.isArray(this.selectedRows)) {\n        for (let i = 0; i < this.selectedRows.length; i++) {\n          rows += this.selectedRows[i].id + ',';\n        }\n      } else {\n        rows = this.selectedRows.id;\n      }\n      return rows;\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      this.dialogType = 'exam';\n      this.dialogTitle = '审核';\n      this.selectedRows = rows;\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogFormData = {\n        nopassReason: ''\n      };\n      this.dialogForm.visible = true;\n    },\n    onReplyQuest(rows) {\n      this.dialogType = 'reply';\n      this.dialogTitle = '回复';\n      this.selectedRows = rows;\n      console.log('rows', rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteQuest(rows) {\n      console.log(rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.$confirm('确定要删除当前留言?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.selectedRows = rows;\n        deleteMessage({ ids: this.gerSelectIds() }).then(res => {\n          this.$refs.bTable.ajaxGetTableDataByPage();\n          this.selectedRows = [];\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        });\n      });\n    },\n    //跳转回复\n    toReply() {\n      console.log('reply');\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.reason-input {\n  width: 198px;\n}\n</style>\n"],"sourceRoot":"src/pages/school-book/views/messageManage"}]}