{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/messageManage/index.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"留言管理暂无数据\"\n      :headers=\"headers\"\n      :initialFormData=\"initialFormData\"\n      :form-items=\"formItems\"\n      :pageLimit=\"10\"\n      :ajax-get-data=\"ajaxGetData\"\n      @reset-form=\"resetForm\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :header-cell-style=\"{ 'text-align': 'center' }\"\n    >\n      <template slot=\"column|status\" slot-scope=\"{ row }\">\n        <span>{{\n          ($D('SHZT').find(item => item.value == row.status) &&\n            $D('SHZT').find(item => item.value == row.status)['label']) ||\n            '-'\n        }}</span>\n      </template>\n      <template slot=\"column|content\" slot-scope=\"{ row }\">\n        <span v-if=\"row.content\" v-html=\"row.content\"></span>\n        <span v-else>-</span>\n      </template>\n\n      <template slot=\"column|image\" slot-scope=\"{ row }\">\n        <span\n          class=\"custom-column\"\n          v-if=\"row.images && getFileList(row.images)['list'].length > 0\"\n        >\n          <el-image\n            style=\"width: 100px; height: 100px\"\n            :src=\"getFileList(row.images)['list'][0].url\"\n            :preview-src-list=\"getFileList(row.images)['urlList']\"\n            fit=\"contain\"\n          >\n          </el-image>\n          <span class=\"custom-number\">\n            {{ getFileList(row.images)['list'].length }}\n          </span>\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|file\" slot-scope=\"{ row }\">\n        <span v-if=\"row.files && getFileList(row.files)['list'].length > 0\">\n          <span\n            class=\"custom-file text-decoration\"\n            @click=\"downloadFile(getFileList(row.files)['list'][0])\"\n          >\n            <!-- <el-button\n              size=\"mini\"\n              type=\"text\"\n              @click=\"downloadFile(getFileList(row.files)['list'][0])\"\n            > -->\n            {{ getFileList(row.files)['list'][0].name }}\n            <!-- </el-button> -->\n          </span>\n          <!-- <el-popover placement=\"right\" trigger=\"click\">\n            <div\n              v-for=\"item in getFileList(row.files)['list']\"\n              :key=\"item.name + item.url\"\n            >\n              <span\n                class=\"custom-number text-decoration\"\n                @click=\"downloadFile(item)\"\n              >\n                {{ item.name }}</span\n              >\n            </div>\n            <span slot=\"reference\">\n              <span class=\"custom-number text-decoration\">\n                {{ getFileList(row.files)['list'].length }}</span\n              >\n            </span>\n          </el-popover> -->\n        </span>\n        <span v-else>\n          -\n        </span>\n      </template>\n      <template slot=\"column|commentCount\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click.stop=\"toReply(row)\">\n          {{ row.commentCount || 0 }}条回复</span\n        >\n      </template>\n      <template slot=\"column|unreviewedCommentCount\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click.stop=\"toReply(row, 'unreview')\">\n          {{ row.unreviewedCommentCount || 0 }}条回复</span\n        >\n      </template>\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            v-auth=\"['check-message']\"\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineQuest(row)\"\n            >审核</el-button\n          >\n          <el-button\n            v-auth=\"['reply-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"onReplyQuest(row, 'preview')\"\n            >回复</el-button\n          >\n          <el-button\n            v-auth=\"['delete-message']\"\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteQuest(row, 'delete')\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"dialogTitle\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"dialogForm.visible = false\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport config from './../../config';\nimport {\n  getMessageList,\n  examMessage,\n  deleteMessage,\n  replyMessage\n} from './../../api/data';\nexport default {\n  name: 'AnswerList',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n\n  data() {\n    return {\n      //图片前缀\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n          // prop: 'num'\n        },\n        {\n          label: '内容编号',\n          prop: 'contentNo'\n        },\n        {\n          label: '文章名称',\n          prop: 'title',\n          fixed: 'left'\n        },\n        {\n          label: '留言内容',\n          prop: 'content',\n          fixed: 'left',\n          'show-overflow-tooltip': true,\n          colType: 'column'\n        },\n        {\n          label: '图片',\n          prop: 'image',\n          width: '150',\n          colType: 'column'\n        },\n        {\n          label: '附件',\n          prop: 'file',\n          width: '150',\n          colType: 'column'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '回复数',\n          prop: 'commentCount',\n          colType: 'column'\n        },\n        {\n          label: '回复待审核数',\n          prop: 'unreviewedCommentCount',\n          colType: 'column'\n        },\n        {\n          label: '管理员回复',\n          prop: 'replyContent'\n        },\n        {\n          label: '编辑时间',\n          width: '160',\n          prop: 'createTime',\n          'value-format': 'yyyy-MM-dd'\n        },\n        {\n          label: '审核时间',\n          width: '160',\n          prop: 'reviewTime'\n        },\n        {\n          label: '回复时间',\n          width: '160',\n          prop: 'adminAnswerTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          colType: 'column'\n        },\n        {\n          label: '操作',\n          width: '120',\n          fixed: 'right',\n          // colType: 'btns',\n          slotName: 'opera',\n          colType: 'column',\n          btns: []\n          // btns: [\n          //   {\n          //     label: '审核',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onExamineQuest\n          //   },\n          //   {\n          //     label: '回复',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.onReplyQuest\n          //   },\n          //   {\n          //     label: '删除',\n          //     type: 'text',\n          //     size: 'mini',\n          //     click: this.deleteQuest\n          //   }\n          // ]\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'input',\n          prop: 'title',\n          label: '文章名称：',\n          attrs: [\n            {\n              placeholder: '文章名称'\n            }\n          ]\n        },\n        {\n          type: 'input',\n          prop: 'content',\n          label: '留言内容：',\n          attrs: [\n            {\n              placeholder: '留言内容'\n            }\n          ]\n        },\n        {\n          type: 'select',\n          prop: 'isImg',\n          label: '是否有图片：',\n          options: [\n            { label: '是', value: true },\n            { label: '否', value: false }\n          ]\n        },\n        {\n          type: 'select',\n          prop: 'isFiled',\n          label: '是否有附件：',\n          options: [\n            { label: '是', value: true },\n            { label: '否', value: false }\n          ]\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'editTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd',\n            // TODO 时间格式\n            'start-placeholder': '开始日期',\n            'end-placeholder': '结束日期'\n          }\n        }\n      ],\n      dialogTitle: '',\n      dialogType: '',\n      initialFormData: {},\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineQuest,\n          hidden: () => !this.$has(['check-message-batch'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteQuest,\n          hidden: () => !this.$has(['delete-message-batch'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '150px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核结果'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请选择审核不通过原因'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入原因'\n            }\n          ],\n          answer: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '请输入回复'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {},\n      //表格选中行数\n      selectedRows: null\n    };\n  },\n  computed: {\n    dialogFormItems() {\n      let dialogType = this.dialogType;\n      let result;\n      switch (dialogType) {\n        case 'exam':\n          result = [\n            {\n              type: 'select',\n              prop: 'code',\n              label: '审核结果：',\n              options: this.$D('SHZT').filter(item => item.value != '0'),\n              attrs: {}\n            }\n            // {\n            //   type: 'select',\n            //   prop: 'nopassKey',\n            //   hidden:\n            //     !this.dialogFormData.code || this.dialogFormData.code != '1',\n            //   label: '审核不通过原因：',\n            //   options: this.$D('BTGYY'),\n            //   attrs: {}\n            // },\n            // {\n            //   type: 'input',\n            //   prop: 'nopassReason',\n            //   hidden:\n            //     !this.dialogFormData.code ||\n            //     this.dialogFormData.code == 2 ||\n            //     !this.dialogFormData.nopassKey ||\n            //     this.dialogFormData.nopassKey != '4',\n            //   label: '自定义原因：',\n            //   attrs: {\n            //     placderholder: '15字以内',\n            //     maxlength: '15'\n            //   }\n            // }\n          ];\n          break;\n        case 'reply':\n          result = [\n            {\n              type: 'input',\n              prop: 'answer',\n              label: '回复内容：',\n              attrs: {\n                placderholder: '30字以内',\n                maxlength: '30'\n              }\n            }\n          ];\n          break;\n      }\n      return result;\n    }\n  },\n  watch: {},\n  created() {\n    const { title, catalogId } = this.$route.query;\n    this.catalogId = catalogId;\n    if (title) {\n      this.initialFormData = {\n        title: title\n      };\n    }\n  },\n  mounted() {},\n  methods: {\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(data) {\n      const {\n        // pageNum,\n        // pageSize,\n        // content,\n        // status,\n        // isImg,\n        // isFiled,\n        editTime,\n        reviewTime\n      } = data;\n      // const params = {\n      //   current: pageNum,\n      //   size: pageSize,\n      //   startDate: (editTime && editTime[0]) || null,\n      //   endDate: (editTime && editTime[1]) || null,\n      //   startReviewTime: (reviewTime && reviewTime[0]) || null,\n      //   endReviewTime: (reviewTime && reviewTime[1]) || null,\n      //   content: content,\n      //   status: status,\n      //   isImg: isImg,\n      //   isFiled: isFiled\n      // };\n      const params = Object.assign(\n        {\n          startDate: (editTime && editTime[0]) || null,\n          endDate: (editTime && editTime[1]) || null,\n          startReviewTime: (reviewTime && reviewTime[0]) || null,\n          endReviewTime: (reviewTime && reviewTime[1]) || null\n        },\n        data,\n        { editTime: null, reviewTime: null, catalogId: this.catalogId }\n      );\n      return getMessageList(params);\n      // return new Promise(resolve => {\n      //   setTimeout(() => {\n      //     let list = [];\n      //     for (let i = 0; i < 10; i++) {\n      //       list.push({\n      //         id: i,\n      //         num: i,\n      //         typeCode: 'typeCode' + i,\n      //         typeName: '分类名称' + i,\n      //         sort: '排序值' + i,\n      //         time: '编辑时间'\n      //       });\n      //     }\n      //     resolve({\n      //       status: 200,\n      //       data: {\n      //         total: 10,\n      //         records: list\n      //       }\n      //     });\n      //   }, 500);\n      // });\n    },\n    //处理图片文件\n    getFileList(data) {\n      const list = JSON.parse(data);\n      let urlList = [];\n      for (let i = 0; i < list.length; i++) {\n        list[i].url = config.FILE_PREFIX + list[i].url;\n        urlList.push(list[i].url);\n      }\n      return {\n        list: list,\n        urlList: urlList\n      };\n    },\n    //下载文件\n    downloadFile(item) {\n      window.open(item.url);\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {};\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      // this.initDialogFormData();\n      this.dialogFormData = {};\n      this.$refs['elForm'] && this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        if (this.dialogType === 'exam') {\n          examMessage(\n            Object.assign({ ids: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        } else if (this.dialogType === 'reply') {\n          replyMessage(\n            Object.assign({ id: this.gerSelectIds() }, this.dialogFormData)\n          ).then(res => {\n            this.submitDone();\n          });\n        }\n      });\n\n      // this.$refs['elForm'].validate().then(() => {\n      //   // 校验成功\n      //   examMessage({\n      //     ids: this.gerSelectIds(),\n      //     code: this.dialogFormData.result,\n      //     nopassReason: ''\n      //   });\n      //   this.dialogForm.loading = false;\n      //   this.$refs.bTable.ajaxGetTableDataByPage();\n      // });\n    },\n    submitDone() {\n      this.dialogForm.visible = false;\n      this.dialogForm.loading = false;\n      this.selectedRows = [];\n      this.initDialogFormData();\n      this.$refs.bTable.ajaxGetTableDataByPage();\n    },\n    //获取选中 Id\n    gerSelectIds() {\n      let rows = '';\n      if (!this.selectedRows) {\n        return;\n      }\n      if (Array.isArray(this.selectedRows)) {\n        for (let i = 0; i < this.selectedRows.length; i++) {\n          rows += this.selectedRows[i].id + ',';\n        }\n      } else {\n        rows = this.selectedRows.id;\n      }\n      return rows;\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      this.dialogType = 'exam';\n      this.dialogTitle = '审核';\n      this.selectedRows = rows;\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogFormData = {\n        nopassReason: ''\n      };\n      this.dialogForm.visible = true;\n    },\n    onReplyQuest(rows) {\n      this.dialogType = 'reply';\n      this.dialogTitle = '回复';\n      this.selectedRows = rows;\n      console.log('rows', rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteQuest(rows) {\n      console.log(rows);\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个留言');\n        return;\n      }\n      this.$confirm('确定要删除当前留言?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.selectedRows = rows;\n        deleteMessage({ ids: this.gerSelectIds() }).then(res => {\n          this.$refs.bTable.ajaxGetTableDataByPage();\n          this.selectedRows = [];\n          this.$message({\n            type: 'success',\n            message: '删除成功!'\n          });\n        });\n      });\n    },\n    //跳转回复\n    toReply(row, type) {\n      let query = {\n        replyId: row.id\n      };\n      if (type == 'unreview') {\n        query.unreview = '0';\n      }\n      this.$router.push({\n        path: '/messageReply',\n        query: query\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.reason-input {\n  width: 198px;\n}\n.custom-file {\n  color: #409eff;\n  cursor: pointer;\n}\n.custom-number {\n  color: #409eff;\n  margin-left: 10px;\n  text-decoration: underline;\n}\n.custom-column {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.text-decoration {\n  color: #409eff;\n  cursor: pointer;\n  text-decoration: underline;\n}\n</style>\n"],"sourceRoot":"src/pages/school-book/views/messageManage"}]}