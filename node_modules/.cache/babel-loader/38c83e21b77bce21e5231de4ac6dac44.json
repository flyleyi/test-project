{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool/store/modules/auth.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool/store/modules/auth.js","mtime":1645176309696},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Z1eXVleWkvRGVza3RvcC95anktcHJvamVjdHMvbXVsdGktcHJvamVjdC9tdXRpbHdhcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IHsgZ2V0TWVudUxpc3QsIGdldEF1dGhMaXN0IGFzIF9nZXRBdXRoTGlzdCB9IGZyb20gJy4uLy4uL2FwaS9hdXRoL2luZGV4JzsKaW1wb3J0IHV0aWxzIGZyb20gJ0AvcGx1Z2lucy9jb21tb24vdXRpbHMnOwppbXBvcnQgeyByb3V0ZXMsIGFzeW5jUm91dGVzIH0gZnJvbSAnLi4vLi4vcm91dGVyL2luZGV4JzsKdmFyIHN0YXRlID0gewogIC8vIOi3r+eUsemFjee9rgogIHJvdXRlczogW10sCiAgLy8g6I+c5Y2V5YiX6KGoCiAgbWVudUxpc3Q6IFtdLAogIC8vIOiPnOWNleagkQogIG1lbnVUcmVlOiBbXSwKICAvLyDmjInpkq7mnYPpmZDliJfooagKICBhdXRoTGlzdDogW10KfTsKLyoqCiAqIOiPnOWNleWIl+ihqOi9rOaNouagkeWIl+ihqAogKi8KCnZhciBtZW51TGlzdENvbnZlcnRNZW51VHJlZSA9IGZ1bmN0aW9uIG1lbnVMaXN0Q29udmVydE1lbnVUcmVlKG1lbnVMaXN0KSB7CiAgcmV0dXJuIHV0aWxzLmxpc3RDb252ZXJ0VHJlZShtZW51TGlzdCwgJ21lbnVJZCcsICdwYXJlbnRNZW51SWQnLCB0cnVlKTsKfTsKLyoqCiAqIOaOkuW6j+iPnOWNleagkQogKiBAcGFyYW0ge0FycmF5fSBtZW51VHJlZSDoj5zljZXmoJEKICovCgoKdmFyIHNvcnRNZW51VHJlZSA9IGZ1bmN0aW9uIHNvcnRNZW51VHJlZShtZW51VHJlZSkgewogIHZhciBzb3J0ID0gZnVuY3Rpb24gc29ydChsaXN0KSB7CiAgICBsaXN0LnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgcmV0dXJuIGEub3JkZXJObyAtIGIub3JkZXJObzsKICAgIH0pOwogICAgbGlzdC5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUuY2hpbGRyZW4gJiYgdmFsdWUuY2hpbGRyZW4ubGVuZ3RoICYmIHNvcnQodmFsdWUuY2hpbGRyZW4pOwogICAgfSk7CiAgICByZXR1cm4gbGlzdDsKICB9OwoKICByZXR1cm4gc29ydChtZW51VHJlZSk7Cn07Ci8qKgogKiDmoJHlnovmlbDmja7ovazliJfooagKICogQHBhcmFtIHsqfSB0cmVlIOagkeWei+aVsOaNrgogKiBAcGFyYW0geyp9IGNoaWxkcmVuS2V5IOWtkOiKgueCueWIl+ihqOmUrgogKi8KCgp2YXIgdHJlZUNvbnZlcnRMaXN0ID0gZnVuY3Rpb24gdHJlZUNvbnZlcnRMaXN0KHRyZWUpIHsKICB2YXIgY2hpbGRyZW5LZXkgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICdjaGlsZHJlbic7CiAgaWYgKCFBcnJheS5pc0FycmF5KHRyZWUpKSByZXR1cm4gW107CiAgdmFyIGxpc3QgPSBbXTsKCiAgdmFyIGZuID0gZnVuY3Rpb24gZm4oZGF0YSkgewogICAgdmFyIHBhcmVudE1lbnVJZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogLTE7CiAgICBsaXN0ID0gbGlzdC5jb25jYXQoZGF0YS5zbGljZSgwKSk7CiAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgdmFyIGNoaWxkcmVuID0gaXRlbVtjaGlsZHJlbktleV07CiAgICAgIGl0ZW0udXJsID0gaXRlbS51cmwgfHwgaXRlbS5wYXRoOwogICAgICBpdGVtLm1ldGEgPSBpdGVtLm1ldGEgfHwge307CiAgICAgIGl0ZW0ubWVudU5hbWUgPSBpdGVtLm1lbnVOYW1lIHx8IGl0ZW0ubWV0YS50aXRsZTsKICAgICAgaXRlbS5tZW51SWQgPSBpdGVtLm1lbnVJZCB8fCBpdGVtLnBhdGg7CiAgICAgIGl0ZW0ucGFyZW50TWVudUlkID0gaXRlbS5wYXJlbnRNZW51SWQgfHwgcGFyZW50TWVudUlkOwoKICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7CiAgICAgICAgZm4oY2hpbGRyZW4sIGl0ZW0ubWVudUlkKTsKICAgICAgfQogICAgfSk7CiAgfTsKCiAgZm4odHJlZSk7CiAgcmV0dXJuIGxpc3Q7Cn07Cgp2YXIgbXV0YXRpb25zID0gewogIFNFVF9ST1VURVM6IGZ1bmN0aW9uIFNFVF9ST1VURVMoc3RhdGUsIHJvdXRlcykgewogICAgc3RhdGUucm91dGVzID0gcm91dGVzOwogIH0sCiAgU0VUX01FTlVfTElTVDogZnVuY3Rpb24gU0VUX01FTlVfTElTVChzdGF0ZSwgbWVudUxpc3QpIHsKICAgIHN0YXRlLm1lbnVMaXN0ID0gbWVudUxpc3Q7CiAgfSwKICBTRVRfTUVOVV9UUkVFOiBmdW5jdGlvbiBTRVRfTUVOVV9UUkVFKHN0YXRlLCBtZW51VHJlZSkgewogICAgc3RhdGUubWVudVRyZWUgPSBtZW51VHJlZTsKICB9LAogIFNFVF9BVVRIX0xJU1Q6IGZ1bmN0aW9uIFNFVF9BVVRIX0xJU1Qoc3RhdGUsIGF1dGhMaXN0KSB7CiAgICBzdGF0ZS5hdXRoTGlzdCA9IGF1dGhMaXN0OwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLyoqCiAgICog6I635Y+W6I+c5Y2V5YiX6KGoCiAgICovCiAgZ2V0TWVudUxpc3Q6IGZ1bmN0aW9uIGdldE1lbnVMaXN0KF9yZWYpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIC8vIHJldHVybiBnZXRNZW51TGlzdCgpLnRoZW4oKHsgZGF0YSB9KSA9PiB7CiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgIC8vIOmmlumhtei3r+eUsemFjee9rgogICAgICB2YXIgaG9tZVJvdXRlID0gcm91dGVzLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5wYXRoID09PSAnLyc7CiAgICAgIH0pOyAvLyDmiZPlubPot6/nlLHmlbDmja4KCiAgICAgIHZhciByb3V0ZUxpc3QgPSB0cmVlQ29udmVydExpc3QoW2hvbWVSb3V0ZS5jaGlsZHJlblswXV0uY29uY2F0KGFzeW5jUm91dGVzKSk7CiAgICAgIHZhciBkYXRhID0gcm91dGVMaXN0OwogICAgICB2YXIgbWVudVRyZWUgPSBtZW51TGlzdENvbnZlcnRNZW51VHJlZShyb3V0ZUxpc3QpOyAvLyDoj5zljZXliJfooajovazoj5zljZXmoJEKCiAgICAgIG1lbnVUcmVlID0gc29ydE1lbnVUcmVlKG1lbnVUcmVlKTsgLy8g6I+c5Y2V5o6S5bqPCgogICAgICBjb21taXQoJ1NFVF9NRU5VX0xJU1QnLCBkYXRhKTsKICAgICAgY29tbWl0KCdTRVRfTUVOVV9UUkVFJywgbWVudVRyZWUpOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0pOwogIH0sCgogIC8qKgogICAqIOiOt+WPluaMiemSruWIl+ihqAogICAqLwogIGdldEF1dGhMaXN0OiBmdW5jdGlvbiBnZXRBdXRoTGlzdChfcmVmMikgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIHJldHVybiBfZ2V0QXV0aExpc3QoKS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICB2YXIgZGF0YSA9IF9yZWYzLmRhdGE7CiAgICAgIHZhciBhdXRoTGlzdCA9IGRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0gJiYgaXRlbS5pdGZDb2RlOwogICAgICB9KTsKICAgICAgY29tbWl0KCdTRVRfQVVUSF9MSVNUJywgYXV0aExpc3QpOwogICAgICByZXR1cm4gZGF0YTsKICAgIH0pOwogIH0sCgogIC8qKgogICAqIOiOt+WPluadg+mZkOaVsOaNrgogICAqLwogIGdldEF1dGhEYXRhOiBmdW5jdGlvbiBnZXRBdXRoRGF0YShfcmVmNCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBkaXNwYXRjaCwgbWVudUxpc3Q7CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgZGlzcGF0Y2ggPSBfcmVmNC5kaXNwYXRjaDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2dldE1lbnVMaXN0Jyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgbWVudUxpc3QgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHsKICAgICAgICAgICAgICAgIG1lbnVMaXN0OiBtZW51TGlzdAogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMKfTs="},null]}