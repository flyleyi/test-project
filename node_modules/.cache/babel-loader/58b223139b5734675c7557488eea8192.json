{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/Collection/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/logistics-data/views/Collection/index.vue","mtime":1645176309769},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 角色管理 -->\r\n  <div class=\"app-container\">\r\n    <b-table\r\n      class=\"b-table\"\r\n      ref=\"bTable\"\r\n      loading\r\n      :headers=\"columns\"\r\n      :form-items=\"formItems\"\r\n      :ajax-get-data=\"ajaxGetRoleData\"\r\n      :toolbars=\"toolbars\"\r\n      :showRefresh=\"false\"\r\n      :showColumn=\"false\"\r\n    >\r\n      <!--表格标题-->\r\n      <template v-slot:table-title>\r\n        <el-tabs type=\"card\" value=\"0\" class=\"table-title-tabs\">\r\n          <el-tab-pane :label=\"getParams().title\" name=\"0\"></el-tab-pane>\r\n        </el-tabs>\r\n      </template>\r\n      <!--导入按钮 -->\r\n      <template v-slot:toolbars|upload>\r\n        <el-upload\r\n          style=\"display: inline-block;margin-right: 10px;\"\r\n          class=\"upload-demo\"\r\n          v-bind=\"tool.attrs\"\r\n          v-on=\"tool.events\"\r\n          :key=\"tool.type\"\r\n        >\r\n          <el-button size=\"small\" type=\"primary\">{{ tool.label }}</el-button>\r\n        </el-upload>\r\n      </template>\r\n    </b-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Select,\r\n  Option,\r\n  Input,\r\n  Form,\r\n  FormItem,\r\n  Tabs,\r\n  TabPane\r\n} from 'element-ui';\r\nimport BTable from '@/components/business/BTable';\r\nimport axios from '@/plugins/axios';\r\nimport Utils from '@/components/common/CDynamicForm/components/utils';\r\nimport API_HOST from '@/plugins/common/api';\r\nimport { getToken } from '@/plugins/core/auth';\r\n\r\nfunction mergeDefault() {\r\n  var f = {},\r\n    m = arguments.length,\r\n    o = arguments[m - 1],\r\n    b = 0,\r\n    k,\r\n    h,\r\n    d,\r\n    g;\r\n  if (typeof o == 'boolean') {\r\n    b++;\r\n    h = o;\r\n  }\r\n  if (Object.prototype.toString.call(arguments[0]) === '[object Array]') {\r\n    d = true;\r\n    g = arguments[0];\r\n    k = arguments[1];\r\n  } else {\r\n    k = arguments[0] || {};\r\n  }\r\n  for (var c = 0; c < m - b; c++) {\r\n    var a = arguments[c];\r\n    for (var e in d ? g : k) {\r\n      var n = d ? g[e] : e;\r\n      if (a && a[n] !== undefined) {\r\n        h ? (f[n] = a[n]) : (k[n] = a[n]);\r\n      } else {\r\n        h && c == 0 && (f[n] = k[n]);\r\n      }\r\n    }\r\n  }\r\n  return h ? f : k;\r\n}\r\n\r\nexport default {\r\n  name: 'DataCollection',\r\n  // 注册组件\r\n  components: {\r\n    [Dialog.name]: Dialog,\r\n    [Button.name]: Button,\r\n    [Select.name]: Select,\r\n    [Option.name]: Option,\r\n    [Input.name]: Input,\r\n    [Form.name]: Form,\r\n    [FormItem.name]: FormItem,\r\n    [Tabs.name]: Tabs,\r\n    [TabPane.name]: TabPane,\r\n    BTable\r\n  },\r\n  props: {\r\n    /**\r\n     * 服务器类型\r\n     */\r\n    serverType: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  // 定义数据\r\n  data() {\r\n    // 权限校验方法\r\n    let $has = this.$has;\r\n    typeof $has !== 'function' && ($has = () => true);\r\n    return {\r\n      $has,\r\n      tree: [] //单位树\r\n    };\r\n  },\r\n  // 计算属性\r\n  computed: {\r\n    tool() {\r\n      var type = this.$route.params.type;\r\n      return {\r\n        label: '导入',\r\n        type: 'slot',\r\n        slotName: 'upload',\r\n        //click: this.addtableRole,\r\n        auth: ['data-import' + type],\r\n        attrs: {\r\n          showFileList: false,\r\n          accept: '.xls,.xlsx',\r\n          //action:\"https://jsonplaceholder.typicode.com/posts/\"\r\n          action:\r\n            (API_HOST[this.serverType] || '') +\r\n            `/${this.getParams().pathName}/import/pre`,\r\n          headers: { Authorization: getToken() || '' },\r\n          onSuccess: (response, file, fileList) => {\r\n            console.log('success', response, file, fileList);\r\n\r\n            this._$message && this._$message.close();\r\n            if (response.status != 200) {\r\n              return this.$message({\r\n                message: response.message || '导入失败',\r\n                type: 'error'\r\n              });\r\n            }\r\n            const { state, noPassReason, fileId } = response.data;\r\n            if (state === 0 || state == '0') {\r\n              //检查通过没有问题已经插入\r\n              this.$message({\r\n                message: '导入成功',\r\n                type: 'success'\r\n              });\r\n              this.$refs.bTable.ajaxGetTableDataByPage();\r\n            } else if (state == 1) {\r\n              //检查通过有重复需用户前台确认\r\n              this.importSure(fileId, noPassReason);\r\n            } else {\r\n              //-1检查不通过 -2有表格正在处理需要等待\r\n              this.$message({\r\n                dangerouslyUseHTMLString: true,\r\n                message: noPassReason,\r\n                type: 'error'\r\n              });\r\n            }\r\n          },\r\n          onError: (err, file, fileList) => {\r\n            //console.dir(err);\r\n            //console.log('error',err, file, fileList);\r\n\r\n            this._$message && this._$message.close();\r\n            // 关键处理，得用JSON.parse来解析error里面的内容\r\n            // 其中message为后端返回的错误信息提示\r\n            const result = JSON.parse(err.message);\r\n            // 导入Excel失败提示信息\r\n            this.$message({\r\n              message: '导入失败:' + result.message,\r\n              type: 'error'\r\n            });\r\n          },\r\n          onProgress: (event, file, fileList) => {\r\n            console.log('progress', event, file, fileList);\r\n            //this._$message&&this._$message.close();\r\n            this._$message = this.$message({\r\n              message: `导入进度${event.percent.toFixed(0)}%`,\r\n              type: 'success'\r\n            });\r\n          },\r\n          beforeUpload: file => {\r\n            console.log('before', file);\r\n            if (!file.name.match(/\\.xlsx?$/)) {\r\n              this.$message({\r\n                type: 'warning',\r\n                message: '只能导入xls或xlsx文件'\r\n              });\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n      };\r\n    },\r\n    /**\r\n     * 表单列\r\n     */\r\n    columns() {\r\n      var type = this.$route.params.type;\r\n      let btns = [\r\n        // {\r\n        //   label: '编辑',\r\n        //   click: this.editTableRole,\r\n        //   auth: ['role-edit'],\r\n        //   size: 'mini',\r\n        //   type: 'primary'\r\n        // },\r\n        {\r\n          label: '删除',\r\n          click: row => this.del(row),\r\n          auth: ['data-delete' + type],\r\n          size: 'mini',\r\n          type: 'primary'\r\n        }\r\n      ];\r\n      console.log(this);\r\n      var arr,\r\n        formatter = function(row, col, value) {\r\n          return value; //不进行转换\r\n          // return typeof value == 'number'\r\n          //   ? (value + '').replace(/^(.{4})/, '$1-')\r\n          //   : value;\r\n        },\r\n        left = [\r\n          {\r\n            label: '月份',\r\n            prop: 'monthInt',\r\n            formatter,\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部编码',\r\n            prop: 'departCode',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部名称',\r\n            prop: 'departName',\r\n            fixed: 'left'\r\n          }\r\n        ],\r\n        right = [\r\n          {\r\n            label: '上传人',\r\n            prop: 'uploader',\r\n            //colType: 'column',\r\n            formatter(row) {\r\n              return row.uploaderName + '(' + row.uploader + ')';\r\n            }\r\n          },\r\n          {\r\n            label: '上传时间',\r\n            prop: 'uploadTime'\r\n          }\r\n        ];\r\n      if (type == 1) {\r\n        //人力成本类     1\r\n        arr = [\r\n          {\r\n            label: '月份',\r\n            prop: 'monthInt',\r\n            formatter,\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '序号',\r\n            prop: 'sort',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部编码',\r\n            prop: 'facultyCode',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '学部名称',\r\n            prop: 'facultyName'\r\n          },\r\n          {\r\n            label: '部门2',\r\n            prop: 'department2'\r\n          },\r\n          {\r\n            label: '部门3',\r\n            prop: 'department3'\r\n          },\r\n          {\r\n            label: '工号',\r\n            prop: 'staffCode'\r\n          },\r\n          {\r\n            label: '姓名',\r\n            prop: 'staffName'\r\n          },\r\n          {\r\n            label: '岗位',\r\n            prop: 'position'\r\n          },\r\n          {\r\n            label: '出生日期',\r\n            prop: 'birthDate'\r\n          },\r\n          {\r\n            label: '性别',\r\n            prop: 'gender'\r\n          },\r\n          {\r\n            label: '籍贯',\r\n            prop: 'nativePlace'\r\n          },\r\n          {\r\n            label: '最高学历',\r\n            prop: 'education'\r\n          },\r\n          {\r\n            label: '当前加入海亮时间',\r\n            prop: 'joinTime'\r\n          },\r\n          {\r\n            label: '发薪单位',\r\n            prop: 'payUnit'\r\n          },\r\n          {\r\n            label: '成本中心',\r\n            prop: 'costCenter'\r\n          },\r\n          {\r\n            label: '档案工资',\r\n            prop: 'fileSalary'\r\n          },\r\n          {\r\n            label: '校龄工资',\r\n            prop: 'schoolAgeSalary'\r\n          },\r\n          {\r\n            label: '职务工资',\r\n            prop: 'jobSalary'\r\n          },\r\n          {\r\n            label: '岗位考核奖',\r\n            prop: 'postExamine'\r\n          },\r\n          {\r\n            label: '全勤考核奖',\r\n            prop: 'fullExamine'\r\n          },\r\n          {\r\n            label: '绩效考核奖',\r\n            prop: 'meritsExamine'\r\n          },\r\n          {\r\n            label: '值班津贴',\r\n            prop: 'dutySubsidy'\r\n          },\r\n          {\r\n            label: '通讯补贴',\r\n            prop: 'reportSubsidy'\r\n          },\r\n          {\r\n            label: '特岗补贴',\r\n            prop: 'specialPostSubsidy'\r\n          },\r\n          {\r\n            label: '其它',\r\n            prop: 'otherMoney'\r\n          },\r\n          {\r\n            label: '应发工资总和',\r\n            prop: 'totalSalary'\r\n          },\r\n          ...right\r\n        ];\r\n      } else if (type == 2) {\r\n        //车队类   1\r\n        arr = [\r\n          {\r\n            label: '月份',\r\n            prop: 'monthInt',\r\n            formatter,\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '车辆编号',\r\n            prop: 'busCode',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '校车类型',\r\n            prop: 'busType',\r\n            fixed: 'left'\r\n          },\r\n          {\r\n            label: '座位数',\r\n            prop: 'placeNum'\r\n          },\r\n          {\r\n            label: '百公里油耗',\r\n            prop: 'oilConsume'\r\n          },\r\n          {\r\n            label: '修理费',\r\n            prop: 'repairCost'\r\n          },\r\n          {\r\n            label: '轮胎',\r\n            prop: 'tyreCost'\r\n          },\r\n          {\r\n            label: '车辆保险',\r\n            prop: 'insureCost'\r\n          },\r\n          {\r\n            label: '监控GPS/网',\r\n            prop: 'monitorCost'\r\n          },\r\n          {\r\n            label: '基本工资',\r\n            prop: 'baseSalary'\r\n          },\r\n          {\r\n            label: '临时出车补贴',\r\n            prop: 'temSubsidy'\r\n          },\r\n          {\r\n            label: '里程补贴',\r\n            prop: 'mileageSubsidy'\r\n          },\r\n          {\r\n            label: '半(全)年奖金',\r\n            prop: 'bonus'\r\n          },\r\n          {\r\n            label: '驾驶员工资',\r\n            prop: 'driverSalary'\r\n          },\r\n          {\r\n            label: '里程数',\r\n            prop: 'mileageNum'\r\n          },\r\n          {\r\n            label: '每月耗油',\r\n            prop: 'monthOilConsume'\r\n          },\r\n          {\r\n            label: '单价',\r\n            prop: 'unitPrice'\r\n          },\r\n          {\r\n            label: '油费',\r\n            prop: 'oilExpense'\r\n          },\r\n          {\r\n            label: '差旅费',\r\n            prop: 'travelExpense'\r\n          },\r\n          {\r\n            label: '过路费',\r\n            prop: 'passExpense'\r\n          },\r\n          ...right\r\n        ];\r\n      } else if (type == 3) {\r\n        //接送类   1\r\n        arr = [\r\n          ...left,\r\n          {\r\n            label: '接送费用',\r\n            prop: 'transferCost'\r\n          },\r\n          ...right\r\n        ];\r\n      } else if (type == 4) {\r\n        //物资类   1\r\n        arr = [\r\n          ...left,\r\n          {\r\n            label: '总费用',\r\n            prop: 'totalCost'\r\n          },\r\n          {\r\n            label: '校服领用',\r\n            prop: 'schoolUniform'\r\n          },\r\n          ...right\r\n        ];\r\n      } else if (type == 5) {\r\n        //维修类   1\r\n        arr = [\r\n          ...left,\r\n          {\r\n            label: '总费用',\r\n            prop: 'totalCost'\r\n          },\r\n          ...right\r\n        ];\r\n      } else {\r\n        //主数据类   6           1\r\n        arr = [\r\n          ...left,\r\n          {\r\n            label: '教师人数',\r\n            prop: 'teacherNum'\r\n          },\r\n          {\r\n            label: '学生人数',\r\n            prop: 'studentNum'\r\n          },\r\n          {\r\n            label: '职工人数',\r\n            prop: 'staffNum'\r\n          },\r\n          {\r\n            label: '接送学生人数',\r\n            prop: 'transferNum'\r\n          },\r\n          {\r\n            label: '在校天数',\r\n            prop: 'schoolDayNum'\r\n          },\r\n          ...right\r\n        ];\r\n      }\r\n      return arr.concat([\r\n        // {\r\n        //   label: '角色状态',\r\n        //   prop: 'isShow',\r\n        //   formatter(row, column, cellValue) {\r\n        //     return cellValue == '0' ? '启用' : '禁用';\r\n        //   }\r\n        // },\r\n        {\r\n          label: '操作',\r\n          colType: 'btns',\r\n          btns: btns.filter(item => this.$has(item.auth)),\r\n          width: '86px',\r\n          fixed: 'right',\r\n          align: 'center'\r\n        }\r\n      ]);\r\n    },\r\n    /**\r\n     * 表单项\r\n     */\r\n    formItems() {\r\n      var type = this.$route.params.type;\r\n      return [\r\n        {\r\n          type: 'datePicker',\r\n          prop: 'month',\r\n          label: '月份：',\r\n          attrs: {\r\n            type: 'month',\r\n            format: 'yyyy-MM',\r\n            valueFormat: 'yyyyMM',\r\n            pickerOptions: {\r\n              disabledDate(time) {\r\n                //禁用未来时间\r\n                return time.getTime() > Date.now();\r\n              }\r\n            }\r\n          }\r\n        },\r\n        {\r\n          hidden: type == 1, //人力成本类 隐藏单位\r\n          type: 'cascader',\r\n          prop: 'schoolStageCode',\r\n          label: '单位：',\r\n          attrs: {\r\n            //showCheckbox:true,\r\n            cascader: true,\r\n            settings: {\r\n              data: { code: 'value', name: 'label' },\r\n              treeNodes: 'children'\r\n            },\r\n            tree: this.tree\r\n            // getData: () => {\r\n            //   return this.getTreeData();\r\n            // }\r\n          }\r\n        },\r\n        {\r\n          type: 'input',\r\n          prop: 'uploader',\r\n          label: '上传人：'\r\n        }\r\n        // {\r\n        //   type: 'select',\r\n        //   options: [\r\n        //     {\r\n        //       value: '0',\r\n        //       label: '启用'\r\n        //     },\r\n        //     {\r\n        //       value: '1',\r\n        //       label: '禁用'\r\n        //     }\r\n        //   ],\r\n        //   prop: 'isShow',\r\n        //   label: '所属单位：'\r\n        // }\r\n      ];\r\n    },\r\n    /**\r\n     * 工具栏\r\n     */\r\n    toolbars() {\r\n      var type = this.$route.params.type;\r\n      let toolbars = [\r\n        // {\r\n        //   label: '新增',\r\n        //   click: this.addtableRole,\r\n        //   auth: ['role-add']\r\n        // }\r\n        this.tool,\r\n        {\r\n          label: '下载模板',\r\n          click: this.download,\r\n          auth: ['data-download' + type]\r\n        }\r\n      ];\r\n      return toolbars.filter(item => this.$has(item.auth));\r\n    }\r\n  },\r\n  // 侦听器\r\n  watch: {},\r\n  // 创建完成钩子\r\n  created() {\r\n    this.getTreeData();\r\n  },\r\n  // 挂在完成钩子\r\n  mounted() {},\r\n  // 方法定义\r\n  methods: {\r\n    getParams(type) {\r\n      type = type || this.$route.params.type;\r\n      type = type * 1;\r\n      switch (type) {\r\n        case 1:\r\n          return { title: '人力成本明细表', pathName: 'hrCost' };\r\n        case 2:\r\n          return { title: '车队费用', pathName: 'busFleet' };\r\n        case 3:\r\n          return { title: '接送费用', pathName: 'transfer' };\r\n        case 4:\r\n          return { title: '各学部物资领用对比表', pathName: 'material' };\r\n        case 5:\r\n          return { title: '各学部维修费用对比表', pathName: 'repair' };\r\n        default:\r\n          return { title: '学校主数据', pathName: 'schoolData' };\r\n      }\r\n    },\r\n    formDataHandler(formData) {\r\n      return {\r\n        ...formData,\r\n        //所属单位\r\n        schoolStageCode: formData.schoolStageCode\r\n          ? formData.schoolStageCode[formData.schoolStageCode.length - 1]\r\n          : ''\r\n      };\r\n    },\r\n    getTreeData() {\r\n      return axios(\r\n        {\r\n          url: '/department/tree4School'\r\n        },\r\n        this.serverType\r\n      ).then(res => {\r\n        this.tree = Utils.deleteEmpty(res.data || []);\r\n        return this.tree;\r\n      });\r\n    },\r\n    ajaxGetRoleData(params) {\r\n      params = this.formDataHandler(params);\r\n      return axios(\r\n        {\r\n          method: 'GET',\r\n          url: '/' + this.getParams().pathName + '/page',\r\n          params\r\n        },\r\n        this.serverType\r\n      );\r\n    },\r\n    del({ id }) {\r\n      //删除\r\n      this.$confirm('是否删除该数据?', '删除确认', {\r\n        customClass: 'box-danger',\r\n        center: true\r\n      })\r\n        .then(() => {\r\n          axios(\r\n            {\r\n              method: 'POST',\r\n              url: `/${this.getParams().pathName}/delete/${id}`\r\n            },\r\n            this.serverType\r\n          ).then(({ data }) => {\r\n            this.$message({\r\n              type: 'success',\r\n              message: '删除成功!'\r\n            });\r\n            this.$refs.bTable.ajaxGetTableDataByPage();\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消删除'\r\n          });\r\n        });\r\n    },\r\n    importSure(fileId, noPassReason) {\r\n      //导入二次确认\r\n      var core = processType => {\r\n        axios(\r\n          {\r\n            method: 'POST',\r\n            url: `/${\r\n              this.getParams().pathName\r\n            }/import/process/${fileId}/${processType}`\r\n          },\r\n          this.serverType\r\n        ).then(({ data }) => {\r\n          if (processType != 1) {\r\n            return;\r\n          } //取消不做处理\r\n          this.$message({\r\n            message: '导入成功',\r\n            type: 'success'\r\n          });\r\n          this.$refs.bTable.ajaxGetTableDataByPage();\r\n        });\r\n      };\r\n      this.$confirm(noPassReason, '覆盖确认', {\r\n        customClass: 'box-danger',\r\n        center: true,\r\n        dangerouslyUseHTMLString: true\r\n      })\r\n        .then(() => {\r\n          core(1);\r\n        })\r\n        .catch(() => {\r\n          core(-1);\r\n        });\r\n    },\r\n    download() {\r\n      //console.log(arguments);\r\n      //window.open(\"http://10.10.21.172:8665/logistics-data-api/modelDownload/\" + this.getParams().pathName , '_blank');\r\n\r\n      window.open(\r\n        (API_HOST[this.serverType] || '') +\r\n          '/modelDownload/' +\r\n          this.getParams().pathName,\r\n        '_blank'\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.b-table /deep/ .dynamic-form {\r\n  input,\r\n  .el-input {\r\n    width: 200px;\r\n  }\r\n}\r\n.table-title {\r\n  background: #d7d7d7;\r\n  padding: 8px 16px;\r\n  font-size: 14px;\r\n  border: 1px solid #797979;\r\n  display: inline-block;\r\n  margin: 20px 0 10px;\r\n  border-radius: 6px;\r\n  &-tabs {\r\n    /deep/ .el-tabs__content {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n.role {\r\n  background: #fff;\r\n  padding: 0 25px 0;\r\n  &-main {\r\n    padding-top: 23px;\r\n  }\r\n  .dialog {\r\n    &-content {\r\n      &-item {\r\n        margin-bottom: 29px;\r\n        margin-left: 8px;\r\n        &-label {\r\n          float: left;\r\n          min-width: 90px;\r\n        }\r\n        &-red {\r\n          color: #f5222d;\r\n        }\r\n        &-text {\r\n          text-align: left;\r\n        }\r\n      }\r\n      &-btns {\r\n        text-align: center;\r\n        padding-bottom: 27px;\r\n        button {\r\n          margin: 0 20px;\r\n          width: 86px;\r\n          height: 36px;\r\n          font-size: 14px;\r\n          // font-family: PingFangSC-Regular, PingFang SC;\r\n          font-weight: 400;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/pages/logistics-data/views/Collection"}]}