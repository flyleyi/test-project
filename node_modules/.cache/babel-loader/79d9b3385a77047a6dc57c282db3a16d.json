{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/admin/plugins/core/permission.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/admin/plugins/core/permission.js","mtime":1627979214243},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX01lc3NhZ2VCb3gyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL21lc3NhZ2UtYm94LmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2VCb3ggZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZS1ib3giOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZnV5dWV5aS9EZXNrdG9wL3lqeS1wcm9qZWN0cy9tdWx0aS1wcm9qZWN0L211dGlsd2FwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9mdXl1ZXlpL0Rlc2t0b3AveWp5LXByb2plY3RzL211bHRpLXByb2plY3QvbXV0aWx3YXAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgcm91dGVyLCB7IGdlbmVyYXRlUm91dGVzIH0gZnJvbSAnLi4vLi4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL3N0b3JlJzsKaW1wb3J0IE5Qcm9ncmVzcyBmcm9tICducHJvZ3Jlc3MnOyAvLyBwcm9ncmVzcyBiYXIKCmltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGx1Z2lucy9jb3JlL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCk5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbicsICcvc3NvL2F1dGgnXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBoYXNUb2tlbiwgaGFzQXBwRGF0YUxvYWRlZCwgX3lpZWxkJHN0b3JlJGRpc3BhdGNoLCBtZW51TGlzdCwgYWNjZXNzUm91dGVzOwoKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgogICAgICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc2V0IHBhZ2UgdGl0bGUKCiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gdG8ubWV0YS50aXRsZSB8fCBzdG9yZS5zdGF0ZS5zZXR0aW5ncy50aXRsZTsgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbgoKICAgICAgICAgICAgaGFzVG9rZW4gPSBnZXRUb2tlbigpOwoKICAgICAgICAgICAgaWYgKCFoYXNUb2tlbikgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0NzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCEodG8ucGF0aCA9PT0gJy9sb2dpbicpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIGlmIGlzIGxvZ2dlZCBpbiwgcmVkaXJlY3QgdG8gdGhlIGhvbWUgcGFnZQogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiAnLycKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGhhY2s6IGh0dHBzOi8vZ2l0aHViLmNvbS9QYW5KaWFDaGVuL3Z1ZS1lbGVtZW50LWFkbWluL3B1bGwvMjkzOQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBvYnRhaW5lZCBoaXMgcGVybWlzc2lvbiByb2xlcyB0aHJvdWdoIGdldEluZm8KICAgICAgICAgICAgLy8gY29uc3QgaGFzUm9sZXMgPSBzdG9yZS5nZXR0ZXJzLnJvbGVzICYmIHN0b3JlLmdldHRlcnMucm9sZXMubGVuZ3RoID4gMDsKICAgICAgICAgICAgaGFzQXBwRGF0YUxvYWRlZCA9ICEhc3RvcmUuZ2V0dGVycy5oYXNBcHBEYXRhTG9hZGVkOwoKICAgICAgICAgICAgaWYgKCFoYXNBcHBEYXRhTG9hZGVkKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0NTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTc7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9nZXRJbmZvJyk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5OwogICAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ2RpY3QvYWpheEdldERhdGEnKTsKCiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjE7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgnYXV0aC9nZXRBdXRoRGF0YScpOwoKICAgICAgICAgIGNhc2UgMjE6CiAgICAgICAgICAgIF95aWVsZCRzdG9yZSRkaXNwYXRjaCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIG1lbnVMaXN0ID0gX3lpZWxkJHN0b3JlJGRpc3BhdGNoLm1lbnVMaXN0OwogICAgICAgICAgICAvLyDojrflj5bmnYPpmZDmlbDmja4KICAgICAgICAgICAgLy8gZ2VuZXJhdGUgYWNjZXNzaWJsZSByb3V0ZXMgbWFwIGJhc2VkIG9uIHJvbGVzCiAgICAgICAgICAgIC8vIGNvbnN0IGFjY2Vzc1JvdXRlcyA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKAogICAgICAgICAgICAvLyAgICdhdXRoL2dlbmVyYXRlUm91dGVzJywKICAgICAgICAgICAgLy8gICBtZW51TGlzdAogICAgICAgICAgICAvLyApOwogICAgICAgICAgICBhY2Nlc3NSb3V0ZXMgPSBnZW5lcmF0ZVJvdXRlcyhtZW51TGlzdCk7IC8vIOeUn+aIkOWFgeiuuOiuv+mXrueahOi3r+eUsQogICAgICAgICAgICAvLyBkeW5hbWljYWxseSBhZGQgYWNjZXNzaWJsZSByb3V0ZXMKCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKTsKICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdhcHAvRklOSVNIX0RBVEFfTE9BRCcpOyAvLyDmlbDmja7liqDovb3lrozmiJAKICAgICAgICAgICAgLy8gaGFjayBtZXRob2QgdG8gZW5zdXJlIHRoYXQgYWRkUm91dGVzIGlzIGNvbXBsZXRlCiAgICAgICAgICAgIC8vIHNldCB0aGUgcmVwbGFjZTogdHJ1ZSwgc28gdGhlIG5hdmlnYXRpb24gd2lsbCBub3QgbGVhdmUgYSBoaXN0b3J5IHJlY29yZAoKICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI5OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjk7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICAvLyByZW1vdmUgdG9rZW4gYW5kIGdvIHRvIGxvZ2luIHBhZ2UgdG8gcmUtbG9naW4KICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzMjsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM1OwogICAgICAgICAgICByZXR1cm4gX01lc3NhZ2VCb3guY29uZmlybSgn5b2T5YmN5pWw5o2u5Yqg6L295LiN56iz5a6a77yM6K+35oKo56iN5ZCO6YeN6K+VJywgJ+mUmeivrycsIHsKICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+mHjeaWsOWKoOi9veaVsOaNricsCiAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+eZu+W9lemhtemdoicsCiAgICAgICAgICAgICAgY2xvc2VPbkNsaWNrTW9kYWw6IGZhbHNlLAogICAgICAgICAgICAgIGNsb3NlT25QcmVzc0VzY2FwZTogZmFsc2UsCiAgICAgICAgICAgICAgc2hvd0Nsb3NlOiBmYWxzZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM1OgogICAgICAgICAgICAvLyDph43mlrDliqDovb3mlbDmja4KICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDM4OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMzg7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oMzIpOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQxKTsgLy8g55m75Ye6CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDM7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSA0MzoKICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKCiAgICAgICAgICBjYXNlIDQ1OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDg7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgNDc6CiAgICAgICAgICAgIC8qIGhhcyBubyB0b2tlbiovCiAgICAgICAgICAgIGlmICh3aGl0ZUxpc3QuaW5kZXhPZih0by5wYXRoKSAhPT0gLTEpIHsKICAgICAgICAgICAgICAvLyBpbiB0aGUgZnJlZSBsb2dpbiB3aGl0ZWxpc3QsIGdvIGRpcmVjdGx5CiAgICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIG90aGVyIHBhZ2VzIHRoYXQgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgYXJlIHJlZGlyZWN0ZWQgdG8gdGhlIGxvZ2luIHBhZ2UuCiAgICAgICAgICAgICAgbmV4dCgiL2xvZ2luP3JlZGlyZWN0PSIuY29uY2F0KHRvLnBhdGgpKTsKICAgICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgICAgICB9CgogICAgICAgICAgY2FzZSA0ODoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzE0LCAyOV0sIFszMiwgMzhdXSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLmRvbmUoKTsKfSk7"},null]}