{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/PaperManage/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/PaperManage/index.vue","mtime":1645176309787},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- PaperManage 试卷管理 -->\n<template>\n  <div class=\"paperManage\" ref=\"containerRef\">\n    <h2>{{ $route.query.examName }}</h2>\n    <div class=\"toolbars\">\n      <el-button\n        type=\"primary\"\n        size=\"mini\"\n        v-auth=\"['paper-add']\"\n        @click=\"handleAdd\"\n        v-show=\"isShow || tableData.length === 0\"\n        >添加试卷</el-button\n      >\n    </div>\n    <div class=\"table\">\n      <el-table\n        :data=\"tableData\"\n        border\n        style=\"width: 100%\"\n        size=\"small\"\n        v-loading=\"loading\"\n      >\n        <el-table-column prop=\"subjectName\" label=\"科目\"> </el-table-column>\n        <el-table-column prop=\"paperName\" label=\"试卷名称\"> </el-table-column>\n        <el-table-column prop=\"totalScore\" label=\"满分\"> </el-table-column>\n        <el-table-column prop=\"paperStatus\" label=\"进展\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.paperStatus === 0\">未打标</span>\n            <span v-else-if=\"scope.row.paperStatus === 1\">已打标</span>\n            <span v-else-if=\"scope.row.paperStatus === 2\">已导入成绩</span>\n            <span v-else-if=\"scope.row.paperStatus === 3\">等待生成报告</span>\n            <span v-else-if=\"scope.row.paperStatus === 4\">已生成报告</span>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"500\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-mark']\"\n              @click=\"handleMarkSubject(scope.row)\"\n              v-if=\"scope.row.paperStatus === 0 || scope.row.paperStatus === 1\"\n              >题目打标</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-view']\"\n              @click=\"handleViewSubject(scope.row, 'ViewSubject')\"\n              v-if=\"scope.row.paperStatus !== 0 && scope.row.paperStatus !== 1\"\n              >查看题目</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-score']\"\n              @click=\"handleViewSubject(scope.row, 'ViewScore')\"\n              v-if=\"scope.row.paperStatus !== 0 && scope.row.paperStatus !== 1\"\n              >查看成绩</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-down']\"\n              @click=\"exportExcel(scope.row)\"\n              :loading=\"scope.row.btnLoading\"\n              v-if=\"scope.row.paperStatus === 1 || scope.row.paperStatus === 2\"\n              >下载模板</el-button\n            >\n\n            <el-tooltip\n              class=\"item\"\n              effect=\"dark\"\n              content=\"其他人正在导入试卷成绩，无法操作\"\n              placement=\"top\"\n              :disabled=\"!scope.row.otherPeopleImporting\"\n            >\n              <el-button\n                size=\"mini\"\n                type=\"text\"\n                :disabled=\"\n                  scope.row.importProcessResult !== null &&\n                    !scope.row.otherPeopleImporting\n                \"\n                :loading=\"scope.row.importLoading\"\n                v-auth=\"['paper-up']\"\n                v-if=\"\n                  scope.row.paperStatus === 1 || scope.row.paperStatus === 2\n                \"\n                @click.stop=\"fn($event, scope.row)\"\n              >\n                {{ getButtonText(scope.row) }}\n                <input\n                  class=\"hiddenInput\"\n                  v-show=\"false\"\n                  type=\"file\"\n                  accept=\".xls,.xlsx\"\n                  value=\"\"\n                  @change=\"importExcel($event, scope.row)\"\n                />\n              </el-button>\n            </el-tooltip>\n\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-edit']\"\n              @click=\"handleEdit(scope.row)\"\n              v-if=\"scope.row.paperStatus === 0 || scope.row.paperStatus === 1\"\n              >编辑</el-button\n            >\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              v-auth=\"['paper-del']\"\n              @click=\"del(scope.row.id)\"\n              v-if=\"scope.row.paperStatus === 0 || scope.row.paperStatus === 1\"\n              >删除</el-button\n            >\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div class=\"submit-box\" v-show=\"isShow\">\n      <el-button type=\"primary\" size=\"mini\" @click=\"submitExam\" ref=\"submitRef\"\n        >提交成绩</el-button\n      >\n    </div>\n    <div class=\"submit-tip\" v-show=\"isShow\">\n      *提交成绩后将于明天凌晨1-2点生成报告\n    </div>\n    <!-- 添加、编辑试卷 start -->\n    <el-dialog\n      :title=\"dialog.isedit ? '编辑试卷' : '新建试卷'\"\n      width=\"540px\"\n      center\n      :visible.sync=\"dialog.visible\"\n      @close=\"clearDialogForm\"\n    >\n      <el-form\n        ref=\"elForm\"\n        label-width=\"110px\"\n        :model=\"ruleForm\"\n        :rules=\"rules\"\n      >\n        <el-form-item label=\"科目\" prop=\"subjectId\">\n          <el-select\n            :disabled=\"dialog.isedit\"\n            v-model=\"ruleForm.subjectId\"\n            filterable\n            placeholder=\"请选择科目\"\n            @change=\"changeSubject\"\n          >\n            <el-option\n              v-for=\"(item, index) in subjectList\"\n              :key=\"index\"\n              :value=\"item.subjectId\"\n              :label=\"item.subjectName\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"科目别名\" prop=\"subjectName\">\n          <el-input\n            type=\"input\"\n            v-model.trim=\"ruleForm.subjectName\"\n            maxlength=\"10\"\n            placeholder=\"请填写科目别名\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"试卷名称\" prop=\"paperName\">\n          <el-input\n            type=\"input\"\n            v-model.trim=\"ruleForm.paperName\"\n            maxlength=\"30\"\n            placeholder=\"请填写试卷名称,如：语文-自命题卷\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"满分\" prop=\"totalScore\">\n          <el-input\n            placeholder=\"请填写满分\"\n            :disabled=\"dialog.isedit\"\n            v-model.number=\"ruleForm.totalScore\"\n            @input=\"numberChange('paper', arguments[0], 300)\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"dialog.visible = false\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"sureDialog\"\n          :loading=\"confirmLoading\"\n          >确认</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 添加、编辑试卷 end -->\n    <!-- 题目打标 start -->\n    <el-dialog\n      title=\"题目打标设置\"\n      width=\"460px\"\n      center\n      :visible.sync=\"markSubjectDialog.visible\"\n      @close=\"clearMarkDialogForm\"\n      class=\"mark-dialog\"\n    >\n      <el-form\n        ref=\"elMarkForm\"\n        label-width=\"110px\"\n        :model=\"markForm\"\n        :rules=\"markRules\"\n      >\n        <el-form-item label=\"打标模式：\" prop=\"markType\">\n          <el-radio-group v-model=\"markForm.markType\">\n            <el-radio\n              v-for=\"(item, index) in radioArr\"\n              :label=\"item.label\"\n              :key=\"index\"\n              >{{ item.name }}</el-radio\n            >\n          </el-radio-group>\n          <div class=\"tip\">\n            <div>（使用知识树进行打标）</div>\n            <div>（录入知识点进行打标）</div>\n          </div>\n        </el-form-item>\n        <el-form-item label=\"题目数量：\" prop=\"num\">\n          <el-input\n            v-model.number=\"markForm.num\"\n            @input=\"numberChange('mark', arguments[0], 100)\"\n            placeholder=\"请输入题目数量\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item label=\"标签体系：\" prop=\"stageId\">\n          <el-select\n            v-model=\"markForm.stageId\"\n            filterable\n            placeholder=\"请选择学段\"\n            :disabled=\"stageSelectDisabled\"\n          >\n            <el-option\n              v-for=\"item in stageList\"\n              :key=\"item.id\"\n              :value=\"item.id\"\n              :label=\"item.name\"\n            />\n          </el-select>\n          <el-select\n            v-model=\"markForm.subjectId\"\n            filterable\n            disabled\n            placeholder=\"请选择学科\"\n          >\n            <el-option\n              v-for=\"(item, index) in subjectList\"\n              :key=\"index\"\n              :value=\"item.subjectId\"\n              :label=\"item.subjectName\"\n            />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"markSubjectDialog.visible = false\"\n          >取消</el-button\n        >\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"linkToMark\"\n          :loading=\"confirmLoading\"\n          >确认</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 题目打标 end -->\n    <!-- 错误文案 -->\n    <div class=\"error-box\" v-if=\"errorArr.length > 0\">\n      <el-alert\n        size=\"mini\"\n        v-for=\"(item, index) in errorArr\"\n        :key=\"item.id\"\n        :title=\"item.title\"\n        type=\"error\"\n        show-icon\n        @close=\"closeError(index)\"\n        :ref=\"'alertRef' + item.id\"\n      >\n        <template>\n          <span v-html=\"item.description\"></span>\n        </template>\n      </el-alert>\n    </div>\n    <!-- 提示 start -->\n    <el-dialog\n      title=\"提示\"\n      width=\"560px\"\n      center\n      :visible.sync=\"tipDialog.visible\"\n      :show-close=\"false\"\n      class=\"tip-dialog\"\n    >\n      <div class=\"tip-title\">\n        {{\n          errorTipRow.paperName\n        }}导入表格中，以下学生所在班级与教务系统不统一，继续导入将按导入的班级关系生成班级报告\n      </div>\n      <el-table :data=\"tipTable\" border style=\"width: 100%\">\n        <el-table-column prop=\"stuNum\" label=\"学号\"> </el-table-column>\n        <el-table-column prop=\"stuName\" label=\"姓名\"> </el-table-column>\n        <el-table-column prop=\"importClass\" label=\"导入班级\"> </el-table-column>\n        <el-table-column prop=\"sysClass\" label=\"教务系统班级\">\n        </el-table-column>\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"small\" @click=\"sureImportExcel(0)\">取消</el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          @click=\"sureImportExcel(1)\"\n          :loading=\"confirmLoading\"\n          >确认</el-button\n        >\n      </span>\n    </el-dialog>\n    <!-- 提示 end -->\n  </div>\n</template>\n\n<script>\nimport api from './../../../../api/paperManage';\nfunction mergeDefault() {\n  var f = {},\n    m = arguments.length,\n    o = arguments[m - 1],\n    b = 0,\n    k,\n    h,\n    d,\n    g;\n  if (typeof o == 'boolean') {\n    b++;\n    h = o;\n  }\n  if (Object.prototype.toString.call(arguments[0]) === '[object Array]') {\n    d = true;\n    g = arguments[0];\n    k = arguments[1];\n  } else {\n    k = arguments[0] || {};\n  }\n  for (var c = 0; c < m - b; c++) {\n    var a = arguments[c];\n    for (var e in d ? g : k) {\n      var n = d ? g[e] : e;\n      if (a && a[n] !== undefined) {\n        h ? (f[n] = a[n]) : (k[n] = a[n]);\n      } else {\n        h && c == 0 && (f[n] = k[n]);\n      }\n    }\n  }\n  return h ? f : k;\n}\nexport default {\n  name: 'PaperManage',\n  data() {\n    return {\n      tableData: [],\n      dialog: {\n        visible: false,\n        isedit: false\n      },\n      markSubjectDialog: {\n        visible: false\n      },\n      tipDialog: {\n        visible: false\n      },\n      ruleForm: {\n        paperName: '',\n        examId: '',\n        subjectId: '',\n        subjectName: '', //科目别名\n        totalScore: null\n      },\n      markForm: {\n        markType: null,\n        num: null,\n        stageId: '',\n        subjectId: ''\n      },\n      stageList: [], //学段list\n      stageSelectDisabled: false, //学段是否禁用\n      currentMarkRow: {}, //打标row\n      rules: {\n        subjectId: [\n          {\n            required: true,\n            trigger: 'change',\n            message: '请选择科目'\n          }\n        ],\n        paperName: [\n          { required: true, trigger: 'blur', message: '请填写试卷名称' },\n          { max: 30, trigger: '', message: '最大长度30个字符' }\n        ],\n        subjectName: [\n          { required: true, trigger: 'blur', message: '请填写科目别名' }\n        ],\n        totalScore: [{ required: true, trigger: 'blur', message: '请填写满分' }]\n      },\n      markRules: {\n        markType: [\n          { required: true, trigger: 'change', message: '请选择打标模式' }\n        ],\n        num: [{ required: true, trigger: 'blur', message: '请输入题目数量' }],\n        stageId: [{ required: true, trigger: 'change', message: '请选择学段' }]\n      },\n      subjectList: [],\n      confirmLoading: false,\n      loading: false,\n      radioArr: [\n        {\n          name: '选择模式',\n          label: 1\n        },\n        {\n          name: '录入模式',\n          label: 0\n        }\n      ],\n      errorArr: [],\n      tipTable: [], //提示数据列表\n      errorTipRow: {}, //提示教务系统班级不统一的行\n      changeNosave: false,\n      isDestroy: false,\n      t: null //定时器\n    };\n  },\n\n  components: {},\n\n  computed: {\n    // 是否显示提交成绩按钮\n    isShow() {\n      let tableDataNull = this.tableData.filter(\n        item =>\n          item.paperStatus === 0 ||\n          item.paperStatus === 1 ||\n          item.paperStatus === 2\n      );\n      if (tableDataNull.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  created() {\n    this.getSubjectList();\n    this.getPaper();\n    this.t = setInterval(() => {\n      this.getPaper();\n    }, 2000);\n  },\n\n  mounted() {\n    window.onbeforeunload = function(event) {\n      return confirm('确定退出吗');\n    };\n  },\n  methods: {\n    // 列表数据\n    getPaper() {\n      api.getPaper(this.$route.query.id).then(({ data }) => {\n        // 初始化数据\n        data.forEach(item => {\n          item.btnLoading = false; //导出loading\n          item.importLoading = false; //导入loading\n          if (\n            item.importProcessResult &&\n            item.importProcessResult.progressRate < 0\n          ) {\n            item.otherPeopleImporting = true; //其他人导入中\n          } else {\n            item.otherPeopleImporting = false; //其他人导入中\n          }\n        });\n        this.tableData = data;\n\n        // 没有在上传的 停止定时器\n        let tableDataNull = this.tableData.filter(\n          item => item.importProcessResult !== null\n        );\n        if (tableDataNull.length === 0) {\n          this.changeNosave = false;\n          // this.clearIntervalFn();\n          return;\n        }\n        // 有正在上传的\n        try {\n          this.changeNosave = true;\n          this.tableData.forEach(item => {\n            if (\n              item.importProcessResult &&\n              item.importProcessResult.progressRate > 0\n            ) {\n              // 之前是否导入了此条row\n              let rowIndex = this.errorArr.findIndex(e => item.id === e.id);\n              // 有错误信息\n              if (item.importProcessResult.hasError) {\n                item.importLoading = true;\n                // 错误数据处理\n                this.handleErrorArr(\n                  rowIndex,\n                  item,\n                  item.importProcessResult.checkResult\n                );\n                // this.clearIntervalFn();\n                // this.getPaper();\n                item.importProcessResult = null;\n                item.importLoading = false;\n                // 滚动到页面底部错误提示\n                this.$nextTick(() => {\n                  let scrollTop =\n                    this.$refs['alertRef' + item.id][0].$el.offsetTop - 20;\n                  this.$refs.containerRef.scrollTo(0, scrollTop);\n                });\n              }\n              // 导入成功\n              if (item.importProcessResult.progressRate === 100) {\n                this.$message.success(\n                  `${item.subjectName}-${item.paperName} 导入成功`\n                );\n                if (rowIndex >= 0) {\n                  this.errorArr.splice(rowIndex, 1);\n                }\n              }\n              // 数据不匹配-弹窗\n              if (item.importProcessResult.classCheckList.length > 0) {\n                this.tipDialog.visible = true;\n                this.tipTable = item.importProcessResult.classCheckList;\n                this.errorTipRow = item;\n                this.clearIntervalFn();\n\n                throw Error();\n              }\n            }\n          });\n        } catch (e) {}\n      });\n    },\n    // 获取按钮显示文字\n    getButtonText(row) {\n      if (row.paperStatus === 1 && row.importProcessResult === null) {\n        return '导入成绩';\n      } else {\n        if (row.paperStatus === 2 && row.importProcessResult === null) {\n          return '重新导入';\n        }\n        if (row.importProcessResult.progressRate > 0) {\n          return `数据检查中${row.importProcessResult.progressRate}%`;\n        } else {\n          return '成绩导入中';\n        }\n      }\n    },\n    // 根据学段查询科目列表\n    getSubjectList() {\n      api.getSubjectList().then(({ data }) => {\n        this.subjectList = data;\n      });\n    },\n    // 新增\n    handleAdd() {\n      this.dialog.visible = true;\n      this.dialog.isedit = false;\n      this.ruleForm = this.$options.data().ruleForm;\n      this.$nextTick(() => {\n        this.clearDialogForm();\n      });\n    },\n    // 编辑\n    handleEdit(row) {\n      this.dialog.visible = true;\n      this.dialog.isedit = true;\n      mergeDefault(this.ruleForm, row);\n      this.ruleForm.id = row.id;\n    },\n    changeSubject(val) {\n      let subjectItem = this.subjectList.find(\n        item => item.subjectId == this.ruleForm.subjectId\n      );\n      this.ruleForm.subjectName = subjectItem.subjectName;\n    },\n    // 确认\n    sureDialog() {\n      this.$refs['elForm'].validate(valid => {\n        if (!valid) return;\n        this.ruleForm.examId = Number(this.$route.query.id);\n        this.confirmLoading = true;\n        let sendData = {\n          ...this.ruleForm\n        };\n        if (this.dialog.isedit) {\n          sendData.id = Number(this.ruleForm.id);\n        }\n        let subjectItem = this.subjectList.find(\n          item => item.subjectId == this.ruleForm.subjectId\n        );\n        sendData.subjectNameOriginal = subjectItem.subjectName;\n        api\n          .savePaper(sendData)\n          .then(() => {\n            this.$message({\n              type: 'success',\n              message: '保存成功!'\n            });\n            this.confirmLoading = false;\n            this.dialog.visible = false;\n            this.getPaper();\n          })\n          .finally(() => {\n            this.confirmLoading = false;\n          });\n      });\n    },\n    // 删除\n    del(id) {\n      this.$confirm('删除后不可恢复，确定删除？', '删除确认', {\n        customClass: 'box-danger',\n        center: true,\n        type: 'warning'\n      })\n        .then(() => {\n          api\n            .removePaper(id)\n            .then(({ data }) => {\n              this.$message({\n                type: 'success',\n                message: '删除成功!'\n              });\n              this.getPaper();\n            })\n            .finally(() => {\n              this.confirmLoading = false;\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n    },\n    // 题目打标\n    handleMarkSubject(row) {\n      this.currentMarkRow = row;\n      // 判断是否录入过\n      let hasInputVal = false;\n      let stageId = '';\n      let localArr = JSON.parse(localStorage.getItem('localArr'));\n      console.log(localArr, '打标前');\n      localArr &&\n        localArr.forEach(item => {\n          console.log(item.paperId, row.id, 'id有了');\n          if (item.paperId == row.id) {\n            hasInputVal = item.hasInputVal;\n            stageId = item.stageId;\n          }\n        });\n      console.log(row.paperStatus === 0, hasInputVal, 'hasInputVal');\n      // 未录入\n      if (row.paperStatus === 0 && !hasInputVal) {\n        this.markSubjectDialog.visible = true;\n        this.markForm.subjectId = this.currentMarkRow.subjectId;\n        // 学段下拉列表\n        this.getStageList();\n      } else {\n        // 录入过\n        let routeName = 'MarkSubjectInputMode';\n        if (this.currentMarkRow.markType === 1) {\n          routeName = 'MarkSubjectChooseMode';\n        }\n        this.$router.push({\n          name: routeName,\n          query: {\n            markType: this.currentMarkRow.markType,\n            num: 0,\n            totalScore: this.currentMarkRow.totalScore,\n            paperId: this.currentMarkRow.id,\n            subjectId: this.currentMarkRow.subjectId,\n            subjectName: this.currentMarkRow.subjectName,\n            gradeNameList: this.$route.query.gradeNameList,\n            examName: this.$route.query.examName,\n            paperName: this.currentMarkRow.paperName,\n            stageId: this.currentMarkRow.stageId || stageId\n          }\n        });\n      }\n    },\n    // 题目打标弹窗 确认\n    linkToMark() {\n      this.$refs['elMarkForm'].validate(async valid => {\n        if (!valid) return;\n        this.markSubjectDialog.visible = false;\n        let sendData = {\n          id: '',\n          paperName: '',\n          examId: '',\n          subjectId: '',\n          totalScore: 100\n        };\n        mergeDefault(sendData, this.currentMarkRow);\n        sendData.markType = this.markForm.markType;\n        // 将打标模式传入后台\n        const { data } = await api.savePaper(sendData);\n        let routeName = 'MarkSubjectInputMode';\n        if (this.markForm.markType === 1) {\n          routeName = 'MarkSubjectChooseMode';\n        }\n        let query = {\n          ...this.markForm,\n          totalScore: this.currentMarkRow.totalScore,\n          paperId: this.currentMarkRow.id,\n          subjectName: this.currentMarkRow.subjectName,\n          gradeNameList: this.$route.query.gradeNameList,\n          examName: this.$route.query.examName,\n          paperName: this.currentMarkRow.paperName,\n          hasInputVal: false\n        };\n        let localArr = [];\n        let hasRow = false;\n        if (localStorage.getItem('localArr')) {\n          console.log('有此条row');\n          localArr = JSON.parse(localStorage.getItem('localArr'));\n          localArr.forEach((item, index) => {\n            if (item.paperId == this.currentMarkRow.id) {\n              hasRow = true;\n              localArr.splice(index, 1, { ...query, tableData: [] });\n            }\n          });\n          if (!hasRow) {\n            console.log('没有此条row');\n            localArr.push({\n              ...query,\n              tableData: []\n            });\n          }\n        } else {\n          console.log('没有localArr');\n          localArr.push({\n            ...query,\n            tableData: []\n          });\n        }\n        localStorage.setItem('localArr', JSON.stringify(localArr));\n        console.log(\n          JSON.parse(localStorage.getItem('localArr')),\n          '试卷页面localArr'\n        );\n        this.$router.push({\n          name: routeName,\n          query\n        });\n      });\n    },\n    // 查看题目\n    handleViewSubject(row, routeName) {\n      this.$router.push({\n        name: routeName,\n        query: {\n          paperId: row.id,\n          markType: row.markType,\n          gradeNameList: this.$route.query.gradeNameList,\n          examName: this.$route.query.examName,\n          paperName: this.currentMarkRow.paperName\n        }\n      });\n    },\n    // 清空表单\n    clearDialogForm() {\n      this.$refs['elForm'].clearValidate();\n    },\n    clearMarkDialogForm() {\n      this.$refs['elMarkForm'].clearValidate();\n    },\n    // 设定数字输入范围\n    numberChange(type, val, maxNum) {\n      val = val.replace(/[^0-9]/g, '');\n      if (val === '') {\n        type == 'paper'\n          ? (this.ruleForm.totalScore = '')\n          : (this.markForm.num = '');\n        return;\n      }\n      this.$nextTick(() => {\n        let num = Math.min(Number(val), maxNum);\n        switch (type) {\n          case 'paper':\n            if (num === 0) {\n              this.ruleForm.totalScore = maxNum;\n            } else {\n              this.ruleForm.totalScore = num;\n            }\n            break;\n          case 'mark':\n            if (num === 0) {\n              this.markForm.num = maxNum;\n            } else {\n              this.markForm.num = num;\n            }\n            break;\n          // default:\n        }\n      });\n    },\n    // 导出excel\n    exportExcel(row) {\n      row.btnLoading = true;\n      api.getExcel(row.id).then(res => {\n        let _this = this;\n        if (res.type === 'application/json') {\n          let reader = new FileReader();\n          reader.readAsText(res, 'utf-8');\n          reader.onload = function() {\n            let msg = JSON.parse(reader.result).msg || '下载失败';\n            _this.$message.warning(msg);\n          };\n          return;\n        }\n        const blob = new Blob([res], {\n          type: (res.type && res.type) || 'application/vnd.ms-excel'\n        });\n        let link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.setAttribute(\n          'download',\n          `成绩导入模板-${row.subjectName}-${row.paperName}`\n        );\n        link.click();\n        link = null;\n        row.btnLoading = false;\n        this.$message.success('下载成功');\n      });\n    },\n    // 导入按钮点击\n    fn(event, row) {\n      if (row.otherPeopleImporting) return;\n      event.currentTarget.getElementsByClassName('hiddenInput')[0].click();\n    },\n    // 导入excel\n    importExcel(event, row) {\n      this.changeNosave = true;\n\n      let { files } = event.target;\n      if (files.length === 0) return;\n      row.importLoading = true;\n      let file = files[0];\n      let formData = new FormData();\n      formData.append('file', file);\n      // 之前是否导入了此条row\n      let rowIndex = this.errorArr.findIndex(item => item.id === row.id);\n      // 导入后台\n      api\n        .importExcel(row.id, formData)\n        .then(({ data }) => {\n          event.target.value = '';\n          // 有错误提示\n          if (data.hasError) {\n            // 错误数据处理\n            row.importLoading = false;\n            this.handleErrorArr(rowIndex, row, data.checkResult);\n            this.$nextTick(() => {\n              let scrollTop =\n                this.$refs['alertRef' + row.id][0].$el.offsetTop - 20;\n              this.$refs.containerRef.scrollTo(0, scrollTop);\n            });\n          } else {\n            // 无错误提示 导入过此条的错误信息删除\n            if (rowIndex >= 0) {\n              this.errorArr.splice(rowIndex, 1);\n            }\n            // 导入进度\n            row.importProcessResult = {};\n            this.$set(\n              row.importProcessResult,\n              'progressRate',\n              data.progressRate\n            );\n            // 刷新列表\n            this.clearIntervalFn();\n            this.t = setInterval(() => {\n              if (this.isDestroy) {\n                this.clearIntervalFn();\n              } else {\n                this.getPaper();\n              }\n            }, 2000);\n          }\n        })\n        .catch(err => {\n          event.target.value = '';\n          row.importLoading = false;\n        });\n    },\n    // 关闭错误数据提示\n    closeError(index) {\n      this.errorArr.splice(index, 1);\n    },\n    // 清除定时器\n    clearIntervalFn() {\n      clearInterval(this.t);\n      // clearInterval(this.t2);\n      // clearInterval(this.t3);\n      // clearInterval(this.t4);\n    },\n    // 处理错误数据\n    handleErrorArr(rowIndex, row, description) {\n      // 没有导入过此条row\n      if (rowIndex < 0) {\n        this.errorArr.push({\n          id: row.id,\n          title: `${row.subjectName}-${row.paperName} 成绩导入有误`,\n          description\n        });\n      } else {\n        // 导入过此条row 替换错误信息\n        this.errorArr.splice(rowIndex, 1, {\n          id: row.id,\n          title: `${row.subjectName}-${row.paperName} 成绩导入有误`,\n          description\n        });\n      }\n    },\n    // 确认导入成绩\n    sureImportExcel(type) {\n      this.tipDialog.visible = false;\n      this.confirmLoading = true;\n      api.sureImportExcel(this.errorTipRow.id, type).then(({ data }) => {\n        // 刷新列表\n        this.clearIntervalFn();\n        this.t = setInterval(() => {\n          this.getPaper();\n        }, 2000);\n\n        this.confirmLoading = false;\n      });\n    },\n    // 提交成绩\n    submitExam() {\n      if (this.tableData.length === 0) {\n        return this.$message.warning('未导入成绩，无法提交');\n      }\n      let tableDataNull = this.tableData.filter(item => item.paperStatus !== 2);\n      if (tableDataNull.length !== 0) {\n        return this.$message.warning('存在未导入成绩的试卷，无法提交');\n      }\n      // 仅允许在7点至24点之间提交，否则提示：“暂不允许提交，请于7点至24点提交”\n      let myDate = new Date();\n      let h = myDate.getHours();\n      if (h < 7) {\n        return this.$message.warning('暂不允许提交，请于7点至24点提交');\n      }\n      this.$confirm('确定后成绩无法再修改，是否继续？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消'\n      })\n        .then(() => {\n          this.loading = true;\n          api\n            .submitExam(this.$route.query.id)\n            .then(res => {\n              this.getPaper();\n              this.loading = false;\n              return this.$message.success('提交成绩成功');\n            })\n            .catch(err => {\n              this.loading = false;\n            });\n        })\n        .catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消提交成绩'\n          });\n        });\n    },\n    // 学段下拉列表\n    getStageList() {\n      api.getStageList().then(({ data }) => {\n        this.stageList = data;\n        if (this.currentMarkRow.stageId) {\n          this.markForm.stageId = Number(this.routeParams.stageId);\n          this.stageSelectDisabled = true;\n        } else {\n          // 默认选择高中\n          this.markForm.stageId = 4;\n        }\n      });\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    this.isDestroy = true;\n    this.clearIntervalFn();\n    if (this.changeNosave) {\n      this.$confirm('有成绩正在导入中，确定离开吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        distinguishCancelAndClose: false\n      })\n        .then(() => {\n          next();\n        })\n        .catch(() => {\n          next(false);\n          this.clearIntervalFn();\n          this.t = setInterval(() => {\n            this.getPaper();\n          }, 2000);\n        });\n    } else {\n      next();\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.paperManage {\n  /deep/ label {\n    cursor: initial !important;\n  }\n  h2 {\n    font-size: 16px;\n    margin-bottom: 20px;\n    font-weight: 600;\n  }\n  .toolbars {\n    margin-bottom: 20px;\n  }\n  /deep/ .el-input__inner,\n  .el-select {\n    width: 100%;\n  }\n  /deep/ .el-button {\n    background: rgba(0, 0, 0, 0.15);\n    border-radius: 2px;\n    border: none;\n    color: #fff;\n    font-weight: normal;\n    font-size: 14px;\n  }\n  /deep/ .el-button--primary {\n    background: #5481e9;\n    border-color: #5481e9;\n    border-radius: 2px;\n  }\n  /deep/ .el-button--text {\n    color: #5481e9;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    font-weight: 400;\n    background: none;\n  }\n  /deep/ .is-disabled {\n    color: #ccc;\n  }\n  /deep/ .el-table {\n    font-size: 14px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    font-weight: 400;\n    color: rgba(0, 0, 0, 0.65);\n  }\n  /deep/ .el-table thead,\n  /deep/ .el-table th {\n    background-color: #fafafa;\n    font-size: 14px;\n    font-family: PingFangSC-Medium, PingFang SC;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.85);\n  }\n  /deep/ .el-table th {\n    padding: 12px 0;\n  }\n  /deep/ .el-pagination {\n    text-align: right;\n    .btn-prev,\n    .btn-next,\n    li {\n      background: none !important;\n    }\n    .el-pager li:not(.disabled).active {\n      background-color: #5481e9 !important;\n      border-radius: 50%;\n    }\n    .el-pagination .el-select .el-input {\n      width: 110px;\n    }\n    .el-pagination__editor.el-input {\n      width: 76px;\n      padding: 0 8px;\n    }\n  }\n  /deep/ .el-dialog {\n    .el-dialog__header {\n      text-align: left;\n      border-bottom: 1px solid #f5f5f5;\n    }\n    .el-button--default {\n      border: 1px solid #5481e9;\n      background: #fff;\n      color: #5481e9;\n    }\n    .el-button + .el-button {\n      margin-left: 12px;\n    }\n    .el-radio {\n      display: block;\n      margin-right: 5px;\n      &:first-child {\n        margin-bottom: 17px;\n      }\n    }\n  }\n  /deep/ .el-form-item__label {\n    text-align: left;\n    width: 100px !important;\n  }\n  /deep/ .el-form-item__content {\n    margin-left: 100px !important;\n  }\n  .mark-dialog {\n    /deep/ .el-form-item:first-child {\n      margin-bottom: 30px;\n      .el-form-item__label {\n        line-height: 20px;\n      }\n      .tip {\n        font-size: 14px;\n        font-family: PingFangSC-Regular, PingFang SC;\n        font-weight: 400;\n        color: #c0c4cc;\n        line-height: 14px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n      }\n      .el-form-item__content {\n        display: flex;\n        margin-left: 0 !important;\n      }\n    }\n    /deep/ .el-form-item {\n      margin-bottom: 30px;\n      &:last-child {\n        margin-bottom: 0px;\n        .el-select {\n          width: 45%;\n          &:first-child {\n            width: 50%;\n            margin-right: 5%;\n          }\n        }\n      }\n    }\n  }\n  .error-box {\n    margin-top: 50px;\n    max-height: 253px;\n    overflow-y: auto;\n  }\n  /deep/ .el-alert {\n    margin-top: 10px;\n    align-items: flex-start;\n  }\n  .submit-box {\n    text-align: center;\n    margin-top: 25px;\n  }\n  .submit-tip {\n    text-align: center;\n    color: #ccc;\n    margin-top: 10px;\n  }\n  .tip-title {\n    margin-bottom: 20px;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/score-analysis-admin/views/components/ExamManage/PaperManage"}]}