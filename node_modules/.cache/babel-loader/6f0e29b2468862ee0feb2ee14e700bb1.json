{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/executive-serveh5/views/filler/Fill.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/executive-serveh5/views/filler/Fill.vue","mtime":1627979214302},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Fill.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"tips\" v-if=\"showTips\">\n      <div class=\"warning\"></div>\n      <div class=\"tips-item\">\n        <span class=\"tips-item-number\">1、</span>\n        需求指下属公司和机构在业务开展中遇到的问题或困难，所在板块内部无法自行消化解决，或集团总部能够更高效协调解决\n      </div>\n      <div class=\"tips-item\">\n        <span class=\"tips-item-number\">2、</span>\n        描述需求关键点即可，具体情况由抢单人与下单人详细对接；\n      </div>\n      <div class=\"tips-item\">\n        <span class=\"tips-item-number\">3、</span>\n        订单提交后，先由各版块总负责人或下属公司、机构负责人审核。审核通过后，方能进入总部高层抢单池\n      </div>\n      <van-icon name=\"cross\" @click=\"closeTips\" class=\"close-tips\" />\n    </div>\n    <div class=\"serve-company\">\n      <van-cell\n        v-if=\"plateList.length > 1\"\n        class=\"fill-content\"\n        is-link\n        @click=\"showPicker = true\"\n      >\n        <div :class=\"{ placeholder: !this.plateId }\">\n          {{ this.plateId ? this.plateName : '请选择所属公司' }}\n        </div>\n      </van-cell>\n    </div>\n    <van-popup v-model=\"showPicker\" position=\"bottom\">\n      <van-picker\n        title=\"所属公司\"\n        show-toolbar\n        :columns=\"columns\"\n        @confirm=\"onConfirm\"\n        @cancel=\"onCancel\"\n      />\n    </van-popup>\n    <div class=\"serve-name\">\n      <van-field\n        v-model=\"serveName\"\n        label=\"\"\n        @blur=\"cancelInput\"\n        maxlength=\"20\"\n        placeholder=\"一句话概括需求\"\n      />\n    </div>\n    <div class=\"serve-add\">\n      <van-field\n        type=\"textarea\"\n        v-model=\"addContent\"\n        @blur=\"cancelInput\"\n        placeholder=\"补充说明\"\n        maxlength=\"500\"\n      />\n    </div>\n    <div class=\"serve-file\">\n      <van-uploader\n        :max-size=\"5 * 1024 * 1024\"\n        accept=\"image/gif,image/jpeg,image/png,image/jpg\"\n        @oversize=\"onOversize\"\n        :beforeRead=\"beforeRead\"\n        :after-read=\"afterRead\"\n        v-model=\"fileList\"\n      >\n        <span class=\"serve-file-add\">\n          <van-icon class=\"plus\" name=\"plus\" />\n        </span>\n      </van-uploader>\n    </div>\n    <div class=\"apply-btn-wrapper\">\n      <div class=\"apply-btn\" @click=\"applyServe\">\n        下单\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { handleServe, getServeDetail } from './../../api/serve.js';\nimport { getPlateList } from './../../api/user.js';\nimport axios from 'axios';\nimport config from './../../config';\nexport default {\n  name: 'fill',\n  data() {\n    return {\n      showTips: true,\n      serveName: '',\n      addContent: '',\n      canApply: true,\n      serveDetail: {},\n      fileList: [],\n      //测试上传文件地址\n      //uploadUrl: 'http://172.17.15.42:7501/oss/material/serve/uploadMaterial'\n      uploadUrl: config.UPLOAD_FILE_URL,\n      config: config,\n      plateId: '',\n      plateList: [],\n      showPicker: false,\n      columns: [],\n      plateName: ''\n    };\n  },\n  created() {\n    this.serveId = this.$route.query.serveId || '';\n    if (this.serveId) {\n      this.getServeDetail(this.serveId);\n    } else {\n      this.getPlateList();\n    }\n  },\n  methods: {\n    closeTips() {\n      this.showTips = false;\n    },\n    cancelInput() {\n      document.querySelector('body').scrollIntoView(true);\n    },\n    getPlateList() {\n      getPlateList().then(res => {\n        this.plateList = res.data || [];\n        this.columns = this.plateList.map(item => {\n          return `${item.cybkName}-${item.company}`;\n        });\n        if (this.plateList.length === 1) {\n          this.plateId = this.plateList[0].id;\n          this.plateName = this.columns[0];\n        } else {\n          if (this.plateId) {\n            const index = this.plateList.findIndex(\n              item => item.id == this.plateId\n            );\n            this.plateName = this.columns[index];\n          }\n        }\n      });\n    },\n    getServeDetail(id) {\n      getServeDetail(id).then(res => {\n        this.serveDetail = (res && res.data) || {};\n        this.fileList = this.serveDetail.attachments || [];\n        this.serveName = this.serveDetail.serveName || '';\n        this.addContent = this.serveDetail.serveDesc || '';\n        this.plateId = this.serveDetail.cybkNo || '';\n        for (let i = 0; i < this.fileList.length; i++) {\n          this.fileList[i].name = this.fileList[i].fileName;\n          if (this.getItemTypeImage(this.fileList[i].name)) {\n            this.fileList[i].isImage = true;\n          }\n        }\n        this.getPlateList();\n      });\n    },\n    applyServe() {\n      const { serveName, addContent } = this;\n      if (!serveName) {\n        this.$toast('请填写服务标题');\n        return;\n      } else if (serveName.length < 6 || serveName.length > 20) {\n        this.$toast('服务标题请输入 6-20 字');\n        return;\n      }\n      if (addContent && (addContent.length < 6 || addContent.length > 500)) {\n        this.$toast('服务补充请输入 6-500 字');\n        return;\n      }\n      let files = [];\n\n      for (let i = 0; i < this.fileList.length; i++) {\n        files.push({\n          fileName: this.fileList[i].name || '',\n          url: this.fileList[i].url || this.fileList[i].response.data[0].url\n        });\n      }\n      if (!this.canApply) {\n        return;\n      }\n      let params = {\n        id: this.serveId,\n        processType: 0,\n        serveName: serveName.trim(),\n        serveDesc: addContent.trim(),\n        attachments: files,\n        cybkNo: this.plateId\n      };\n      this.canApply = false;\n      handleServe(params)\n        .then(res => {\n          this.$router.push({\n            path: '/fill'\n          });\n          this.canApply = true;\n          this.$toast('提交成功');\n          return;\n        })\n        .catch(e => {\n          this.canApply = true;\n        });\n    },\n    onConfirm(value, index) {\n      this.showPicker = false;\n      this.plateId = this.plateList[index].id;\n      this.plateName = value;\n    },\n    onOversize() {\n      this.$toast('文件大小不能超过 5 M');\n    },\n    beforeRead(file) {\n      const fileType = ['image/gif', 'image/jpeg', 'image/png', 'image/jpg'];\n      if (!fileType.includes(file.type)) {\n        this.$toast('仅支持 jpg, png, jpeg, gif 格式图片！');\n        return false;\n      }\n      if (file.size / 1024 / 1024 > 5) {\n        this.$toast('文件大小不能超过 5 M');\n        return false;\n      }\n      if (this.fileList.length >= 5) {\n        this.$toast('最多上传 5 张图片！');\n        return false;\n      }\n      return true;\n    },\n    afterRead(file) {\n      file.status = 'uploading';\n      file.message = '上传中';\n      let formData = new FormData();\n      formData.append('appid', config.appid);\n      formData.append('appsecret', config.appsecret);\n      formData.append('file', this.dataURLtoBlob(file.content));\n      axios({\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        data: formData,\n        //测试环境\n        // url: 'http://172.17.15.42:7501/oss/material/serve/uploadMaterial'\n        url: this.uploadUrl\n      }).then(res => {\n        if (res.data.code == 8200) {\n          this.fileList[this.fileList.length - 1].status = 'success';\n          this.fileList[this.fileList.length - 1].url = res.data.data[0].url;\n          this.fileList[this.fileList.length - 1].name =\n            (file.file && file.file.name) || '';\n        } else {\n          this.fileList[this.fileList.length - 1].status = 'failed';\n          this.fileList[this.fileList.length - 1].message = '上传失败';\n        }\n      });\n    },\n    getItemTypeImage(item) {\n      const name = item.fileName || item.name;\n      const imageList = ['jpg', 'png', 'gif', 'jpeg'];\n      const type = this.getFileType(name);\n      console.log('type', type);\n      return imageList.includes(type.toLowerCase());\n    },\n    getFileType(name) {\n      if (!name) return 'png';\n      return name.slice(name.lastIndexOf('.') + 1);\n    },\n    onCancel() {\n      this.showPicker = false;\n    },\n\n    dataURLtoBlob(dataurl) {\n      var arr = dataurl.split(','),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      return new Blob([u8arr], {\n        type: mime\n      });\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.tips {\n  position: relative;\n  background: #fefcec;\n  box-sizing: border-box;\n  padding: 0.2rem 0.62rem;\n  color: #f86e21;\n  line-height: 0.32rem;\n  font-size: 0.28rem;\n}\n.tips-item {\n  padding-left: 0.36rem;\n  position: relative;\n}\n.tips-item-number {\n  position: absolute;\n  left: 0;\n}\n.warning {\n  width: 0.32rem;\n  height: 0.32rem;\n  border-radius: 50%;\n  background: #f86e21;\n  text-align: center;\n  position: absolute;\n  left: 0.2rem;\n}\n.warning::before {\n  content: '!';\n  font-size: 0.18rem;\n  color: #fff;\n}\n.close-tips {\n  position: absolute;\n  top: 0.2rem;\n  right: 0.2rem;\n}\n.serve-company {\n  margin-top: 0.2rem;\n}\n.serve-name {\n  height: 44px;\n  background: #fff;\n  margin-top: 0.2rem;\n  /deep/.van-field__control {\n    font-size: 0.28rem;\n    line-height: 24px;\n  }\n}\n.serve-add {\n  margin-top: 0.2rem;\n  // padding: 0.1rem 0;\n  /deep/.van-field__control {\n    height: 3.26rem;\n    background: #f6f6f6;\n    border-radius: 4px;\n    padding: 0.2rem;\n    font-size: 0.28rem;\n    line-height: 0.32rem;\n  }\n}\n.serve-file {\n  padding: 0.3rem;\n  background: #fff;\n  margin-top: 0.2rem;\n}\n.serve-file-add {\n  display: inline-block;\n  width: 1.58rem;\n  height: 1.58rem;\n  line-height: 1.58rem;\n  border: 1px solid #dddddd;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.plus {\n  font-size: 0.64rem;\n  color: #ccc;\n}\n.apply-btn-wrapper {\n  padding: 0.3rem;\n}\n.apply-btn {\n  height: 0.94rem;\n  line-height: 0.94rem;\n  text-align: center;\n  color: #fff;\n  border-radius: 0.1rem;\n  background: #ff9800;\n}\n.placeholder {\n  color: #c9cacd;\n}\n/deep/.van-field__control {\n  color: rgba(0, 0, 0, 0.64);\n}\n/deep/.close-tips {\n  color: rgba(0, 0, 0, 0.64);\n}\n/deep/.van-cell__value--alone {\n  color: rgba(0, 0, 0, 0.64);\n}\n</style>\n"],"sourceRoot":"src/pages/executive-serveh5/views/filler"}]}