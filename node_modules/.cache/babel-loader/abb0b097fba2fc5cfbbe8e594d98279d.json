{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/plugins/core/permission.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/plugins/core/permission.js","mtime":1627979214287},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IiOwppbXBvcnQgX01lc3NhZ2VCb3gyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL21lc3NhZ2UtYm94LmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2VCb3ggZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZS1ib3giOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvZnV5dWV5aS9EZXNrdG9wL3ByYWN0aWNlL211dGlsd2FwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9mdXl1ZXlpL0Rlc2t0b3AvcHJhY3RpY2UvbXV0aWx3YXAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgcm91dGVyLCB7IGdlbmVyYXRlUm91dGVzIH0gZnJvbSAnLi4vLi4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL3N0b3JlJzsKaW1wb3J0IE5Qcm9ncmVzcyBmcm9tICducHJvZ3Jlc3MnOyAvLyBwcm9ncmVzcyBiYXIKCmltcG9ydCAnbnByb2dyZXNzL25wcm9ncmVzcy5jc3MnOyAvLyBwcm9ncmVzcyBiYXIgc3R5bGUKCmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnLi4vLi4vLi4vLi4vcGx1Z2lucy9jb3JlL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCk5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCnZhciB3aGl0ZUxpc3QgPSBbJy9sb2dpbicsICcvc2lnbi1pbicsICcvc3NvL2F1dGgnLCAnL2hvbWUnXTsgLy8gbm8gcmVkaXJlY3Qgd2hpdGVsaXN0Cgpyb3V0ZXIuYmVmb3JlRWFjaCggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHZhciBoYXNUb2tlbiwgaGFzQXBwRGF0YUxvYWRlZCwgX3lpZWxkJHN0b3JlJGRpc3BhdGNoLCBtZW51TGlzdCwgYWNjZXNzUm91dGVzOwoKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIC8vIHN0YXJ0IHByb2dyZXNzIGJhcgogICAgICAgICAgICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc2V0IHBhZ2UgdGl0bGUKCiAgICAgICAgICAgIGRvY3VtZW50LnRpdGxlID0gdG8ubWV0YS50aXRsZSB8fCBzdG9yZS5zdGF0ZS5zZXR0aW5ncy50aXRsZTsgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIGxvZ2dlZCBpbgoKICAgICAgICAgICAgaGFzVG9rZW4gPSBnZXRUb2tlbigpOwoKICAgICAgICAgICAgaWYgKCFoYXNUb2tlbikgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0NDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgaWYgKCEodG8ucGF0aCA9PT0gJy9zaWduLWluJykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLy8gaWYgaXMgbG9nZ2VkIGluLCByZWRpcmVjdCB0byB0aGUgaG9tZSBwYWdlCiAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsgLy8gaGFjazogaHR0cHM6Ly9naXRodWIuY29tL1BhbkppYUNoZW4vdnVlLWVsZW1lbnQtYWRtaW4vcHVsbC8yOTM5CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDI7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgLy8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIHVzZXIgaGFzIG9idGFpbmVkIGhpcyBwZXJtaXNzaW9uIHJvbGVzIHRocm91Z2ggZ2V0SW5mbwogICAgICAgICAgICAvLyBjb25zdCBoYXNSb2xlcyA9IHN0b3JlLmdldHRlcnMucm9sZXMgJiYgc3RvcmUuZ2V0dGVycy5yb2xlcy5sZW5ndGggPiAwOwogICAgICAgICAgICBoYXNBcHBEYXRhTG9hZGVkID0gISFzdG9yZS5nZXR0ZXJzLmhhc0FwcERhdGFMb2FkZWQ7CgogICAgICAgICAgICBpZiAoIWhhc0FwcERhdGFMb2FkZWQpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCdhdXRoL2dldEF1dGhEYXRhJyk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgX3lpZWxkJHN0b3JlJGRpc3BhdGNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgbWVudUxpc3QgPSBfeWllbGQkc3RvcmUkZGlzcGF0Y2gubWVudUxpc3Q7CiAgICAgICAgICAgIC8vIOiOt+WPluadg+mZkOaVsOaNrgogICAgICAgICAgICAvLyBnZW5lcmF0ZSBhY2Nlc3NpYmxlIHJvdXRlcyBtYXAgYmFzZWQgb24gcm9sZXMKICAgICAgICAgICAgLy8gY29uc3QgYWNjZXNzUm91dGVzID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goCiAgICAgICAgICAgIC8vICAgJ2F1dGgvZ2VuZXJhdGVSb3V0ZXMnLAogICAgICAgICAgICAvLyAgIG1lbnVMaXN0CiAgICAgICAgICAgIC8vICk7CiAgICAgICAgICAgIGFjY2Vzc1JvdXRlcyA9IGdlbmVyYXRlUm91dGVzKG1lbnVMaXN0KTsgLy8g55Sf5oiQ5YWB6K646K6/6Zeu55qE6Lev55SxCiAgICAgICAgICAgIC8vIGR5bmFtaWNhbGx5IGFkZCBhY2Nlc3NpYmxlIHJvdXRlcwoKICAgICAgICAgICAgY29uc29sZS5sb2coYWNjZXNzUm91dGVzLCAnYWFjY2Vzc1JvdXRlc3NzJyk7CiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKTsKICAgICAgICAgICAgc3RvcmUuY29tbWl0KCdhcHAvRklOSVNIX0RBVEFfTE9BRCcpOyAvLyDmlbDmja7liqDovb3lrozmiJAKICAgICAgICAgICAgLy8gaGFjayBtZXRob2QgdG8gZW5zdXJlIHRoYXQgYWRkUm91dGVzIGlzIGNvbXBsZXRlCiAgICAgICAgICAgIC8vIHNldCB0aGUgcmVwbGFjZTogdHJ1ZSwgc28gdGhlIG5hdmlnYXRpb24gd2lsbCBub3QgbGVhdmUgYSBoaXN0b3J5IHJlY29yZAoKICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDI2OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjY7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMTQpOwogICAgICAgICAgICAvLyByZW1vdmUgdG9rZW4gYW5kIGdvIHRvIGxvZ2luIHBhZ2UgdG8gcmUtbG9naW4KICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDMyOwogICAgICAgICAgICByZXR1cm4gX01lc3NhZ2VCb3guY29uZmlybSgn5b2T5YmN5pWw5o2u5Yqg6L295LiN56iz5a6a77yM6K+35oKo56iN5ZCO6YeN6K+VJywgJ+mUmeivrycsIHsKICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+mHjeaWsOWKoOi9veaVsOaNricsCiAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+eZu+W9lemhtemdoicsCiAgICAgICAgICAgICAgY2xvc2VPbkNsaWNrTW9kYWw6IGZhbHNlLAogICAgICAgICAgICAgIGNsb3NlT25QcmVzc0VzY2FwZTogZmFsc2UsCiAgICAgICAgICAgICAgc2hvd0Nsb3NlOiBmYWxzZQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDMyOgogICAgICAgICAgICAvLyDph43mlrDliqDovb3mlbDmja4KICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQyOwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDM1OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMzU7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0gX2NvbnRleHRbImNhdGNoIl0oMjkpOwogICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQxKTsgLy8g55m75Ye6CgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDA7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgndXNlci9yZXNldFRva2VuJyk7CgogICAgICAgICAgY2FzZSA0MDoKICAgICAgICAgICAgbmV4dCgiL3NpZ24taW4/cmVkaXJlY3Q9Ii5jb25jYXQodG8ucGF0aCkpOwogICAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwoKICAgICAgICAgIGNhc2UgNDI6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0NTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA0NDoKICAgICAgICAgICAgLyogaGFzIG5vIHRva2VuKi8KICAgICAgICAgICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAgICAgICAgIC8vIGluIHRoZSBmcmVlIGxvZ2luIHdoaXRlbGlzdCwgZ28gZGlyZWN0bHkKICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8gb3RoZXIgcGFnZXMgdGhhdCBkbyBub3QgaGF2ZSBwZXJtaXNzaW9uIHRvIGFjY2VzcyBhcmUgcmVkaXJlY3RlZCB0byB0aGUgbG9naW4gcGFnZS4KICAgICAgICAgICAgICBuZXh0KCIvc2lnbi1pbj9yZWRpcmVjdD0iLmNvbmNhdCh0by5wYXRoKSk7CiAgICAgICAgICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgICAgICAgICAgfQoKICAgICAgICAgIGNhc2UgNDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxNCwgMjZdLCBbMjksIDM1XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpKTsKcm91dGVyLmFmdGVyRWFjaChmdW5jdGlvbiAoKSB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/charity-foundation/plugins/core/permission.js"],"names":["router","generateRoutes","store","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","state","settings","hasToken","path","done","hasAppDataLoaded","getters","dispatch","menuList","accessRoutes","console","log","addRoutes","commit","replace","error","confirm","confirmButtonText","cancelButtonText","closeOnClickModal","closeOnPressEscape","showClose","indexOf","afterEach"],"mappings":"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","sourcesContent":["import router, { generateRoutes } from '../../router';\nimport store from '../../store';\nimport { MessageBox } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\nimport 'nprogress/nprogress.css'; // progress bar style\nimport { getToken } from '../../../../plugins/core/auth'; // get token from cookie\n\nNProgress.configure({ showSpinner: false }); // NProgress Configuration\n\nconst whiteList = ['/login', '/sign-in', '/sso/auth', '/home']; // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n  // start progress bar\n  NProgress.start();\n\n  // set page title\n  document.title = to.meta.title || store.state.settings.title;\n\n  // determine whether the user has logged in\n  const hasToken = getToken();\n  if (hasToken) {\n    if (to.path === '/sign-in') {\n      // if is logged in, redirect to the home page\n      next();\n      NProgress.done(); // hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      // const hasRoles = store.getters.roles && store.getters.roles.length > 0;\n      const hasAppDataLoaded = !!store.getters.hasAppDataLoaded;\n      if (hasAppDataLoaded) {\n        next();\n      } else {\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          // await store.dispatch('user/getInfo'); // 加载用户信息\n\n          // await store.dispatch('dict/ajaxGetData'); // 加载数据字典\n\n          let { menuList } = await store.dispatch('auth/getAuthData'); // 获取权限数据\n\n          // generate accessible routes map based on roles\n          // const accessRoutes = await store.dispatch(\n          //   'auth/generateRoutes',\n          //   menuList\n          // );\n          const accessRoutes = generateRoutes(menuList); // 生成允许访问的路由\n          // dynamically add accessible routes\n          console.log(accessRoutes, 'aaccessRoutesss');\n          router.addRoutes(accessRoutes);\n\n          store.commit('app/FINISH_DATA_LOAD'); // 数据加载完成\n\n          // hack method to ensure that addRoutes is complete\n          // set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true });\n        } catch (error) {\n          // remove token and go to login page to re-login\n          console.error(error);\n          try {\n            await MessageBox.confirm(\n              '当前数据加载不稳定，请您稍后重试',\n              '错误',\n              {\n                confirmButtonText: '重新加载数据',\n                cancelButtonText: '登录页面',\n                closeOnClickModal: false,\n                closeOnPressEscape: false,\n                showClose: false\n              }\n            );\n            // 重新加载数据\n            next({\n              ...to,\n              replace: true\n            });\n          } catch (e) {\n            console.error(e);\n            // 登出\n            await store.dispatch('user/resetToken');\n            next(`/sign-in?redirect=${to.path}`);\n            NProgress.done();\n          }\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next();\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/sign-in?redirect=${to.path}`);\n      NProgress.done();\n    }\n  }\n});\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done();\n});\n"]}]}