{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/PaperManage/MarkSubjectChooseMode/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-admin/views/components/ExamManage/PaperManage/MarkSubjectChooseMode/index.vue","mtime":1645178321164},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- MarkSubjectChooseMode -->\n<template>\n  <div class=\"content\">\n    <div class=\"flex title\">\n      <h2>\n        {{ $route.query.gradeNameList }}{{ $route.query.examName\n        }}<br />试卷：{{ $route.query.paperName }}\n      </h2>\n      <div class=\"btn-box\">\n        <el-button type=\"primary\" @click=\"save\" size=\"mini\" :loading=\"loading\"\n          >保存</el-button\n        >\n        <el-button\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd(tableData.length)\"\n          >新增题号</el-button\n        >\n      </div>\n    </div>\n    <el-table\n      :data=\"tableData\"\n      border\n      style=\"width: 100%\"\n      :row-style=\"{ 'font-size': '14px', color: 'rgba(0, 0, 0, 0.65)' }\"\n      :header-cell-style=\"{\n        background: '#F3F4F7',\n        'text-align': 'cneter',\n        color: 'rgba(0, 0, 0, 0.85)',\n        'font-weight': 600\n      }\"\n      v-loading=\"loading\"\n    >\n      <el-table-column label=\"序号\" type=\"index\" width=\"60\"> </el-table-column>\n      <el-table-column label=\"题号\" width=\"150\">\n        <template slot-scope=\"scope\">\n          <el-input\n            v-emoji\n            type=\"textarea\"\n            :rows=\"1\"\n            @focus=\"changePage\"\n            maxlength=\"20\"\n            size=\"small\"\n            v-model=\"scope.row.questionNumber\"\n            placeholder=\"题号\"\n          ></el-input>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"分值\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-input\n            @focus=\"changePage\"\n            size=\"small\"\n            @input=\"\n              numberChange(scope.$index, arguments[0], routeParams.totalScore)\n            \"\n            @blur=\"\n              numberChangeBlur(\n                scope.$index,\n                scope.row.questionScore,\n                routeParams.totalScore\n              )\n            \"\n            v-model.number=\"scope.row.questionScore\"\n            placeholder=\"请输入分值\"\n          ></el-input>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"_selfKnowledgeArr\" label=\"考察知识点\">\n        <template slot-scope=\"scope\">\n          <el-cascader\n            placeholder=\"选择知识点\"\n            :ref=\"'knowledgeCascader' + scope.$index\"\n            filterable\n            :options=\"treedKnowledgeData\"\n            :props=\"props\"\n            v-model=\"scope.row._selfKnowledgeCheckedArr\"\n            @change=\"handleChangeKnowledge(scope.$index, scope.row)\"\n          ></el-cascader>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"abilityList\" label=\"考察能力\">\n        <template slot-scope=\"scope\">\n          <div class=\"flex scope-box\">\n            <el-select\n              v-model=\"scope.row._selfAbilityArr\"\n              multiple\n              filterable\n              placeholder=\"请选择\"\n              value-key=\"id\"\n              @change=\"handleChangeAbility\"\n            >\n              <el-option\n                v-for=\"item in treedAbilityData\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item\"\n              >\n              </el-option>\n            </el-select>\n            <div class=\"operat-box\">\n              <div class=\"operat-box-content\">\n                <i\n                  class=\"el-icon-circle-plus-outline\"\n                  @click=\"handleAdd(scope.$index, scope.row)\"\n                ></i>\n                <i\n                  class=\"el-icon-remove-outline\"\n                  @click=\"del(scope.$index, scope.row)\"\n                ></i>\n              </div>\n            </div>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport api from './../../../../../api/question';\nexport default {\n  name: 'MarkSubjectChooseMode',\n  data() {\n    return {\n      changeNosave: false,\n      routeParams: {}, //路由接收参数\n      tableData: [],\n      item: {\n        questionNumber: null,\n        questionScore: '',\n        _selfKnowledgeArr: [],\n        _selfKnowledgeCheckedArr: [],\n        _selfAbilityArr: []\n      },\n      subjectList: [],\n      confirmLoading: false,\n      loading: false,\n      treedData: [],\n      props: {\n        multiple: true,\n        children: 'children',\n        label: 'name',\n        value: 'id',\n        emitPath: false\n      },\n      props2: {\n        multiple: true,\n        children: 'children',\n        emitPath: false\n      },\n      currentItem: {}, //当前操作项\n      currentIndex: null, //当前操作项index\n      stageList: [], //学段列表\n      treedKnowledgeData: [],\n      treedAbilityData: [],\n      chooseNodeLength: 0,\n      defaultCheckedKeys: [] //默认选中节点\n    };\n  },\n\n  components: {},\n\n  computed: {},\n\n  created() {\n    this.routeParams = { ...this.$route.query };\n    console.log(this.routeParams);\n    // 题目列表\n    this.getQuestionById();\n  },\n  mounted() {\n    window.onbeforeunload = function(event) {\n      return confirm('确定退出吗');\n    };\n  },\n  beforeDestroy() {\n    window.onbeforeunload = null;\n  },\n  methods: {\n    // 题目列表\n    async getQuestionById() {\n      this.loading = true;\n      await this.getKnowledge();\n      await this.getAbility();\n      api.getQuestionById(this.routeParams.paperId).then(({ data }) => {\n        data.forEach(item => {\n          let knowledgeList = item.knowledgeList.split(',');\n          let abilityList = item.abilityList.split(',');\n          let knowledgeNameList = item.knowledgeNameList.split(';');\n          let abilityNameList = item.abilityNameList.split(';');\n          let abilityDescList =\n            item.abilityDescList && item.abilityDescList.split('$$');\n          let knowledgePathIdsList = item.pathIdsList.split(';');\n          let _selfKnowledgeArr = [];\n          let _selfKnowledgeCheckedArr = [];\n          let _selfAbilityArr = [];\n\n          knowledgeList.forEach((knowledgeItem, index) => {\n            _selfKnowledgeArr.push({\n              id: knowledgeItem,\n              name: knowledgeNameList[index],\n              pathIds: knowledgePathIdsList[index]\n            });\n            _selfKnowledgeCheckedArr.push(knowledgeItem);\n          });\n          abilityList.forEach((abilityItem, index) => {\n            _selfAbilityArr.push({\n              id: parseInt(abilityItem),\n              name: abilityNameList[index],\n              intro: (abilityDescList && abilityDescList[index]) || ' '\n            });\n          });\n          this.tableData.push({\n            questionNumber: item.questionNumber,\n            questionScore: item.questionScore,\n            _selfKnowledgeArr,\n            _selfKnowledgeCheckedArr,\n            _selfAbilityArr\n          });\n        });\n        if (data.length === 0) {\n          let hasPaperId = false;\n          let localArr =\n            localStorage.getItem('localArr') &&\n            JSON.parse(localStorage.getItem('localArr'));\n          localArr.forEach(item => {\n            if (\n              item.paperId == this.routeParams.paperId &&\n              item.tableData.length\n            ) {\n              hasPaperId = true;\n              this.tableData.push(...item.tableData);\n            }\n          });\n          if (!hasPaperId) {\n            for (let i = 1; i < Number(this.routeParams.num) + 1; i++) {\n              this.tableData.push({ ...this.item, questionNumber: i });\n            }\n          }\n        }\n        this.loading = false;\n        console.log('loading完成');\n      });\n    },\n    // 知识点树数据\n    async getKnowledge() {\n      let { data } = await api.getKnowledge(\n        this.routeParams.stageId,\n        this.routeParams.subjectId\n      );\n      this.treedKnowledgeData = this.dealTree(data);\n    },\n    // 能力点数据\n    async getAbility() {\n      let { data } = await api.getAbility(\n        this.routeParams.stageId,\n        this.routeParams.subjectId\n      );\n      this.treedAbilityData = data;\n    },\n    // 保存前验证\n    save() {\n      let arr = [];\n      let _selfTotalScore = 0;\n      let arrD = []; //this.tableData中不重复数据\n      let emptyFlag = false; //列表有空\n      let repeatIndex = []; //重复题号\n      if (this.tableData.length === 0) {\n        return this.$message({\n          type: 'warning',\n          message: '缺少题目信息，无法提交'\n        });\n      }\n      try {\n        this.tableData.forEach((item, index) => {\n          let abilityNameStr = '';\n          let abilityIdStr = '';\n          let abilityDescListStr = '';\n          let knowledgeNameStr = '';\n          let knowledgeIdStr = '';\n          let knowledgePathIdsStr = '';\n\n          _selfTotalScore += item.questionScore;\n          item._selfAbilityArr.forEach(ability => {\n            abilityNameStr += ability.name + ';';\n            abilityIdStr += ability.id + ',';\n            if (ability.intro) {\n              abilityDescListStr += ability.intro + '$$';\n            } else {\n              abilityDescListStr += ' ' + '$$';\n            }\n            console.log(abilityDescListStr);\n          });\n          item._selfKnowledgeArr.forEach(knowledge => {\n            knowledgeNameStr += knowledge.name + ';';\n            knowledgeIdStr += knowledge.id + ',';\n            if (knowledge.pathIds.charAt(knowledge.pathIds.length - 1) == ',') {\n              knowledgePathIdsStr +=\n                knowledge.pathIds.substr(0, knowledge.pathIds.length - 1) + ';';\n            } else {\n              knowledgePathIdsStr += knowledge.pathIds + ';';\n            }\n          });\n          // 列表有空\n          if (\n            item.questionNumber == '' ||\n            item.questionScore == '' ||\n            knowledgeNameStr == '' ||\n            abilityNameStr == ''\n          ) {\n            emptyFlag = true;\n            this.$message({\n              type: 'warning',\n              message: `第${index + 1}行信息不完整，请补充`\n            });\n            throw Error();\n          }\n          // 题号重复判断\n          if (\n            arrD.every(itemD => itemD.questionNumber != item.questionNumber)\n          ) {\n            arrD.push(item);\n          } else {\n            repeatIndex.push(index);\n          }\n          arr.push({\n            questionNumber: item.questionNumber,\n            questionScore: item.questionScore,\n            abilityNameList: abilityNameStr.substr(\n              0,\n              abilityNameStr.length - 1\n            ),\n            abilityList: abilityIdStr.substr(0, abilityIdStr.length - 1),\n            abilityDescList: abilityDescListStr.substr(\n              0,\n              abilityDescListStr.length - 2\n            ),\n            knowledgeNameList: knowledgeNameStr.substr(\n              0,\n              knowledgeNameStr.length - 1\n            ),\n            knowledgeList: knowledgeIdStr.substr(0, knowledgeIdStr.length - 1),\n            paperId: this.routeParams.paperId,\n            pathIdsList: knowledgePathIdsStr\n          });\n        });\n      } catch (e) {}\n      // 列表有空\n      if (emptyFlag) return;\n      // 题号重复\n      if (repeatIndex.length > 0) {\n        let repeatFirstIndex = this.repeatQuestion(repeatIndex);\n        return this.$message({\n          type: 'warning',\n          message: `第${repeatFirstIndex + 1}行和第${repeatIndex[0] +\n            1}行题号重复，请检查`\n        });\n      }\n      // 总分不等于 满分\n      if (_selfTotalScore != this.routeParams.totalScore) {\n        this.tipTotalScore(_selfTotalScore, this.routeParams.totalScore, arr);\n        return;\n      }\n      this.saveQuestion(arr);\n    },\n    // 小题分相加不等于总分提示\n    tipTotalScore(_selfTotalScore, totalScore, arr) {\n      if (_selfTotalScore > 300) {\n        return this.$message({\n          type: 'warning',\n          message: '满分不能超过300分'\n        });\n      } else {\n        this.$confirm(\n          `<div style=\"text-align:center;padding:20px 0\">小题分相加等于${_selfTotalScore}分，与预设试卷满分${totalScore}不符，<br>继续提交将把试卷满分设为${_selfTotalScore}分，请确认！</div>`,\n          '提醒',\n          {\n            dangerouslyUseHTMLString: true,\n            confirmButtonText: '继续提交',\n            cancelButtonText: '返回检查',\n            type: ''\n          }\n        ).then(() => {\n          this.saveQuestion(arr);\n        });\n      }\n    },\n    // 题号重复\n    repeatQuestion(repeatIndex) {\n      let repeatFirstIndex = this.tableData.findIndex(item => {\n        return (\n          item.questionNumber == this.tableData[repeatIndex[0]].questionNumber\n        );\n      });\n      return repeatFirstIndex;\n    },\n    // 保存数据\n    saveQuestion(arr) {\n      this.loading = true;\n      api\n        .saveQuestion(\n          this.routeParams.paperId,\n          this.routeParams.markType,\n          this.routeParams.stageId,\n          arr\n        )\n        .then(() => {\n          this.$message({\n            type: 'success',\n            message: '保存成功!'\n          });\n          this.changeNosave = false;\n          this.loading = false;\n        })\n        .catch(() => {\n          this.loading = false;\n        });\n    },\n    // 删除\n    del(index, row) {\n      if (\n        !row.questionScore &&\n        row._selfKnowledgeArr.length === 0 &&\n        row._selfAbilityArr.length === 0\n      ) {\n        this.tableData.splice(index, 1);\n      } else {\n        this.$confirm('删除后不可恢复，确定删除？', '删除确认', {\n          customClass: 'box-danger',\n          center: true,\n          type: 'warning'\n        })\n          .then(() => {\n            this.$message({\n              type: 'success',\n              message: '删除成功!'\n            });\n            this.tableData.splice(index, 1);\n            this.changePage();\n          })\n          .catch(() => {\n            this.$message({\n              type: 'info',\n              message: '已取消删除'\n            });\n          });\n      }\n      this.setLocalStorageVal();\n    },\n    // 新增\n    handleAdd(index) {\n      if (this.tableData.length < 100) {\n        this.tableData.splice(index + 1, 0, { ...this.item });\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '题目数量最多为100，无法新增更多'\n        });\n      }\n    },\n    // 选择知识点\n    handleChangeKnowledge(index, row) {\n      const checkedNodes = this.$refs[\n        'knowledgeCascader' + index\n      ].getCheckedNodes(true);\n      row._selfKnowledgeArr = [];\n      checkedNodes.forEach(node => {\n        row._selfKnowledgeCheckedArr.forEach(item => {\n          if (item === node.data.id) {\n            row._selfKnowledgeArr.push({\n              id: node.data.id,\n              name: node.data.name,\n              pathIds: node.data.pathIds\n            });\n          }\n        });\n      });\n      this.setLocalStorageVal();\n    },\n    // 选择能力点\n    handleChangeAbility() {\n      this.setLocalStorageVal();\n    },\n    // 设置 localStorage\n    setLocalStorageVal() {\n      let localArr = JSON.parse(localStorage.getItem('localArr'));\n      console.log(localArr, '设置前');\n      localArr.forEach(item => {\n        if (item.paperId == this.routeParams.paperId) {\n          item.tableData = this.tableData;\n          let isEmpty = this.judgeArrItemEmpty(this.tableData);\n          item.hasInputVal = !isEmpty;\n        }\n      });\n      localStorage.setItem('localArr', JSON.stringify(localArr));\n      console.log(JSON.parse(localStorage.getItem('localArr')), '设置后');\n    },\n    // 删除选中的知识点/能力点\n    delChild(type, row, childIndex) {\n      switch (type) {\n        case 'knowledge':\n          row._selfKnowledgeArr.splice(childIndex, 1);\n          break;\n        case 'ability':\n          row._selfAbilityArr.splice(childIndex, 1);\n          break;\n      }\n      this.changePage();\n    },\n    // 设定数字输入范围\n    numberChange(index, val, maxNum) {\n      val = val.replace(/[^0-9.]/g, '');\n      if (val === '') {\n        this.tableData[index].questionScore = '';\n        return;\n      }\n      if (val == '0') return;\n      let reg = /^[0-9]+(\\.?[0-9]{0,1})$/;\n      if (reg.test(val)) {\n        this.tableData[index].questionScore = val;\n        if (Number(val) > maxNum) {\n          this.tableData[index].questionScore = maxNum;\n        }\n      } else {\n        this.tableData[index].questionScore = maxNum;\n      }\n    },\n    // 数字输入框失去焦点\n    numberChangeBlur(index, val, maxNum) {\n      if (val === '') {\n        this.tableData[index].questionScore = '';\n        return;\n      }\n      val = Number(val);\n      val == 0 ? (val = Number(maxNum)) : '';\n      this.tableData[index].questionScore = val;\n      this.setLocalStorageVal();\n    },\n    // 页面有变动\n    changePage() {\n      this.changeNosave = true;\n    },\n    // 知识点树 处理加disable\n    dealTree(data) {\n      const arrayTreeAddLevel = array => {\n        if (!Array.isArray(array)) return [];\n        const recursive = (array, level = 0) => {\n          level++;\n          return array.map(item => {\n            // item.disabled = level < 3;\n            item.id = item.knowledgePointId;\n            item.name = item.knowledgePointName;\n            if (item.children && item.children.length) {\n              recursive(item.children, level);\n            } else {\n              delete item.children;\n            }\n            return item;\n          });\n        };\n        return recursive(array);\n      };\n      // const fn = arrayTreeAddLevel;\n      // fn(data);\n      return arrayTreeAddLevel(data);\n    },\n    // 判断知识点/能力点是否为空\n    judgeArrItemEmpty(arr) {\n      let flag = arr.every(item => {\n        return (\n          item._selfKnowledgeArr.length === 0 &&\n          item._selfAbilityArr.length === 0\n        );\n      });\n      // arr每一项知识点/能力点为空返回true\n      return flag;\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    if (this.changeNosave) {\n      this.$confirm('您填写的内容未保存，确定离开吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        distinguishCancelAndClose: false\n      }).then(() => {\n        next();\n      });\n      next(false);\n    } else {\n      next();\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n.content {\n  .title {\n    justify-content: space-between;\n  }\n  h2 {\n    font-size: 16px;\n    margin-bottom: 17px;\n    font-weight: 600;\n  }\n  .icon-choose {\n    width: 16px;\n    height: 16px;\n    margin-right: 5px;\n    vertical-align: middle;\n    & + span {\n      vertical-align: middle;\n    }\n  }\n  .scope-box {\n    align-items: center;\n    justify-content: space-between;\n    .choose-box {\n      width: 100%;\n      justify-content: space-between;\n      padding-right: 8px;\n    }\n    .el-icon-edit-outline {\n      width: 16px;\n    }\n  }\n  .choose-box {\n    align-items: center;\n  }\n  .operat-box {\n    width: 40px;\n    flex-shrink: 0;\n    text-align: center;\n    &-content {\n      display: none;\n    }\n\n    .el-icon-circle-plus-outline {\n      font-weight: normal;\n      margin-right: 5px;\n      cursor: pointer;\n    }\n    .el-icon-remove-outline {\n      font-weight: normal;\n      color: indianred;\n      cursor: pointer;\n    }\n  }\n  .list-box {\n    .item {\n      display: inline-block;\n      margin-right: 20px;\n      margin-bottom: 5px;\n      margin-top: 5px;\n      background: rgba(99, 149, 250, 0.2);\n      border-radius: 11px;\n      padding: 0 10px;\n      box-sizing: border-box;\n      vertical-align: middle;\n      &:hover {\n        margin-right: 8px;\n        padding-right: 5px;\n        .el-icon-close {\n          display: inline-block;\n        }\n      }\n      .el-icon-close {\n        color: #999;\n        padding-left: 1px;\n        line-height: 22px;\n        display: none;\n        float: left;\n      }\n\n      span {\n        line-height: 22px;\n        box-sizing: border-box;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        cursor: pointer;\n        display: -webkit-box;\n        max-width: 180px;\n        height: 22px;\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        float: left;\n      }\n    }\n  }\n  [class*=' el-icon-'],\n  [class^='el-icon-'] {\n    color: #5481e9;\n    font-weight: 600;\n    font-size: 16px;\n    cursor: pointer;\n  }\n  /deep/ .el-table {\n    font-size: 14px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    font-weight: 400;\n    color: rgba(0, 0, 0, 0.65);\n    .el-table__body {\n      tr:hover {\n        .operat-box-content {\n          display: block;\n        }\n      }\n    }\n    .el-select {\n      width: calc(100% - 60px);\n    }\n  }\n  /deep/ .el-table thead,\n  /deep/ .el-table th {\n    background-color: #fafafa;\n    font-size: 14px;\n    font-family: PingFangSC-Medium, PingFang SC;\n    font-weight: 600;\n    color: rgba(0, 0, 0, 0.85);\n  }\n  /deep/ .el-table th {\n    padding: 12px 0;\n  }\n  /deep/ .el-dialog__footer {\n    text-align: center;\n  }\n  /deep/ .el-button {\n    border-radius: 2px;\n    border: none;\n    color: #fff;\n    font-size: 14px;\n    font-weight: normal;\n  }\n  /deep/ .el-button--default {\n    border: 1px solid #5481e9;\n    color: #5481e9;\n  }\n  /deep/ .el-button--primary {\n    background: #5481e9;\n    border-color: #5481e9;\n    border-radius: 2px;\n  }\n  /deep/ .el-button--text {\n    color: #5481e9;\n    font-size: 14px;\n    font-family: PingFangSC-Regular, PingFang SC;\n    font-weight: 400;\n    background: none;\n  }\n  .el-icon-close,\n  .el-icon-edit {\n    cursor: pointer;\n  }\n  /deep/ .el-dialog {\n    .el-dialog__header {\n      text-align: left;\n      border-bottom: 1px solid #f5f5f5;\n    }\n    .el-button--default {\n      border: 1px solid #5481e9;\n      background: #fff;\n      color: #5481e9;\n    }\n    .el-button + .el-button {\n      margin-left: 12px;\n    }\n    .el-dialog__body {\n      padding: 16px 20px;\n    }\n    .el-form-item {\n      float: left;\n      margin-bottom: 16px;\n    }\n    .el-form-item__label {\n    }\n    .el-form-item__content {\n      float: left;\n      margin-left: 0px !important;\n    }\n    .tree-box {\n      height: 392px;\n      overflow-y: auto;\n      background: #f6f6f6;\n      border-radius: 2px;\n      padding: 16px;\n      box-sizing: border-box;\n    }\n    .el-tree {\n      background: #f6f6f6;\n    }\n  }\n  /deep/ .el-checkbox__input.is-disabled {\n    display: none;\n  }\n  .choose-num {\n    font-size: 14px;\n    color: #000;\n    float: right;\n    line-height: 40px;\n    span {\n      color: #5481e9;\n      padding-left: 10px;\n    }\n  }\n}\n/deep/ .el-cascader {\n  width: 100%;\n}\n/deep/ .el-tag {\n  cursor: pointer;\n  margin-right: 16px;\n  .el-tag__close {\n    display: none;\n  }\n  &:hover {\n    margin-right: 0px;\n    .el-tag__close {\n      display: inline-block;\n    }\n  }\n}\n/deep/ textarea {\n  resize: none;\n}\n</style>\n"],"sourceRoot":"src/pages/score-analysis-admin/views/components/ExamManage/PaperManage/MarkSubjectChooseMode"}]}