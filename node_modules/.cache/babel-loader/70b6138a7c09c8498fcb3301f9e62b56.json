{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/hoc/form-hoc.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/hoc/form-hoc.js","mtime":1645176309837},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Z1eXVleWkvRGVza3RvcC9wcmFjdGljZS9tdXRpbHdhcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKaW1wb3J0IF9NZXNzYWdlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9tZXNzYWdlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2UgZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvZnV5dWV5aS9EZXNrdG9wL3ByYWN0aWNlL211dGlsd2FwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IENGb3JtQnV0dG9uIGZyb20gJ0AvcGFnZXMvc2ltcy9jb21wb25lbnRzL2NvbW1vbi9DRm9ybUJ1dHRvbic7CgovKioKICog6KGo5Y2V6auY6Zi257uE5Lu2LeWMheijheaMiemSruaPkOS6pOeKtuaAgQogKiB3cmFw57uE5Lu25LiA5a6a6KaB5YyF5ZCr77yaCiAqICAtIGNsZWFyVmFsaWRhdGUoKSDmuIXpmaTmoKHpqozmlrnms5UKICogIC0gdmFsaWRhdGUoKSDmoKHpqozmlrnms5UKICogIC0gZm9ybURhdGEg6KGo5Y2V5pWw5o2u5bGe5oCnCiAqICAtIGNoYW5nZS1tb2RlbCDkuovku7YKICogQHBhcmFtIHsqfSB3cmFwIOiiq+WMheijhee7hOS7tgogKiBAcGFyYW0geyp9IHN1Ym1pdEZuIOaPkOS6pOaWueazlQogKiBAcGFyYW0geyp9IGNvbmZpZyDphY3nva4KICogQHJldHVybnMge0Z1bmN0aW9ufQogKi8KZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRm9ybUhvYyh3cmFwLCBzdWJtaXRGbikgewogIHJldHVybiB7CiAgICBuYW1lOiAnRm9ybUhvYycsCiAgICBwcm9wczogewogICAgICAvKioKICAgICAgICog6KGo5Y2VCiAgICAgICAqLwogICAgICBmb3JtRGF0YTogewogICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICAgIHJldHVybiB7fTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgICByZXR1cm4gewogICAgICAgIC8qKiDooajljZXmlbDmja4gKi8KICAgICAgICBtb2RlbDoge30sCgogICAgICAgIC8qKiDmj5DkuqTliqDovb3kuK0gKi8KICAgICAgICBjb25maXJtTG9hZGluZzogZmFsc2UKICAgICAgfTsKICAgIH0sCiAgICB3YXRjaDogewogICAgICAvKioKICAgICAgICog5ZCR5LiL5Lyg6YCS6KGo5Y2V5pWw5o2u5pu05pawCiAgICAgICAqLwogICAgICBmb3JtRGF0YTogZnVuY3Rpb24gZm9ybURhdGEoKSB7CiAgICAgICAgdGhpcy5tb2RlbCA9IHRoaXMuZm9ybURhdGE7CiAgICAgIH0sCgogICAgICAvKioKICAgICAgICog5ZCR5LiK5Lyg6YCS6KGo5Y2V5pWw5o2u5pu05pawCiAgICAgICAqLwogICAgICBtb2RlbDogZnVuY3Rpb24gbW9kZWwoKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlLW1vZGVsJywgdGhpcy5tb2RlbCk7CiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIC8qKgogICAgICAgKiDmj5DkuqQKICAgICAgICovCiAgICAgIGhhbmRsZUNvbmZpcm06IGZ1bmN0aW9uIGhhbmRsZUNvbmZpcm0oKSB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJHJlZnMud3JhcC52YWxpZGF0ZSgpOwoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgICAgX3RoaXMuY29uZmlybUxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgIHJldHVybiBzdWJtaXRGbihfdGhpcy5tb2RlbCk7CgogICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ2ZpbmlzaCcpOwoKICAgICAgICAgICAgICAgICAgX01lc3NhZ2Uuc3VjY2Vzcygn5pON5L2c5oiQ5YqfJyk7CgogICAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE0OwogICAgICAgICAgICAgICAgICBfdGhpcy5jb25maXJtTG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDE0KTsKCiAgICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwsIDE0LCAxN10sIFsxLCA2XV0pOwogICAgICAgIH0pKSgpOwogICAgICB9LAoKICAgICAgLyoqCiAgICAgICAqIOmHjee9rgogICAgICAgKi8KICAgICAgaGFuZGxlUmVzZXQ6IGZ1bmN0aW9uIGhhbmRsZVJlc2V0KCkgewogICAgICAgIHRoaXMubW9kZWwgPSB7fTsKICAgICAgICB0aGlzLiRyZWZzLndyYXAuY2xlYXJWYWxpZGF0ZSgpOwogICAgICAgIHRoaXMuJGVtaXQoJ3Jlc2V0Jyk7CiAgICAgIH0sCgogICAgICAvKioKICAgICAgICog6KGo5Y2V5pWw5o2u5pS55Y+YCiAgICAgICAqIEBwYXJhbSB7Kn0gbW9kZWwg5pWw5o2uCiAgICAgICAqLwogICAgICBoYW5kbGVDaGFuZ2VNb2RlbDogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlTW9kZWwobW9kZWwpIHsKICAgICAgICB0aGlzLm1vZGVsID0gbW9kZWw7CiAgICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlLW1vZGVsJywgdGhpcy5tb2RlbCk7CiAgICAgIH0KICAgIH0sCiAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgaCA9IGFyZ3VtZW50c1swXTsKICAgICAgcmV0dXJuIGgoImRpdiIsIFtoKHdyYXAsIHsKICAgICAgICAicmVmIjogIndyYXAiLAogICAgICAgICJhdHRycyI6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kYXR0cnMpLCB7fSwgewogICAgICAgICAgImZvcm1EYXRhIjogdGhpcy5tb2RlbAogICAgICAgIH0pLAogICAgICAgICJvbiI6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kbGlzdGVuZXJzKSwge30sIHsKICAgICAgICAgICJjaGFuZ2VNb2RlbCI6IHRoaXMuaGFuZGxlQ2hhbmdlTW9kZWwKICAgICAgICB9KSwKICAgICAgICAic2NvcGVkU2xvdHMiOiB0aGlzLiRzY29wZWRTbG90cwogICAgICB9KSwgaChDRm9ybUJ1dHRvbiwgewogICAgICAgICJhdHRycyI6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy4kYXR0cnMpLCB7fSwgewogICAgICAgICAgImxvYWRpbmciOiB0aGlzLmNvbmZpcm1Mb2FkaW5nCiAgICAgICAgfSksCiAgICAgICAgIm9uIjogewogICAgICAgICAgImNvbmZpcm0iOiBmdW5jdGlvbiBjb25maXJtKCkgewogICAgICAgICAgICBfdGhpczIuaGFuZGxlQ29uZmlybS5hcHBseShfdGhpczIsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9LAogICAgICAgICAgInJlc2V0IjogdGhpcy5oYW5kbGVSZXNldAogICAgICAgIH0KICAgICAgfSldKTsKICAgIH0KICB9Owp9"},{"version":3,"sources":["/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/hoc/form-hoc.js"],"names":["CFormButton","FormHoc","wrap","submitFn","name","props","formData","type","Object","default","data","model","confirmLoading","watch","$emit","methods","handleConfirm","$refs","validate","success","handleReset","clearValidate","handleChangeModel","render","$attrs","$listeners","$scopedSlots"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,4CAAxB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,QAAvB,EAAiC;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,SADD;AAELC,IAAAA,KAAK,EAAE;AACL;AACN;AACA;AACMC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAEC,MADE;AAERC,QAAAA,OAAO,EAAE;AAAA,iBAAO,EAAP;AAAA;AAFD;AAJL,KAFF;AAWLC,IAAAA,IAXK,kBAWE;AACL,aAAO;AACL;AACAC,QAAAA,KAAK,EAAE,EAFF;;AAGL;AACAC,QAAAA,cAAc,EAAE;AAJX,OAAP;AAMD,KAlBI;AAmBLC,IAAAA,KAAK,EAAE;AACL;AACN;AACA;AACMP,MAAAA,QAJK,sBAIM;AACT,aAAKK,KAAL,GAAa,KAAKL,QAAlB;AACD,OANI;;AAOL;AACN;AACA;AACMK,MAAAA,KAVK,mBAUG;AACN,aAAKG,KAAL,CAAW,cAAX,EAA2B,KAAKH,KAAhC;AACD;AAZI,KAnBF;AAiCLI,IAAAA,OAAO,EAAE;AACP;AACN;AACA;AACYC,MAAAA,aAJC,2BAIe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAIV,KAAI,CAACC,KAAL,CAAWf,IAAX,CAAgBgB,QAAhB,EAJU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAQlB,kBAAA,KAAI,CAACN,cAAL,GAAsB,IAAtB;AARkB;AAAA,yBASZT,QAAQ,CAAC,KAAI,CAACQ,KAAN,CATI;;AAAA;AAUlB,kBAAA,KAAI,CAACG,KAAL,CAAW,QAAX;;AACA,2BAAQK,OAAR,CAAgB,MAAhB;;AAXkB;AAAA;AAalB,kBAAA,KAAI,CAACP,cAAL,GAAsB,KAAtB;AAbkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAerB,OAnBM;;AAoBP;AACN;AACA;AACMQ,MAAAA,WAvBO,yBAuBO;AACZ,aAAKT,KAAL,GAAa,EAAb;AACA,aAAKM,KAAL,CAAWf,IAAX,CAAgBmB,aAAhB;AACA,aAAKP,KAAL,CAAW,OAAX;AACD,OA3BM;;AA4BP;AACN;AACA;AACA;AACMQ,MAAAA,iBAhCO,6BAgCWX,KAhCX,EAgCkB;AACvB,aAAKA,KAAL,GAAaA,KAAb;AACA,aAAKG,KAAL,CAAW,cAAX,EAA2B,KAAKH,KAAhC;AACD;AAnCM,KAjCJ;AAsELY,IAAAA,MAtEK,oBAsEI;AAAA;;AAAA;AACP;AAAA,eAIU,MAJV;AAAA,iDAKmB,KAAKC,MALxB;AAAA,sBAOgB,KAAKb;AAPrB;AAAA,8CAMgB,KAAKc,UANrB;AAAA,yBASqB,KAAKH;AAT1B;AAAA,uBAQmB,KAAKI;AARxB;AAAA,iDAamB,KAAKF,MAbxB;AAAA,qBAce,KAAKZ;AAdpB;AAAA;AAAA,qBAeiB,mBAAa;AACtB,YAAA,MAAI,CAACI,aAAL,OAAA,MAAI,YAAJ;AACD,WAjBP;AAAA,mBAkBe,KAAKI;AAlBpB;AAAA;AAsBD;AA7FI,GAAP;AA+FD","sourcesContent":["import CFormButton from '@/pages/sims/components/common/CFormButton';\nimport { Message } from 'element-ui';\n\n/**\n * 表单高阶组件-包装按钮提交状态\n * wrap组件一定要包含：\n *  - clearValidate() 清除校验方法\n *  - validate() 校验方法\n *  - formData 表单数据属性\n *  - change-model 事件\n * @param {*} wrap 被包装组件\n * @param {*} submitFn 提交方法\n * @param {*} config 配置\n * @returns {Function}\n */\nexport default function FormHoc(wrap, submitFn) {\n  return {\n    name: 'FormHoc',\n    props: {\n      /**\n       * 表单\n       */\n      formData: {\n        type: Object,\n        default: () => ({})\n      }\n    },\n    data() {\n      return {\n        /** 表单数据 */\n        model: {},\n        /** 提交加载中 */\n        confirmLoading: false\n      };\n    },\n    watch: {\n      /**\n       * 向下传递表单数据更新\n       */\n      formData() {\n        this.model = this.formData;\n      },\n      /**\n       * 向上传递表单数据更新\n       */\n      model() {\n        this.$emit('change-model', this.model);\n      }\n    },\n    methods: {\n      /**\n       * 提交\n       */\n      async handleConfirm() {\n        try {\n          try {\n            // 校验表单\n            await this.$refs.wrap.validate();\n          } catch (e) {\n            return;\n          }\n          this.confirmLoading = true;\n          await submitFn(this.model);\n          this.$emit('finish');\n          Message.success('操作成功');\n        } finally {\n          this.confirmLoading = false;\n        }\n      },\n      /**\n       * 重置\n       */\n      handleReset() {\n        this.model = {};\n        this.$refs.wrap.clearValidate();\n        this.$emit('reset');\n      },\n      /**\n       * 表单数据改变\n       * @param {*} model 数据\n       */\n      handleChangeModel(model) {\n        this.model = model;\n        this.$emit('change-model', this.model);\n      }\n    },\n    render() {\n      return (\n        <div>\n          {/* 表单 */}\n          <wrap\n            ref=\"wrap\"\n            {...{ attrs: this.$attrs }}\n            {...{ on: this.$listeners }}\n            formData={this.model}\n            scopedSlots={this.$scopedSlots}\n            onChangeModel={this.handleChangeModel}\n          />\n          {/* 表单底部按钮 */}\n          <CFormButton\n            {...{ attrs: this.$attrs }}\n            loading={this.confirmLoading}\n            onConfirm={(...args) => {\n              this.handleConfirm(...args);\n            }}\n            onReset={this.handleReset}\n          />\n        </div>\n      );\n    }\n  };\n}\n"]}]}