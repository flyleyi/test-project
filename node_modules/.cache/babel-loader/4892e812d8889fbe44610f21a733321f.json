{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool-admin/views/taskList/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/bonus-tool-admin/views/taskList/index.vue","mtime":1645176309692},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Z1eXVleWkvRGVza3RvcC95anktcHJvamVjdHMvbXVsdGktcHJvamVjdC9tdXRpbHdhcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiL1VzZXJzL2Z1eXVleWkvRGVza3RvcC95anktcHJvamVjdHMvbXVsdGktcHJvamVjdC9tdXRpbHdhcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX0J1dHRvbjIgZnJvbSAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYnV0dG9uLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX0J1dHRvbiBmcm9tICJlbGVtZW50LXVpL2xpYi9idXR0b24iOwppbXBvcnQgX0xpbmsyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2xpbmsuY3NzIjsKaW1wb3J0ICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9iYXNlLmNzcyI7CmltcG9ydCBfTGluayBmcm9tICJlbGVtZW50LXVpL2xpYi9saW5rIjsKCnZhciBfY29tcG9uZW50czsKCmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ1RhYmxlIGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vQ1RhYmxlJzsKaW1wb3J0IHsgbWFuYWdlR2V0VGFza0xpc3QgYXMgX21hbmFnZUdldFRhc2tMaXN0LCBjb21wbGV0ZVRhc2ssIGlzSGF2ZVRhc2tOYW1lIH0gZnJvbSAnLi4vLi4vYXBpL3Rhc2snOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuZW1lOiAnVGFza0xpc3QnLAogIGNvbXBvbmVudHM6IChfY29tcG9uZW50cyA9IHt9LCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudHMsIF9MaW5rLm5hbWUsIF9MaW5rKSwgX2RlZmluZVByb3BlcnR5KF9jb21wb25lbnRzLCBfQnV0dG9uLm5hbWUsIF9CdXR0b24pLCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudHMsICJDVGFibGUiLCBDVGFibGUpLCBfY29tcG9uZW50cyksCiAgZmlsdGVyczogewogICAgZm9ybWF0dGVyVGltZTogZnVuY3Rpb24gZm9ybWF0dGVyVGltZSh2YWwpIHsKICAgICAgaWYgKCF2YWwpIHJldHVybiAnLSc7CiAgICAgIHJldHVybiB2YWwuc3BsaXQoJ1QnKVswXTsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0YWJsZURhdGE6IFtdLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIGxhYmVsOiAn5bqP5Y+3JywKICAgICAgICB0eXBlOiAnaW5kZXgnLAogICAgICAgIHdpZHRoOiA4MAogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICfku7vliqHlkI3np7AnLAogICAgICAgIHByb3A6ICd0YXNrTmFtZScsCiAgICAgICAgY29sVHlwZTogJ2NvbHVtbicsCiAgICAgICAgc2xvdE5hbWU6ICdsaW5rJwogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICfmj5DkuqTml7bpl7QnLAogICAgICAgIHByb3A6ICdjcmVhdGVUaW1lJywKICAgICAgICBjb2xUeXBlOiAnY29sdW1uJywKICAgICAgICBzbG90TmFtZTogJ3RpbWUnCiAgICAgIH0sIHsKICAgICAgICBsYWJlbDogJ+i/m+eoiycsCiAgICAgICAgY29sVHlwZTogJ2NvbHVtbicsCiAgICAgICAgc2xvdE5hbWU6ICdidG5zJywKICAgICAgICBhbGlnbjogJ2NlbnRlcicsCiAgICAgICAgcHJvcDogJ25hbWUnLAogICAgICAgIGJ0bnM6IFt7CiAgICAgICAgICBsYWJlbDogJ+WKnue7kycsCiAgICAgICAgICBzaXplOiAnc21hbGwnLAogICAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKHJvdywgcm93SW5kZXgsIGJ0bkluZGV4KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJvdywgcm93SW5kZXgsIGJ0bkluZGV4KTsKICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBsYWJlbDogJ+W3suWKnue7kycsCiAgICAgICAgICBzaXplOiAnc21hbGwnLAogICAgICAgICAgdHlwZTogJ3RleHQnLAogICAgICAgICAgaGlkZGVuOiB0cnVlCiAgICAgICAgfV0KICAgICAgfV0sCiAgICAgIGxvYWRpbmc6IHRydWUgLy8g5YiX6KGo5piv5ZCm5Yqg6L295LitCgogICAgfTsKICB9LAogIC8v55uR5ZCs5bGe5oCnIOexu+S8vOS6jmRhdGHmpoLlv7UKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ3N0YWZmTmFtZSddKSksCiAgLy/nm5HmjqdkYXRh5Lit55qE5pWw5o2u5Y+Y5YyWCiAgd2F0Y2g6IHt9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICog6I635Y+W5Lu75Yqh5YiX6KGoCiAgICAgKi8KICAgIG1hbmFnZUdldFRhc2tMaXN0OiBmdW5jdGlvbiBtYW5hZ2VHZXRUYXNrTGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIF9tYW5hZ2VHZXRUYXNrTGlzdCgpLnRoZW4oZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgZGF0YSA9IF9yZWYuZGF0YTsKICAgICAgICBfdGhpcy50YWJsZURhdGEgPSBkYXRhOwogICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIOWKnue7kwogICAgICovCiAgICBvbkNvbXBlbGV0ZTogZnVuY3Rpb24gb25Db21wZWxldGUocm93KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHJvdy50YXNrTmFtZSkgewogICAgICAgIHRoaXMuJGNvbmZpcm0oJ+ehruWumuWKnue7k+ivpeS7u+WKoe+8nzxicj7lip7nu5PlkI7mnKrmj5DkuqTlrabmoKHljZXkvY3lsIbml6Dms5Xmj5DkuqQnLCAn5o+Q6YaSJywgewogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7orqQnLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICBjZW50ZXI6IHRydWUsCiAgICAgICAgICBzaG93Q2xvc2U6IGZhbHNlLAogICAgICAgICAgZGFuZ2Vyb3VzbHlVc2VIVE1MU3RyaW5nOiB0cnVlCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICBjb21wbGV0ZVRhc2soewogICAgICAgICAgICB0YXNrTmFtZTogcm93LnRhc2tOYW1lCiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMyLm1hbmFnZUdldFRhc2tMaXN0KCk7CgogICAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UoewogICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICBtZXNzYWdlOiAn5pON5L2c5oiQ5YqfIScKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIG1lc3NhZ2U6ICfku7vliqHlkI3np7DkuI3lrZjlnKjvvIzor7fogZTns7vnrqHnkIblkZgnLAogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiDmlrDlop7ku7vliqEKICAgICAqLwogICAgb25DbGlja05ld1Rhc2s6IGZ1bmN0aW9uIG9uQ2xpY2tOZXdUYXNrKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCdhZGQnKTsKICAgICAgdGhpcy4kcHJvbXB0KCcnLCAn5paw5bu65Lu75YqhJywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu6K6kJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICBpbnB1dFBhdHRlcm46IC9eLnsxLDIwfSQvLAogICAgICAgIGlucHV0RXJyb3JNZXNzYWdlOiAn5Lu75Yqh5ZCN56ew6ZyA5ZyoMS0yMOS9jScsCiAgICAgICAgaW5wdXRQbGFjZWhvbGRlcjogJ+ivt+i+k+WFpeS7u+WKoeWQjeensCcsCiAgICAgICAgY2VudGVyOiB0cnVlLAogICAgICAgIHNob3dDbG9zZTogZmFsc2UKICAgICAgfSkudGhlbihmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICB2YXIgdmFsdWUgPSBfcmVmMi52YWx1ZTsKICAgICAgICBpc0hhdmVUYXNrTmFtZSh7CiAgICAgICAgICB0YXNrTmFtZTogdmFsdWUKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMy5kYXRhOwoKICAgICAgICAgIC8vIGRhdGE6dHJ1ZeeUqOaIt+WQjeWtmOWcqCzkuI3lj6/mlrDlop4KICAgICAgICAgIC8vIGRhdGE6ZmFsc2XnlKjmiLflkI3kuI3lrZjlnKgs5Y+v5paw5aKeCiAgICAgICAgICBpZiAoZGF0YSkgewogICAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UoewogICAgICAgICAgICAgIG1lc3NhZ2U6ICfku7vliqHlkI3np7Dlt7LlrZjlnKjvvIzor7fph43mlrDloavlhpknLAogICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMy4kcm91dGVyLnB1c2goewogICAgICAgICAgICAgIHBhdGg6ICcvbmV3LXRhc2svaW5kZXgnLAogICAgICAgICAgICAgIHF1ZXJ5OiB7CiAgICAgICAgICAgICAgICB0YXNrTmFtZTogdmFsdWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiDot7PovazliLDku7vliqHor6bmg4UKICAgICAqLwogICAgb25KdW1wOiBmdW5jdGlvbiBvbkp1bXAocm93KSB7CiAgICAgIGlmIChyb3cuc3RhdHVzID09PSAnMCcpIHsKICAgICAgICAvLyDmnKrlip7nu5MKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICBwYXRoOiAnL3Rhc2stZGV0aWFsL25vdC1jb21wbGV0ZScsCiAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICB0YXNrTmFtZTogcm93LnRhc2tOYW1lCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAocm93LnN0YXR1cyA9PT0gJzEnKSB7CiAgICAgICAgLy8g5bey5Yqe57uTCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgcGF0aDogJy90YXNrLWRldGlhbC9jb21wbGV0ZScsCiAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICB0YXNrTmFtZTogcm93LnRhc2tOYW1lCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIC8v55Sf5ZG95ZGo5pyfIC0g5Yib5bu65a6M5oiQ77yI5Y+v5Lul6K6/6Zeu5b2T5YmNdGhpc+WunuS+i++8iQogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm1hbmFnZUdldFRhc2tMaXN0KCk7CiAgfSwKICAvL+eUn+WRveWRqOacnyAtIOaMgui9veWujOaIkO+8iOWPr+S7peiuv+mXrkRPTeWFg+e0oO+8iQogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fSwKICBiZWZvcmVDcmVhdGU6IGZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpIHt9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHt9LAogIGJlZm9yZVVwZGF0ZTogZnVuY3Rpb24gYmVmb3JlVXBkYXRlKCkge30sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHt9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7fSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHt9LAogIC8v5aaC5p6c6aG16Z2i5pyJa2VlcC1hbGl2Zee8k+WtmOWKn+iDve+8jOi/meS4quWHveaVsOS8muinpuWPkQogIGFjdGl2YXRlZDogZnVuY3Rpb24gYWN0aXZhdGVkKCkge30KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 任务列表 -->\n<template>\n  <div class=\"app-container\">\n    <div class=\"common-title\">任务列表</div>\n    <div class=\"common-container\">\n      <!-- 头部 -->\n      <div class=\"common-header\">\n        <div class=\"common-header-left\">\n          <el-button\n            type=\"primary\"\n            size=\"medium\"\n            :loading=\"loading\"\n            @click=\"onClickNewTask\"\n          >\n            新增任务\n          </el-button>\n        </div>\n        <div class=\"common-header-right\"></div>\n      </div>\n      <div v-if=\"tableData.length > 0\">\n        <c-table\n          v-loading=\"loading\"\n          :headers=\"headers\"\n          :data=\"tableData\"\n          border\n        >\n          <template slot=\"column|time\" slot-scope=\"{ row }\">\n            {{ row.createTime | formatterTime }}\n          </template>\n          <template slot=\"column|link\" slot-scope=\"{ row }\">\n            <el-link type=\"primary\" @click=\"onJump(row)\">{{\n              row.taskName\n            }}</el-link>\n          </template>\n          <template slot=\"column|btns\" slot-scope=\"{ row }\">\n            <el-button\n              class=\"btn-blue\"\n              v-if=\"row.status === '0'\"\n              type=\"primary\"\n              plain\n              @click=\"onCompelete(row)\"\n              >办结</el-button\n            >\n            <span v-if=\"row.status === '1'\" class=\"btn-red\">已办结</span>\n          </template>\n        </c-table>\n      </div>\n      <div v-else class=\"empty\">\n        <img\n          class=\"empty-task\"\n          src=\"../../assets/images/empty.png\"\n          alt=\"\"\n          srcset=\"\"\n        />\n        <span>暂无数据~</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Link, Button } from 'element-ui';\nimport CTable from '@/components/common/CTable';\nimport {\n  manageGetTaskList,\n  completeTask,\n  isHaveTaskName\n} from '../../api/task';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  neme: 'TaskList',\n  components: {\n    [Link.name]: Link,\n    [Button.name]: Button,\n    CTable\n  },\n  filters: {\n    formatterTime(val) {\n      if (!val) return '-';\n      return val.split('T')[0];\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      headers: [\n        {\n          label: '序号',\n          type: 'index',\n          width: 80\n        },\n        {\n          label: '任务名称',\n          prop: 'taskName',\n          colType: 'column',\n          slotName: 'link'\n        },\n        {\n          label: '提交时间',\n          prop: 'createTime',\n          colType: 'column',\n          slotName: 'time'\n        },\n        {\n          label: '进程',\n          colType: 'column',\n          slotName: 'btns',\n          align: 'center',\n          prop: 'name',\n          btns: [\n            {\n              label: '办结',\n              size: 'small',\n              type: 'text',\n              click: (row, rowIndex, btnIndex) => {\n                console.log(row, rowIndex, btnIndex);\n              }\n            },\n            {\n              label: '已办结',\n              size: 'small',\n              type: 'text',\n              hidden: true\n            }\n          ]\n        }\n      ],\n      loading: true // 列表是否加载中\n    };\n  },\n  //监听属性 类似于data概念\n  computed: {\n    ...mapGetters(['staffName'])\n  },\n  //监控data中的数据变化\n  watch: {},\n\n  methods: {\n    /**\n     * 获取任务列表\n     */\n    manageGetTaskList() {\n      manageGetTaskList()\n        .then(({ data }) => {\n          this.tableData = data;\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    /**\n     * 办结\n     */\n    onCompelete(row) {\n      if (row.taskName) {\n        this.$confirm(\n          '确定办结该任务？<br>办结后未提交学校单位将无法提交',\n          '提醒',\n          {\n            confirmButtonText: '确认',\n            cancelButtonText: '取消',\n            center: true,\n            showClose: false,\n            dangerouslyUseHTMLString: true\n          }\n        ).then(() => {\n          completeTask({ taskName: row.taskName }).then(() => {\n            this.manageGetTaskList();\n            this.$message({\n              type: 'success',\n              message: '操作成功!'\n            });\n          });\n        });\n      } else {\n        this.$message({\n          message: '任务名称不存在，请联系管理员',\n          type: 'warning'\n        });\n      }\n    },\n    /**\n     * 新增任务\n     */\n    onClickNewTask() {\n      console.log('add');\n      this.$prompt('', '新建任务', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        inputPattern: /^.{1,20}$/,\n        inputErrorMessage: '任务名称需在1-20位',\n        inputPlaceholder: '请输入任务名称',\n        center: true,\n        showClose: false\n      }).then(({ value }) => {\n        isHaveTaskName({ taskName: value }).then(({ data }) => {\n          // data:true用户名存在,不可新增\n          // data:false用户名不存在,可新增\n          if (data) {\n            this.$message({\n              message: '任务名称已存在，请重新填写',\n              type: 'warning'\n            });\n          } else {\n            this.$router.push({\n              path: '/new-task/index',\n              query: {\n                taskName: value\n              }\n            });\n          }\n        });\n      });\n    },\n    /**\n     * 跳转到任务详情\n     */\n    onJump(row) {\n      if (row.status === '0') {\n        // 未办结\n        this.$router.push({\n          path: '/task-detial/not-complete',\n          query: {\n            taskName: row.taskName\n          }\n        });\n      } else if (row.status === '1') {\n        // 已办结\n        this.$router.push({\n          path: '/task-detial/complete',\n          query: {\n            taskName: row.taskName\n          }\n        });\n      }\n    }\n  },\n  //生命周期 - 创建完成（可以访问当前this实例）\n  created() {\n    this.manageGetTaskList();\n  },\n  //生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {},\n  beforeCreate() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {},\n  beforeDestroy() {},\n  destroyed() {},\n  //如果页面有keep-alive缓存功能，这个函数会触发\n  activated() {}\n};\n</script>\n<style lang=\"less\" scoped>\n@import url('../../assets/less/global/variable.less');\n/deep/ .el-table td {\n  padding: 6px 0;\n}\n.app-container {\n  .empty {\n    position: absolute;\n    left: 0;\n    top: 50px;\n    right: 0;\n    bottom: 0;\n    font-size: 14px;\n    color: rgba(0, 0, 0, 0.45);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n  .btn-blue {\n    width: 88px;\n    height: 32px;\n    line-height: 32px;\n    text-align: center;\n    background: #ffffff;\n    border-radius: 4px;\n    border: 1px solid #0076f6;\n    color: #0076f6;\n    padding: 0;\n    :hover {\n      color: #0076f6;\n    }\n  }\n  .btn-red {\n    display: inline-block;\n    width: 88px;\n    height: 32px;\n    line-height: 32px;\n    text-align: center;\n    border-radius: 4px;\n    border: 1px solid transparent;\n    font-size: 12px;\n    color: #ff4635;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/bonus-tool-admin/views/taskList"}]}