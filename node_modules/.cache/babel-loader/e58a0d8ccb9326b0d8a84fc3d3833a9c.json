{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/jx-questionnaire-h5/plugins/common/ossUpload.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/jx-questionnaire-h5/plugins/common/ossUpload.js","mtime":1645178321139},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CgovKgogKiDkuIrkvKDlm77niYfjgIHmlofku7bmjqXlj6Pmlofku7YKICoKICovCmltcG9ydCBPU1MgZnJvbSAnYWxpLW9zcyc7CmltcG9ydCBheGlvcyBmcm9tICcuLi9heGlvcy5qcyc7Ci8qKgogKiDojrflj5bkuIrkvKB0b2tlbgogKi8KCmV4cG9ydCBmdW5jdGlvbiBnZXRVcGxvYWRUb2tlbigpIHsKICByZXR1cm4gYXhpb3MoewogICAgbWV0aG9kOiAncG9zdCcsCiAgICB1cmw6ICcvYXR0YWNobWVudC9nZXRXZWJUb2tlbicKICB9LCAnangtc3VydmV5LWg1Jyk7Cn0KLyoqCiAqIOS4iuS8oAogKi8KCmV4cG9ydCBmdW5jdGlvbiB1cGxvYWQocGFyYW1zKSB7CiAgcmV0dXJuIGF4aW9zKHsKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogcGFyYW1zLAogICAgdXJsOiAnL2F0dGFjaG1lbnQvd2ViVXBsb2FkJwogIH0sICdqeC1zdXJ2ZXktaDUnKTsKfQoKZnVuY3Rpb24gZ2V0TGVuZ3RoU3RyKGxlbikgewogIC8vIOiOt+WPluaMh+WumumVv+W6pueahOmaj+acuuWtl+espuS4sgogIHZhciB2ID0gbmV3IERhdGUoKS5nZXRUaW1lKCkgKyBNYXRoLnJhbmRvbSgpICsgJyc7CgogIHdoaWxlICh2Lmxlbmd0aCA8IGxlbikgewogICAgdiA9IHYgKyBNYXRoLnJhbmRvbSgpOwogIH0KCiAgcmV0dXJuIHYuc2xpY2UoMCwgbGVuKTsKfQovKioKICogZmlsZURhdGEg5LiK5Lyg5paH5Lu25pWw57uECiAqLwoKCmV4cG9ydCBmdW5jdGlvbiBPc3NVcGxvYWQoZmlsZURhdGEsIGZuKSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICB2YXIgcmF3YXJyID0gW107CiAgICB2YXIgdWFyciA9IFtdOwogICAgdmFyIHJlc3VsdE9iaiA9IHt9OwoKICAgIGlmIChmaWxlRGF0YSBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgIGZpbGVEYXRhLmZvckVhY2goZnVuY3Rpb24gKGVsZSkgewogICAgICAgIC8v5YiG56a75Ye65bey57uP5LiK5Lyg6L+H55qE5paH5Lu25ZKM5pyq5LiK5Lyg5paH5Lu2CiAgICAgICAgaWYgKGVsZS5pZCkgewogICAgICAgICAgdWFyci5wdXNoKGVsZS5pZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJhd2Fyci5wdXNoKGVsZS5yYXcgPyBlbGUucmF3IDogZWxlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgcmF3YXJyLnB1c2goZmlsZURhdGEpOwogICAgfQoKICAgIGlmIChyYXdhcnIubGVuZ3RoID4gMCkgewogICAgICBnZXRVcGxvYWRUb2tlbigpIC8vIOiOt+WPlumqjOivgeeggQogICAgICAudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIGNsaWVudCA9IG5ldyBPU1MoewogICAgICAgICAgcmVnaW9uOiByZXMuZGF0YS5yZWdpb24sCiAgICAgICAgICBhY2Nlc3NLZXlJZDogcmVzLmRhdGEudG1wU2VjcmV0SWQsCiAgICAgICAgICBhY2Nlc3NLZXlTZWNyZXQ6IHJlcy5kYXRhLmFjY2Vzc0tleVNlY3JldCwKICAgICAgICAgIGJ1Y2tldDogcmVzLmRhdGEuYnVja2V0LAogICAgICAgICAgZW5kcG9pbnQ6IHJlcy5kYXRhLmVuZHBvaW50LAogICAgICAgICAgc2VjdXJlOiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgdmFyIGlkcyA9IFtdOwogICAgICAgIHJhd2Fyci5mb3JFYWNoKGZ1bmN0aW9uIChlbGUpIHsKICAgICAgICAgIHZhciBzdG9yZUFzID0gcmVzLmRhdGEuZGlyZWN0b3J5ICsgZ2V0TGVuZ3RoU3RyKDI0KSArICctJyArIGVsZS5maWxlLm5hbWU7CiAgICAgICAgICBjbGllbnQubXVsdGlwYXJ0VXBsb2FkKHN0b3JlQXMsIGVsZS5maWxlLCB7CiAgICAgICAgICAgIHByb2dyZXNzOiBmdW5jdGlvbiBwcm9ncmVzcyhwKSB7CiAgICAgICAgICAgICAgdmFyIHBlcmNlbnQgPSBwYXJzZUludChwICogMTAwMDApIC8gMTAwOwogICAgICAgICAgICAgIHZhciBzcGVlZCA9IHBhcnNlSW50KHAgLyAxMDI0IC8gMTAyNCAqIDEwMCkgLyAxMDA7CiAgICAgICAgICAgICAgZm4gJiYgZm4ocGVyY2VudCwgc3BlZWQpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBQYXJ0U2l6ZTogMTAyNCAqIDEwMjQgKiAxMDAKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICBpZiAocmVzLnJlcy5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgICAgICAgaWRzLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogcmVzLm5hbWUsCiAgICAgICAgICAgICAgICB1cmw6IHJlcy5yZXMucmVxdWVzdFVybHNbMF0uaW5kZXhPZignPycpICE9IC0xID8gcmVzLnJlcy5yZXF1ZXN0VXJsc1swXS5zcGxpdCgnPycpWzBdIDogcmVzLnJlcy5yZXF1ZXN0VXJsc1swXQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaWRzLmxlbmd0aCA9PSByYXdhcnIubGVuZ3RoKSB7CiAgICAgICAgICAgICAgdXBsb2FkKGlkcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAvLyDkv53lrZjliLDlkI7lj7DmjqXlj6MKICAgICAgICAgICAgICAgIHJlc3VsdE9iai5pZHMgPSBpZHM7CiAgICAgICAgICAgICAgICByZXN1bHRPYmoudWFyciA9IHVhcnIubWFwKFN0cmluZykuY29uY2F0KHJlcy5kYXRhLmltZ0lkcy5zcGxpdCgnLCcpKTsKICAgICAgICAgICAgICAgIHJlc29sdmUoIC8vIHVhcnIubWFwKFN0cmluZykuY29uY2F0KHJlcy5kYXRhLmltZ0lkcy5zcGxpdCgnLCcpKQogICAgICAgICAgICAgICAgcmVzdWx0T2JqKTsKICAgICAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgICByZXNvbHZlKGVycik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsgLy8g5LiK5Lyg5aSx6LSlLOW8ueWHuuS4iuS8oOWksei0peeahOa2iOaBrwogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICByZXNvbHZlKGVycik7CiAgICAgIH0pOwogICAgfSBlbHNlIHsKICAgICAgcmVzb2x2ZSh1YXJyKTsKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/pages/jx-questionnaire-h5/plugins/common/ossUpload.js"],"names":["OSS","axios","getUploadToken","method","url","upload","params","data","getLengthStr","len","v","Date","getTime","Math","random","length","slice","OssUpload","fileData","fn","Promise","resolve","rawarr","uarr","resultObj","Array","forEach","ele","id","push","raw","then","res","client","region","accessKeyId","tmpSecretId","accessKeySecret","bucket","endpoint","secure","ids","storeAs","directory","file","name","multipartUpload","progress","p","percent","parseInt","speed","PartSize","status","requestUrls","indexOf","split","map","String","concat","imgIds","catch","err","console","log"],"mappings":"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","sourcesContent":["/*\n * 上传图片、文件接口文件\n *\n */\n\nimport OSS from 'ali-oss';\nimport axios from '../axios.js';\n\n/**\n * 获取上传token\n */\nexport function getUploadToken() {\n  return axios(\n    {\n      method: 'post',\n      url: '/attachment/getWebToken'\n    },\n    'jx-survey-h5'\n  );\n}\n\n/**\n * 上传\n */\nexport function upload(params) {\n  return axios(\n    {\n      method: 'post',\n      data: params,\n      url: '/attachment/webUpload'\n    },\n    'jx-survey-h5'\n  );\n}\n\nfunction getLengthStr(len) {\n  // 获取指定长度的随机字符串\n  var v = new Date().getTime() + Math.random() + '';\n  while (v.length < len) {\n    v = v + Math.random();\n  }\n  return v.slice(0, len);\n}\n\n/**\n * fileData 上传文件数组\n */\nexport function OssUpload(fileData, fn) {\n  return new Promise(function(resolve) {\n    let rawarr = [];\n    let uarr = [];\n    let resultObj = {};\n    if (fileData instanceof Array) {\n      fileData.forEach(ele => {\n        //分离出已经上传过的文件和未上传文件\n        if (ele.id) {\n          uarr.push(ele.id);\n        } else {\n          rawarr.push(ele.raw ? ele.raw : ele);\n        }\n      });\n    } else {\n      rawarr.push(fileData);\n    }\n\n    if (rawarr.length > 0) {\n      getUploadToken() // 获取验证码\n        .then(res => {\n          var client = new OSS({\n            region: res.data.region,\n            accessKeyId: res.data.tmpSecretId,\n            accessKeySecret: res.data.accessKeySecret,\n            bucket: res.data.bucket,\n            endpoint: res.data.endpoint,\n            secure: true\n          });\n          let ids = [];\n          rawarr.forEach(ele => {\n            let storeAs =\n              res.data.directory + getLengthStr(24) + '-' + ele.file.name;\n            client\n              .multipartUpload(storeAs, ele.file, {\n                progress: function(p) {\n                  var percent = parseInt(p * 10000) / 100;\n                  var speed = parseInt((p / 1024 / 1024) * 100) / 100;\n                  fn && fn(percent, speed);\n                },\n                PartSize: 1024 * 1024 * 100\n              })\n              .then(function(res) {\n                if (res.res.status == 200) {\n                  ids.push({\n                    name: res.name,\n                    url:\n                      res.res.requestUrls[0].indexOf('?') != -1\n                        ? res.res.requestUrls[0].split('?')[0]\n                        : res.res.requestUrls[0]\n                  });\n                }\n                if (ids.length == rawarr.length) {\n                  upload(ids)\n                    .then(res => {\n                      // 保存到后台接口\n                      resultObj.ids = ids;\n                      resultObj.uarr = uarr\n                        .map(String)\n                        .concat(res.data.imgIds.split(','));\n                      resolve(\n                        // uarr.map(String).concat(res.data.imgIds.split(','))\n                        resultObj\n                      );\n                    })\n                    .catch(err => {\n                      resolve(err);\n                    });\n                }\n              })\n              .catch(function(err) {\n                console.log(err);\n                // 上传失败,弹出上传失败的消息\n              });\n          });\n        })\n        .catch(err => {\n          resolve(err);\n        });\n    } else {\n      resolve(uarr);\n    }\n  });\n}\n"]}]}