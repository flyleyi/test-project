{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-h5/components/echarts/bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/score-analysis-h5/components/echarts/bar.vue","mtime":1645176309817},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["bar.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Author: wangxu\n * @Date: 2021-09-27 11:36:19\n * @LastEditTime: 2021-10-19 16:38:19\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\mutilwap\\src\\pages\\score-analysis-h5\\components\\echarts\\bar.vue\n-->\n<template>\n  <div ref=\"chartsBox\" :style=\"{ height: height + 'rem' }\"></div>\n</template>\n\n<script>\nexport default {\n  name: 'bar',\n  props: {\n    // 1：年级排名，2：提分直方图\n    type: {\n      type: String,\n      default: '1'\n    },\n    height: {\n      type: String,\n      default: '2'\n    },\n    // 数据\n    chartsConfig: {\n      type: Object,\n      default: () => {}\n    },\n    // 移动端，pc端，展示不同\n    clientType: {\n      type: String,\n      default: 'pc'\n    }\n  },\n  watch: {\n    chartsConfig: {\n      deep: true,\n      handler: 'changeData',\n      immediate: true\n    }\n  },\n  data() {\n    return {\n      chartData: {},\n      chart: null,\n      myselfImg: require('../../assets/images/icons/myself@2x.png'),\n      currentImg: require('../../assets/images/icons/current_score@2x.png'),\n      finalImg: require('../../assets/images/icons/final_score@2x.png')\n    };\n  },\n  mounted() {\n    this.chart = this.$echarts.init(this.$refs.chartsBox);\n    this.initEchartsBox();\n    window.addEventListener('resize', () => {\n      this.chart.resize();\n    });\n    this.$on('hook:destroyed', () => {\n      window.removeEventListener('resize', () => {\n        this.chart.resize();\n      });\n    });\n  },\n  methods: {\n    changeData(newVal) {\n      if (newVal) {\n        this.chartData = newVal;\n        this.initEchartsBox();\n      }\n    },\n    initEchartsBox() {\n      let obj = this.chartData;\n      console.log(obj);\n      let _this = this;\n      // 重新组合数据\n      let seriesData = [];\n      // 移动端，标记集合\n      let markPointData = [];\n      // 当前，和提升后，在x轴的下标值\n      let rateIndex = 0;\n      let newRateIndex = 0;\n      // 图表距顶部、底部距离\n      let gridTop = 50;\n      let gridBottom = 15;\n      // pc端展示\n      if (this.clientType === 'pc') {\n        obj.seriesData.map((item, i) => {\n          let stepMin = (i / 10).toFixed(2);\n          let stepMax = ((i + 1) / 10).toFixed(2);\n          // 当前排名\n          let case1 =\n            obj.courseScoreRate > stepMin && obj.courseScoreRate < stepMax;\n          // 提升后排名\n          let case2 =\n            obj.courseScoreRateNew > stepMin &&\n            obj.courseScoreRateNew < stepMax &&\n            this.type === '2';\n          let opt = {\n            value: item,\n            label: {\n              show: case1 || case2 ? true : false,\n              align: 'left',\n              offset: [-37, 0],\n              position: 'top',\n              verticalAlign: 'bottom',\n              lineHeight: 15,\n              textStyle: {\n                fontSize: 10,\n                color: 'rgba(255, 255, 255, 0.65)'\n              },\n              backgroundColor: 'rgba(0, 0, 0, 0.65)',\n              padding: [5, 5, 5, 5],\n              borderRadius: 3,\n              formatter: params => {\n                // 默认为空\n                let str = '';\n                let str1 =\n                  '目前：\\n' +\n                  '超过年级总体' +\n                  (obj.courseScoreRate * 100).toFixed(1) +\n                  '%';\n                let str2 =\n                  '提升后预计：\\n' +\n                  '超过年级总体' +\n                  (obj.courseScoreRateNew * 100).toFixed(1) +\n                  '%';\n                if (case1) str = str1;\n                if (case2) str = str2;\n                // 目前和预计同框\n                if (case1 && case2) str = str1 + '\\n' + str2;\n                return str;\n              }\n            },\n            labelLine: {\n              show: true,\n              showAbove: true,\n              length2: 45,\n              minTurnAngle: 90,\n              smooth: 1,\n              lineStyle: {\n                color: '#000',\n                width: 0.5,\n                type: 'solid'\n              },\n              opacity: 1\n            }\n          };\n          seriesData.push(opt);\n        });\n      } else {\n        obj.seriesData.map(item => {\n          let opt = {\n            value: item,\n            label: {}\n          };\n          seriesData.push(opt);\n        });\n        // 移动端展示，标记\n        seriesData = obj.seriesData;\n        // 定义的x轴刻度规则\n        let rule = [0, 0.6, 0.7, 0.8, 0.9, 1];\n        rule.map((item, index) => {\n          if (obj.courseScoreRate > 0 && obj.courseScoreRate >= item) {\n            rateIndex = index;\n          }\n          if (obj.courseScoreRateNew > 0 && obj.courseScoreRateNew >= item) {\n            newRateIndex = index;\n          }\n        });\n        if (rateIndex == 5) {\n          rateIndex = 4;\n        }\n        if (newRateIndex == 5) {\n          newRateIndex = 4;\n        }\n        let step = 20;\n        let c = parseInt(obj.yAxisMax / step);\n        let num = 4 * c;\n        // 判断当前是否大于最大值\n        let ca1 = seriesData[rateIndex] + num > obj.yAxisMax;\n        // 判断提升后是否大于最大值\n        let ca2 = seriesData[newRateIndex] + num > obj.yAxisMax;\n        // 重新定义最大刻度\n        let stepN = parseInt(num / step) * step;\n        if (ca1) {\n          obj.yAxisMax = obj.yAxisMax + stepN;\n        }\n        if (ca2) {\n          obj.yAxisMax = obj.yAxisMax + stepN;\n        }\n        // 当前排名，超出最大值，则为最大值\n        let yAxis1 = ca1 ? obj.yAxisMax : seriesData[rateIndex] + num;\n        // 提升后排名，超出最大值，则为最大值\n        let yAxis2 = ca2 ? obj.yAxisMax : seriesData[newRateIndex] + num;\n        // console.log(stepN, obj.yAxisMax);\n        // 我的排名\n        let data1 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[rateIndex],\n          symbol: 'image://' + _this.myselfImg,\n          symbolSize: 24,\n          yAxis: yAxis1\n        };\n        // 当前排名\n        let data2 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[rateIndex],\n          symbol: 'image://' + _this.currentImg,\n          symbolSize: 32,\n          yAxis: yAxis1\n        };\n        // 提升后排名\n        let data3 = {\n          name: 'obj.yAxisMax',\n          xAxis: obj.xAxisData[newRateIndex],\n          symbol: 'image://' + _this.finalImg,\n          symbolSize: 32,\n          yAxis: yAxis2\n        };\n        if (this.type === '1') {\n          markPointData.push(data1);\n        }\n        if (this.type === '2') {\n          // 若当前与提升后重叠，则只展示提升后\n          if (rateIndex !== newRateIndex) {\n            markPointData.push(data2, data3);\n          } else {\n            markPointData.push(data3);\n          }\n        }\n      }\n      let labelColor = '#B7B9BD';\n      let lineColor = '#D8D8D8';\n      let yAxisName = '人数           ';\n      let xAxisName = '分数';\n      let option = {\n        grid: {\n          left: 15,\n          right: 25,\n          top: gridTop,\n          bottom: gridBottom,\n          containLabel: true\n        },\n        // 等份\n        interval: obj.yAxisMax / 4,\n        xAxis: [\n          {\n            name: '\\n\\n\\n' + xAxisName.split('').join('\\n'),\n            nameTextStyle: {\n              color: labelColor,\n              fontSize: 10\n            },\n            nameGap: 5,\n            type: 'category',\n            data: obj.xAxisData,\n            axisLabel: {\n              formatter: '{value}',\n              color: labelColor,\n              textStyle: {\n                fontSize: 10\n              },\n              rotate: 50\n            },\n            splitLine: {\n              show: false\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            }\n          }\n        ],\n        yAxis: [\n          {\n            min: 0,\n            max: obj.yAxisMax,\n            name: yAxisName,\n            nameTextStyle: {\n              color: labelColor,\n              fontSize: 10\n            },\n            axisLabel: {\n              color: labelColor,\n              textStyle: {\n                fontSize: 10\n              }\n            },\n            splitLine: {\n              show: true,\n              lineStyle: {\n                color: lineColor\n              }\n            },\n            axisLine: {\n              show: false\n            },\n            axisTick: {\n              show: false\n            }\n          }\n        ],\n        series: [\n          {\n            type: 'bar',\n            barWidth: 16,\n            data: seriesData,\n            silent: obj.silent || false,\n            label: {\n              show: true,\n              position: 'top',\n              textStyle: {\n                fontSize: 10\n              },\n              formatter: params => {\n                return params.value + '人';\n              }\n            },\n            markPoint: {\n              data: markPointData\n            },\n            itemStyle: {\n              color: function(params) {\n                if (_this.clientType === 'pc') {\n                  let min = (params.dataIndex / 10).toFixed(2);\n                  let max = ((params.dataIndex + 1) / 10).toFixed(2);\n                  // 当前排名\n                  let color1 =\n                    obj.courseScoreRate > min && obj.courseScoreRate < max;\n                  if (color1) {\n                    return obj.seriesColor1;\n                  }\n                  // 提升后排名\n                  let color2 =\n                    obj.courseScoreRateNew > min &&\n                    obj.courseScoreRateNew < max &&\n                    _this.type === '2';\n                  if (color2) {\n                    return obj.seriesColor2;\n                  }\n                } else {\n                  if (_this.type === '1') {\n                    // 当前排名\n                    if (params.dataIndex === rateIndex) {\n                      return obj.seriesColor2;\n                    }\n                  } else {\n                    // 当前排名，且不与提升后重叠\n                    if (\n                      params.dataIndex === rateIndex &&\n                      rateIndex !== newRateIndex\n                    ) {\n                      return obj.seriesColor1;\n                    }\n                    // 提升后排名\n                    if (params.dataIndex === newRateIndex) {\n                      return obj.seriesColor2;\n                    }\n                  }\n                }\n                return obj.seriesColor;\n              },\n              barBorderRadius: [16, 16, 0, 0]\n            }\n          }\n        ]\n      };\n      if (this.chart !== null) this.chart.setOption(option);\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/pages/score-analysis-h5/components/echarts"}]}