{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/QuestList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/school-book/views/questManage/QuestList.vue","mtime":1627979214328},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["QuestList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <b-table\n      ref=\"bTable\"\n      loading\n      empty-text=\"问题管理暂无数据\"\n      :headers=\"headers\"\n      :form-items=\"formItems\"\n      :ajax-get-data=\"ajaxGetData\"\n      @reset-form=\"resetForm\"\n      :pageLimit=\"10\"\n      :toolbars=\"toolbars\"\n      :show-column=\"false\"\n      :showRefresh=\"false\"\n    >\n      <template slot=\"column|questionType\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click=\"jumpType\">{{\n          row.questionType\n        }}</span>\n      </template>\n      <template slot=\"column|answerCount\" slot-scope=\"{ row }\">\n        <span class=\"text-decoration\" @click=\"jumpAnswer(row)\"\n          >{{ row.answerCount }}条回复</span\n        >\n      </template>\n      <template slot=\"column|opera\" slot-scope=\"{ row }\">\n        <div>\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            :disabled=\"row.status != 0\"\n            @click.stop=\"onExamineQuest(row)\"\n            v-auth=\"['quest-examine']\"\n            >审核</el-button\n          >\n          <el-button\n            size=\"small\"\n            type=\"text\"\n            @click.stop=\"deleteQuest(row, 'delete')\"\n            v-auth=\"['quest-delete']\"\n            >删除</el-button\n          >\n        </div>\n      </template>\n    </b-table>\n    <!-- 审核弹窗 -->\n    <el-dialog\n      width=\"560px\"\n      center\n      :visible.sync=\"dialogForm.visible\"\n      :title=\"'审核'\"\n      :close-on-click-modal=\"false\"\n      :close-on-press-escape=\"false\"\n      :before-close=\"onBeforeClose\"\n      @close=\"onCloseForm\"\n    >\n      <c-dynamic-form\n        ref=\"elForm\"\n        :form-data=\"dialogFormData\"\n        :form-items=\"dialogFormItems\"\n        :form-attrs=\"dialogFormAttrs\"\n        @change-model=\"model => (dialogFormData = model)\"\n      ></c-dynamic-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button\n          size=\"small\"\n          :loading=\"dialogForm.loading\"\n          @click=\"dialogForm.visible = false\"\n        >\n          取消\n        </el-button>\n        <el-button\n          size=\"small\"\n          type=\"primary\"\n          :loading=\"dialogForm.loading\"\n          @click.stop.prevent=\"onSubmitForm\"\n        >\n          确定\n        </el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport BTable from '@/components/business/BTable';\nimport CDynamicForm from '@/components/common/CDynamicForm/index';\nimport { Dialog, Button, Message } from 'element-ui';\nimport {\n  getQuestionList,\n  auditQuestStatus,\n  deleteQuest,\n  findQuesType\n} from '../../api/question';\nimport { getIdsArr } from '../../plugins/common/utils';\nexport default {\n  name: 'QuestList',\n  components: {\n    BTable,\n    CDynamicForm,\n    [Dialog.name]: Dialog,\n    [Button.name]: Button\n  },\n  props: {},\n  data() {\n    return {\n      // 表单列\n      headers: [\n        {\n          type: 'selection'\n        },\n        {\n          type: 'index',\n          label: '序号'\n        },\n        {\n          label: '问题编号',\n          prop: 'id'\n        },\n        {\n          label: '问题分类',\n          prop: 'questionType',\n          colType: 'column',\n          slotName: 'questionType'\n        },\n        {\n          label: '问题内容',\n          prop: 'questionTitle',\n          'show-overflow-tooltip': true\n        },\n        {\n          label: '回复',\n          prop: 'answerCount',\n          colType: 'column',\n          slotName: 'answerCount'\n        },\n        {\n          label: '点赞数',\n          prop: 'likeCount'\n        },\n        {\n          label: '编辑时间',\n          prop: 'updateTime'\n        },\n        {\n          label: '审核时间',\n          prop: 'reviewTime'\n        },\n        {\n          label: '状态',\n          prop: 'status',\n          formatter: (row, col, val) => {\n            if (val !== null) {\n              return this.$D('SHZT', val.toString());\n            } else {\n              return '-';\n            }\n          }\n        },\n        {\n          label: '操作',\n          // colType: 'btns',\n          width: '100px',\n          slotName: 'opera',\n          colType: 'column',\n          btns: []\n        }\n      ],\n      // 查询表单配置\n      formItems: [\n        {\n          type: 'select',\n          prop: 'type',\n          label: '问题分类：',\n          ajax: function() {\n            return findQuesType().then(({ data }) => {\n              return data;\n            });\n          },\n          labelKey: 'questionType',\n          valueKey: 'id'\n        },\n        {\n          type: 'input',\n          prop: 'qusContent',\n          label: '问题内容：'\n        },\n        {\n          type: 'select',\n          prop: 'status',\n          label: '状态：',\n          options: this.$D('SHZT')\n        },\n        {\n          type: 'date-picker',\n          prop: 'updateTime',\n          label: '编辑时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        },\n        {\n          type: 'date-picker',\n          prop: 'reviewTime',\n          label: '审核时间：',\n          attrs: {\n            type: 'daterange',\n            'value-format': 'yyyy-MM-dd'\n          }\n        }\n      ],\n      // 工具栏\n      toolbars: [\n        {\n          label: '批量审核',\n          click: this.onExamineQuest,\n          hidden: () => !this.$has(['quest-examine'])\n        },\n        {\n          label: '批量删除',\n          click: this.deleteQuest,\n          hidden: () => !this.$has(['quest-delete'])\n        }\n      ],\n      //弹窗表单\n      dialogForm: {\n        visible: false,\n        loading: false\n      },\n      //弹窗表单属性\n      dialogFormAttrs: {\n        'label-position': 'right',\n        'label-width': '130px',\n        rules: {\n          code: [\n            {\n              required: true,\n              trigger: 'change',\n              message: '审核结果未填写'\n            }\n          ],\n          nopassKey: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '不通过原因未填写'\n            }\n          ],\n          nopassReason: [\n            {\n              required: true,\n              trigger: 'blur',\n              message: '原因未填写'\n            },\n            {\n              trigger: 'blur',\n              max: 15,\n              message: '限制15字以内'\n            }\n          ]\n        }\n      },\n      //弹窗表单默认值（编辑时传入）\n      dialogFormData: {}\n    };\n  },\n  computed: {\n    // 弹窗表单子项\n    dialogFormItems() {\n      let codeOptions = [];\n      this.$D('SHZT').map(item => {\n        if (item.value != 0) {\n          codeOptions.push(item);\n        }\n      });\n      return [\n        {\n          type: 'select',\n          prop: 'code',\n          label: '审核结果：',\n          options: codeOptions,\n          attrs: {}\n        },\n        {\n          type: 'select',\n          prop: 'nopassKey',\n          label: '不通过原因：',\n          options: this.$D('BTGYY'),\n          hidden(model) {\n            return model.code != 1;\n          },\n          attrs: {}\n        },\n        {\n          type: 'input',\n          prop: 'nopassReason',\n          label: '原因：',\n          hidden(model) {\n            return (\n              !model.code ||\n              model.code == 2 ||\n              !model.nopassKey ||\n              model.nopassKey != 4\n            );\n          },\n          attrs: {\n            maxlength: 15,\n            placeholder: '限制15字以内'\n          }\n        }\n      ];\n    }\n  },\n  watch: {},\n  created() {},\n  mounted() {},\n  methods: {\n    //重置表格查询\n    resetForm() {\n      this.$refs['bTable'].onQueryForm();\n    },\n    /**\n     * 请求table数据\n     */\n    ajaxGetData(params) {\n      if (params.updateTime) {\n        params.editStartTime = params.updateTime[0];\n        params.editEndTime = params.updateTime[1];\n      }\n      if (params.reviewTime) {\n        params.revStartTime = params.reviewTime[0];\n        params.revEndTime = params.reviewTime[1];\n      }\n      delete params.updateTime;\n      delete params.reviewTime;\n      return getQuestionList({\n        ...params\n      });\n    },\n    /**\n     * 刷新列表\n     */\n    refreshTable() {\n      this.$nextTick(() => {\n        this.$refs.bTable && this.$refs.bTable.onRefreshTable();\n      });\n    },\n    /**\n     * 初始化新建表单的数据默认值\n     */\n    initDialogFormData() {\n      this.dialogFormData = {\n        ids: '',\n        code: '',\n        noPassReason: '',\n        nopassKey: ''\n      };\n    },\n    /**\n     * 关闭窗口前处理\n     */\n    onBeforeClose(done) {\n      if (this.dialogForm.loading) return;\n      done();\n    },\n    /**\n     * 表单关闭前清除校验并重置数据\n     */\n    onCloseForm() {\n      this.initDialogFormData();\n      this.$refs['elForm'].resetFields();\n    },\n    /**\n     * 提交表单\n     */\n    onSubmitForm() {\n      this.$refs['elForm'].validate().then(() => {\n        // 校验成功\n        auditQuestStatus(this.dialogFormData)\n          .then(() => {\n            this.$message.success('操作成功');\n            this.dialogForm.visible = false;\n            this.refreshTable();\n          })\n          .finally(() => {\n            this.dialogForm.loading = false;\n          });\n      });\n    },\n    /**\n     * 审核问题\n     */\n    onExamineQuest(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个问题');\n        return;\n      }\n      this.dialogFormData.ids = getIdsArr(rows).join(',');\n      this.dialogForm.visible = true;\n    },\n    /**\n     * 删除问题\n     */\n    deleteQuest(rows) {\n      if (!rows || rows.length === 0) {\n        this.$message('至少选择一个问题');\n        return;\n      }\n      this.$confirm('确定要删除当前问题?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        deleteQuest(getIdsArr(rows)).then(() => {\n          this.$message.success('操作成功');\n          this.refreshTable();\n        });\n      });\n    },\n    /**\n     * 跳转至问题分类\n     */\n    jumpType() {\n      this.$router.push({\n        path: '/question/classify-list'\n      });\n    },\n    /**\n     * 跳转至回复\n     */\n    jumpAnswer(row) {\n      this.$router.push({\n        path: '/question/answer-list',\n        query: {\n          id: row.id\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.text-decoration {\n  text-decoration: underline;\n  color: #409eff;\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/pages/school-book/views/questManage"}]}