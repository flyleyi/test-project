{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BImportDataPanel/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/business/BImportDataPanel/index.vue","mtime":1627979214235},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog\n    :visible.sync=\"visible\"\n    :title=\"title || '导入数据'\"\n    center\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    v-on=\"$listeners\"\n    @closed=\"onClosed\"\n  >\n    <div class=\"import-data-content\">\n      <h3>导入流程</h3>\n      <p>\n        1、我们为您设置了导入模板，下载后按照模板格式内容上传即可；\n        <el-button v-if=\"templateUrl\" type=\"primary\" @click=\"downloadTemplate\">\n          下载模板\n        </el-button>\n      </p>\n      <p>2、黄色表头表示的列为必填项；</p>\n      <p>3、请不要进行插入列操作；</p>\n      <p>4、excel表格数据行之间不要有空行。</p>\n      <el-input :value=\"fileName\" placeholder=\"选择文件\" readonly>\n        <el-button slot=\"append\" @click=\"$refs.file.click()\">浏览</el-button>\n      </el-input>\n      <input\n        v-show=\"false\"\n        v-if=\"renderFile\"\n        type=\"file\"\n        ref=\"file\"\n        accept=\".xls,.xlsx\"\n        @change=\"onChange\"\n      />\n    </div>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"small\" @click=\"visible = false\">取消</el-button>\n      <el-button size=\"small\" type=\"primary\" @click=\"startUpalodFile\">\n        确定上传\n      </el-button>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport axios from '@/plugins/axios';\nimport {\n  MessageBox,\n  Button,\n  Dialog,\n  Message,\n  Input,\n  Loading\n} from 'element-ui';\n/**\n * 获取文件地址后缀名\n * @param {string} url url地址\n */\nfunction getExtension(url) {\n  if (!url || typeof url !== 'string') return '';\n  // eslint-disable-next-line no-useless-escape\n  var res = /\\.([0-9a-zA-Z]+)(?:[\\?#]|$)/i.exec(url);\n  if (!res) return '';\n  return res[1];\n}\n\nexport default {\n  name: 'BImportDataPanel',\n  components: {\n    [Button.name]: Button,\n    [Dialog.name]: Dialog,\n    [Input.name]: Input\n  },\n  props: {\n    /**\n     * 上传地址\n     */\n    url: {\n      type: String,\n      default: ''\n    },\n    ajaxImport: {\n      type: Function,\n      default: () => {}\n    },\n    /**\n     * 最大文件大小\n     * 单位：MB\n     */\n    maxFileSize: {\n      type: Number,\n      default: 2\n    },\n    /**\n     * 标题\n     */\n    title: {\n      type: String,\n      default: ''\n    },\n    /**\n     * 模板下载地址\n     */\n    templateUrl: {\n      type: String,\n      default: ''\n    },\n    /**\n     * 成功回调\n     */\n    onSuccess: {\n      type: Function\n    }\n  },\n  data() {\n    return {\n      renderFile: true, // 渲染文件上传表单\n      visible: false, // 是否显示模态框\n      file: null // 文件\n    };\n  },\n  computed: {\n    /**\n     * 文件名\n     */\n    fileName() {\n      return (this.file && this.file.name) || '';\n    }\n  },\n  watch: {},\n  methods: {\n    /**\n     * 选择文件\n     */\n    onChange(event) {\n      let { files } = event.target;\n      let file = files[0];\n      this.resetFile();\n      if (!files.length) return;\n      if (!this.checkFile(files[0])) return;\n      this.file = file;\n    },\n    /**\n     * 校验文件\n     */\n    checkFile(file) {\n      // 校验文件类型\n      let isExcel =\n        ['xls', 'xlsx'].indexOf(getExtension(file.name).toLowerCase()) !== -1;\n      // 校验文件大小\n      let isLt = file.size / 1024 / 1024 < this.maxFileSize;\n      if (!isExcel) Message.warning('上传文件只能是xls、xlsx格式');\n      if (!isLt) Message.warning('上传文件只能最大2MB');\n      return isExcel && isLt;\n    },\n    /**\n     * 重置file表单，解决重复选择同一个文件不触发change事件问题\n     */\n    resetFile() {\n      this.renderFile = false;\n      this.$nextTick(() => {\n        this.renderFile = true;\n      });\n    },\n    /**\n     * 开始上传文件\n     */\n    startUpalodFile() {\n      if (!this.file || !(this.file instanceof File))\n        return Message.warning('文件未填写');\n      let formData = new FormData();\n      formData.append('file', this.file);\n      let loading = Loading.service({\n        text: '导入中...'\n      });\n      let ajaxPromise = this.ajaxImport && this.ajaxImport(formData);\n      //没有传入ajaxImport，或者非promise类型，则直接执行axios方法\n      if (!ajaxPromise || typeof ajaxPromise.then != 'function') {\n        ajaxPromise = axios({\n          method: 'POST',\n          url: this.url\n        });\n      }\n      ajaxPromise\n        .then(({ data }) => {\n          this.hide();\n          //数据没有完全成功，则显示对应下载按钮\n          if (data && data.total != data.successNum) {\n            let msg = `共${data.total}条数据，已成功导入${data.successNum}条，点击“下载”下载错误报告`;\n            MessageBox.confirm(msg, '提示', {\n              confirmButtonText: '下载',\n              cancelButtonText: '取消',\n              type: 'warning',\n              closeOnClickModal: false,\n              closeOnPressEscape: false,\n              showClose: false\n            }).then(() => {\n              //点击下载\n              window.open(data.fileUrl);\n            });\n          } else {\n            MessageBox.alert(\n              `恭喜！共${data.total}条数据，全部完成导入`,\n              '提示',\n              {\n                confirmButtonText: '确定',\n                type: 'success'\n              }\n            );\n          }\n\n          typeof this.onSuccess === 'function' && this.onSuccess.call();\n        })\n        .catch(e => {\n          console.log('e', e);\n        })\n        .finally(() => {\n          loading.close();\n        });\n    },\n    /**\n     * 下载模板\n     */\n    downloadTemplate() {\n      window.open(this.templateUrl);\n    },\n    /**\n     * 显示\n     */\n    show() {\n      this.file = null;\n      this.visible = true;\n    },\n    /**\n     * 隐藏\n     */\n    hide() {\n      this.visible = false;\n    },\n    /**\n     * 关闭模态框动画结束\n     */\n    onClosed() {\n      this.$emit('close');\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.import-data-content {\n  h3 {\n    font-size: 16px;\n    color: #303133;\n  }\n  p {\n    font-size: 14px;\n    margin: 15px 0;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/business/BImportDataPanel"}]}