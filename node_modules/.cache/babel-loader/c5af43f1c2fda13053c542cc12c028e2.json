{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/homework-admin/views/homework/uploadList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/homework-admin/views/homework/uploadList.vue","mtime":1646020538169},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["uploadList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"containerStyle\">\n    <div class=\"uploadButtonDivStyle\">\n      <el-upload\n        ref=\"upload\"\n        action=\"\"\n        :http-request=\"uploadHttp\"\n        multiple\n        accept=\".jpg,.png,.jpeg,.bmp\"\n        :data=\"dataObj\"\n        :limit=\"limitCount\"\n        :on-remove=\"uploadRemove\"\n        :on-success=\"uploadSuccess\"\n        :show-file-list=\"false\"\n        :on-exceed=\"uploadExceed\"\n        :on-change=\"uploadChange\"\n        :on-progress=\"uploadProgress\"\n        :on-error=\"uploadError\"\n        :before-upload=\"uploadBefore\"\n      >\n        <el-button type=\"primary\" size=\"small\" class=\"uploadButtonStyle\"\n          >上传作业\n        </el-button>\n\n        <span slot=\"tip\" class=\"spanTitleStyle\"\n          >支持拖动图片至页面进行上传</span\n        >\n      </el-upload>\n    </div>\n    <div class=\"listItemStyle\">\n      <upload-list-item\n        :id=\"item.homeworkId\"\n        class=\"itemStyle\"\n        @uploadDetailShow=\"lookforUpLoadDetail($event)\"\n        v-for=\"item in listData.list\"\n        :key=\"item.homeworkId\"\n        :dataObject=\"item\"\n      >\n      </upload-list-item>\n    </div>\n    <div class=\"paginationDivStyle\">\n      <el-pagination\n        :hide-on-single-page=\"value\"\n        :current-page=\"currentPage\"\n        :page-size=\"pageSize\"\n        layout=\"total, prev, pager, next, jumper\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n      >\n      </el-pagination>\n    </div>\n\n    <div v-show=\"isLoading\" class=\"fullScreenStyle\">\n      <div class=\"progressBackgroundDivStyle\">\n        <span class=\"uploadSpanStyle\">努力上传中</span>\n        <el-progress\n          :percentage=\"percentage\"\n          :format=\"format\"\n          :stroke-width=\"14\"\n          color=\"#4EB4FF\"\n        ></el-progress>\n        <span class=\"progressSpanStyle\">上传进度：{{ percentage }}%</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Input, Pagination, Upload, Progress } from 'element-ui';\nimport uploadListItem from './Components/UploadListItem';\nimport Cookie from 'js-cookie';\n// import acions from '../../api/upload/index';\nimport {\n  getUploadParameter,\n  uploadPic,\n  finishUpload,\n  uploadList\n} from '../../api/upload/index';\n// const OSS = require('ali-oss');\n\nexport default {\n  name: 'DynamicFormPage',\n  components: {\n    uploadListItem,\n    ElPagination: Pagination,\n    ElProgress: Progress,\n    ElUpload: Upload,\n    [Input.name]: Input\n  },\n  data() {\n    return {\n      percentage: 0,\n      limitCount: 300,\n      isLoading: false, //正在上传\n      uploadCount: 0, //记录每次上传时的上传数量\n      uploadTotal: 0, //记录这次上传总共多少数量\n      visible: false, // 是否可见\n      value: false,\n      dataObj: {},\n      finishUploadList: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 100,\n      currentPage: 1,\n      listData: []\n    };\n  },\n  computed: {\n    percentageComputed: function() {\n      // return !isNaN((this.uploadCount / this.uploadTotal) * 100);\n      return this.uploadTotal > 0\n        ? parseInt(this.uploadCount / this.uploadTotal) * 100\n        : 0;\n    }\n  },\n  mounted() {},\n  async created() {\n    await this.getlist();\n  },\n  methods: {\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.getlist();\n    },\n    handleSizeChange() {},\n    getlist() {\n      console.log('请求开始');\n      uploadList({\n        pageNum: this.pageNum,\n        pageSize: this.pageSize,\n        schoolId: Cookie.get('schoolId'),\n        tenantId: Cookie.get('tenantId')\n      }).then(res => {\n        console.log('res=', res);\n        // if (res.data.success) {\n        //   this.listData = res.data.data;\n        //   console.log('listData=', this.listData);\n        //   this.total = this.listData.total;\n        //   this.pageNum = this.listData.page;\n        //   this.pageSize = this.listData.pageSize;\n        // }\n        if (res.success) {\n          this.listData = res.data;\n          console.log('listData=', this.listData);\n          this.total = this.listData.total;\n          this.pageNum = this.listData.page;\n          this.pageSize = this.listData.pageSize;\n        }\n      });\n    },\n    lookforUpLoadDetail(data) {\n      let homeworkStatus = 0;\n      if (data.status == 1) {\n        homeworkStatus = 1;\n      }\n      console.log('data.detailList', data.detailList);\n      this.$router.push({\n        name: 'UpLoadDetail',\n        query: {\n          homeworkStatus: homeworkStatus,\n          detailList: data.detailList,\n          homeworkId: data.id\n        }\n      });\n    },\n    uploadRemove() {\n      console.log('handleRemove');\n    },\n    uploadSuccess(response, file, fileList) {\n      this.uploadCount++;\n      this.changeProgress();\n      console.log('response++++', response);\n      this.finishUploadList.push({ fileName: response.data });\n\n      console.log('uploadCount===', this.uploadCount);\n      console.log('handleSuccess');\n      console.log('fileList====', fileList);\n      if (fileList.length == this.uploadCount) {\n        console.log('全部上传成功');\n        this.uploadCount = 0;\n        let upload = this.$refs.upload;\n        if (upload) {\n          upload.clearFiles();\n          this.isLoading = false;\n        }\n\n        console.log('finishUploadList++++', this.finishUploadList);\n        console.log('schoolId+' + Cookie.get('schoolId'));\n        console.log('tenantId+' + Cookie.get('tenantId'));\n\n        if (this.finishUploadList.length > 0) {\n          finishUpload({\n            list: this.finishUploadList,\n            schoolId: Cookie.get('schoolId'),\n            tenantId: Cookie.get('tenantId')\n          }).then(res => {\n            this.finishUploadList = [];\n            console.log('finishLog = ', res);\n            if (!res.success) {\n              this.$message({\n                type: 'error',\n                message: '上传失败',\n                showClose: true,\n                offset: 80\n              });\n            } else {\n              //重新刷新列表\n              this.getlist();\n            }\n          });\n        }\n      }\n    },\n\n    uploadExceed() {\n      console.log('handleExceed');\n      this.$message({\n        type: 'warning',\n        message: '上传数量不能超过' + this.limitCount + '个',\n        showClose: true,\n        offset: 80\n      });\n    },\n    uploadChange(file, fileList) {\n      //文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\n      // console.log('hanldeChange==', fileList);\n      // console.log('hanldeChange==', fileList.length);\n      this.uploadTotal = fileList.length;\n    },\n    uploadProgress() {\n      //文件上传时\n      console.log('handleProgress');\n    },\n    uploadHttp(file, fileList) {\n      console.log('uploadHttpfileList====', file.file.name);\n      const fileSuffix = file.file.name.substring(\n        file.file.name.lastIndexOf('.') + 1\n      );\n      console.log('fileSuffix====', fileSuffix);\n\n      if (!this.isLoading) {\n        this.isLoading = true;\n      }\n      console.log('uploadHttp+++' + file.file);\n      return getUploadParameter({\n        fileType: fileSuffix\n      }).then(res => {\n        console.log(res);\n        console.log('res+++' + res.success);\n\n        if (res.success) {\n          console.log('uploadPic+++' + file.file);\n\n          return uploadPic(file.file, res.data);\n        }\n      });\n    },\n    uploadError(err, file, fileList) {\n      console.log('handleError');\n      this.uploadCount++;\n      this.changeProgress();\n      console.log('uploadCount===', this.uploadCount);\n      if (fileList.length == this.uploadCount) {\n        console.log('在失败方法内全部上传成功');\n        this.uploadCount = 0;\n        if (this.finishUploadList.length > 0) {\n          finishUpload({ list: this.finishUploadList }).then(res => {\n            this.finishUploadList = [];\n            if (!res.success) {\n              this.$message({\n                type: 'error',\n                message: '上传失败',\n                showClose: true,\n                offset: 80\n              });\n            } else {\n              //重新刷新列表\n              this.getlist();\n            }\n          });\n        }\n\n        let upload = this.$refs.upload;\n        if (upload) {\n          upload.clearFiles();\n          this.isLoading = false;\n        }\n      }\n    },\n    uploadBefore(file, fileList) {\n      console.log('uploadBefore=====');\n      const fileSuffix = file.name.substring(file.name.lastIndexOf('.') + 1);\n      const whiteList = ['png', 'jpg', 'jpeg', 'bmp'];\n      let lowerFileSuffix = fileSuffix.toLowerCase();\n      if (whiteList.indexOf(lowerFileSuffix) === -1) {\n        this.$message({\n          type: 'error',\n          message: '请选择“jpg、png、jpeg、bmp”的图片上传',\n          showClose: true,\n          offset: 80\n        });\n        this.fileList = [];\n        return false;\n      }\n\n      if (file.name.length > 100) {\n        this.$message({\n          type: 'error',\n          message: '图片名称不能超过100字',\n          showClose: true,\n          offset: 80\n        });\n        return false;\n      }\n\n      const isLt2M = file.size / 1024 / 1024 < 100;\n      if (!isLt2M) {\n        this.$message({\n          type: 'error',\n          message: '上传文件不能超过100MB',\n          showClose: true,\n          offset: 80\n        });\n        return false;\n      }\n    },\n    format(percentage) {\n      return '';\n    },\n    changeProgress() {\n      this.percentage =\n        this.uploadTotal > 0\n          ? parseInt((this.uploadCount / this.uploadTotal) * 100)\n          : 0;\n    }\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n// .el-button {\n//   height: 34px !important;\n//   width: 106px !important;\n//   margin: 20px 0px 0px 24px !important;\n// }\n/deep/.el-progress-bar__outer {\n  width: 305px;\n  margin-top: 29px;\n  margin-left: 39px;\n}\n\n.uploadButtonStyle {\n  height: 34px;\n  width: 106px;\n  margin: 20px 0px 0px 24px;\n}\n\n/deep/ .el-pager li.active {\n  // color: #3195df;\n  color: white;\n  background-color: #3195df;\n}\n\n/deep/ .el-pager li:hover {\n  color: #3195df;\n}\n\n/deep/.el-pagination button:hover {\n  color: #3195df;\n}\n\n/deep/.el-pager li {\n  padding: 0 10px;\n  background: #fff;\n  font-size: 14px;\n  min-width: 24px;\n  height: 28px;\n  line-height: 28px;\n  box-sizing: border-box;\n  text-align: center;\n  font-family: 'PingFangSC-Regular';\n}\n</style>\n\n<style>\n.containerStyle {\n  margin: 0 auto;\n  max-width: 1200px;\n  height: 694px;\n  background-color: white;\n}\n.uploadButtonDivStyle {\n  height: 75px;\n}\n.spanTitleStyle {\n  margin-left: 16px;\n  height: 12px;\n  line-height: 75px;\n  color: #909090;\n  font-size: 12;\n}\n.listItemStyle {\n  padding-left: 24px;\n  padding-right: 24px;\n  max-height: 554px;\n\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n\n.itemStyle {\n  margin-bottom: 13px;\n}\n.el-pagination {\n  text-align: right;\n  margin-right: 19px;\n  height: 30px;\n  /* margin-top: 12px; */\n  padding: 17px 0px 0px 0px;\n}\n\n.paginationDivStyle {\n  height: 68px;\n  /* background-color: red; */\n}\n.fullScreenStyle {\n  /* position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5); */\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 100;\n}\n.progressBackgroundDivStyle {\n  width: 383px;\n  height: 147px;\n  border-radius: 8px;\n  background-color: #ffffff;\n  position: absolute;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  /* margin: 0 auto;\n  display: flex;\n  justify-content: center;\n  align-items: center; */\n}\n.uploadSpanStyle {\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  color: #484848;\n  font-size: 16px;\n  height: 17px;\n  font-family: 'PingFangSC-Semibold';\n}\n.progressSpanStyle {\n  display: flex;\n  justify-content: center;\n  margin-top: 11px;\n  color: #3195df;\n  font-size: 14px;\n  height: 16px;\n  font-family: 'PingFangSC-Medium';\n}\n</style>\n"],"sourceRoot":"src/pages/homework-admin/views/homework"}]}