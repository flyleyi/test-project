{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/practice/mutilwap/src/components/common/CDynamicForm/components/DfCascader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/components/common/CDynamicForm/components/DfCascader.vue","mtime":1627979214237},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvZnV5dWV5aS9EZXNrdG9wL3ByYWN0aWNlL211dGlsd2FwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfQ2FzY2FkZXIyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL2Nhc2NhZGVyLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX0Nhc2NhZGVyIGZyb20gImVsZW1lbnQtdWkvbGliL2Nhc2NhZGVyIjsKaW1wb3J0IF9JbnB1dDIgZnJvbSAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvaW5wdXQuY3NzIjsKaW1wb3J0ICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9iYXNlLmNzcyI7CmltcG9ydCBfSW5wdXQgZnJvbSAiZWxlbWVudC11aS9saWIvaW5wdXQiOwppbXBvcnQgX1RyZWUyIGZyb20gImVsZW1lbnQtdWkvbGliL3RoZW1lLWNoYWxrL3RyZWUuY3NzIjsKaW1wb3J0ICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9iYXNlLmNzcyI7CmltcG9ydCBfVHJlZSBmcm9tICJlbGVtZW50LXVpL2xpYi90cmVlIjsKCnZhciBfY29tcG9uZW50czsKCmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVXRpbHMgZnJvbSAnLi91dGlscyc7CmltcG9ydCBkZk1peGluIGZyb20gJy4uL21peGlucy9kZi1taXhpbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGZDYXNjYWRlcicsCiAgbWl4aW5zOiBbZGZNaXhpbl0sCiAgY29tcG9uZW50czogKF9jb21wb25lbnRzID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfY29tcG9uZW50cywgX1RyZWUubmFtZSwgX1RyZWUpLCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudHMsIF9JbnB1dC5uYW1lLCBfSW5wdXQpLCBfZGVmaW5lUHJvcGVydHkoX2NvbXBvbmVudHMsIF9DYXNjYWRlci5uYW1lLCBfQ2FzY2FkZXIpLCBfY29tcG9uZW50cyksCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy9jb25zb2xlLmxvZygnY3RyZWUgQ3JlYXRlZC4uLicpOwogICAgLy/lpJp0YWdz5qih5byP5LiL5LiN5bu66K6u5L2/55SoZ2V0RGF0YeaWueW8j+iOt+WPluaVsOaNrizkvJrlr7zoh7TlpJrmrKHph43lpI3liJvlu7rph43lpI3or7fmsYIKICAgIHRoaXMuYXR0cnMuZ2V0RGF0YSAmJiB0aGlzLmF0dHJzLmdldERhdGEoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgX3RoaXMudHJlZSA9IFV0aWxzLmRlbGV0ZUVtcHR5KHJlcy5kYXRhIHx8IHJlcyB8fCBbXSk7CiAgICAgIGNvbnNvbGUubG9nKF90aGlzLnRyZWUpOwogICAgfSk7CiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IFtTdHJpbmcsIE51bWJlciwgQXJyYXldCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gZGF0YTogW3sKICAgICAgLy8gICBsYWJlbDogJ+S4gOe6pyAxJywKICAgICAgLy8gICBpZDogMQogICAgICAvLyB9XSwKICAgICAgLy8gZGVmYXVsdFByb3BzOiB7CiAgICAgIC8vICAgY2hpbGRyZW46ICdjaGlsZHJlbicsCiAgICAgIC8vICAgbGFiZWw6ICdsYWJlbCcKICAgICAgLy8gfSwKICAgICAgLy8gaXNUcmVlT3BlbjogZmFsc2UsCiAgICAgIHRyZWU6IFtdCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbDogZnVuY3Rpb24gdmFsKCkgewogICAgICAvL+ino+WGs3YtbW9kZWznu5HlrpoKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnZhbCk7CiAgICB9LAogICAgJ2F0dHJzLnRyZWUnOiB7CiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobm93KSB7CiAgICAgICAgLy9jb25zb2xlLmxvZygnYXR0cnMudHJlZScsIG5vdyAsIHRoaXMpOwogICAgICAgIGlmICh0aGlzLmF0dHJzLmdldERhdGEpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMudHJlZSA9IG5vdyB8fCBbXTsKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB0cmVlRGF0YUNoYW5nZUZpZWxkOiBVdGlscy50cmVlRGF0YUNoYW5nZUZpZWxkLAogICAgLy8gaGFuZGxlTm9kZUNsaWNrKGRhdGEsIG5vZGUsIHJlZikgewogICAgLy8gICAvL+agkeiiq+eCueWHu+S6i+S7tgogICAgLy8gICBjb25zb2xlLmxvZyhkYXRhLCBub2RlLCByZWYpOwogICAgLy8gICB0aGlzLmVtaXQobm9kZS5kYXRhLmlkKTsKICAgIC8vICAgdGhpcy5jbG9zZVRyZWUoKTsKICAgIC8vIH0sCiAgICAvLyBoYW5kbGVDaGVjaygpIHsKICAgIC8vICAgLy/lvZPmoJHlpI3pgInmoYbooqvngrnlh7vnmoTml7blgJnop6blj5EKICAgIC8vICAgY29uc29sZS5sb2coYXJndW1lbnRzKTsKICAgIC8vIH0sCiAgICAvLyBjbG9zZVRyZWUoKSB7CiAgICAvLyAgIC8v5YWz6Zet5qCR5by556qXCiAgICAvLyAgIHRoaXMuaXNUcmVlT3BlbiA9IGZhbHNlOwogICAgLy8gfSwKICAgIGhhbmRsZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbHVlKSB7CiAgICAgIC8v5b2T57qn6IGU6YCJ5Lit6IqC54K55Y+Y5YyW5pe26Kem5Y+RCiAgICAgIGNvbnNvbGUubG9nKHZhbHVlKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["DfCascader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,OAAA,KAAA,MAAA,SAAA;AACA,OAAA,OAAA,MAAA,oBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,MAAA,EAAA,CAAA,OAAA,CAFA;AAGA,EAAA,UAAA,kDACA,MAAA,IADA,uCAEA,OAAA,IAFA,wCAGA,UAAA,IAHA,0BAHA;AAQA,EAAA,OARA,qBAQA;AAAA;;AACA;AAEA;AACA,SAAA,KAAA,CAAA,OAAA,IACA,KAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,KAAA,CAAA,WAAA,CAAA,GAAA,CAAA,IAAA,IAAA,GAAA,IAAA,EAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA;AACA,KAHA,CADA;AAKA,GAjBA;AAkBA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA;AADA,GAlBA;AAqBA,EAAA,IArBA,kBAqBA;AACA,WAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAA,IAAA,EAAA;AAVA,KAAA;AAYA,GAlCA;AAmCA,EAAA,KAAA,EAAA;AACA,IAAA,GADA,iBACA;AACA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,GAAA;AACA,KAJA;AAKA,kBAAA;AACA,MAAA,OADA,mBACA,GADA,EACA;AACA;AACA,YAAA,KAAA,KAAA,CAAA,OAAA,EAAA;AACA;AACA;;AACA,aAAA,IAAA,GAAA,GAAA,IAAA,EAAA;AACA,OAPA;AAQA,MAAA,SAAA,EAAA;AARA;AALA,GAnCA;AAmDA,EAAA,OAAA,EAAA;AACA,IAAA,mBAAA,EAAA,KAAA,CAAA,mBADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,YAhBA,wBAgBA,KAhBA,EAgBA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA;AAnBA;AAnDA,CAAA","sourcesContent":["<template>\r\n  <div class=\"ctree\" @click.stop>\r\n    <!-- <template v-if=\"!attrs.cascader\">\r\n      <el-input\r\n        v-model.trim=\"innerValue\"\r\n        @click.native=\"isTreeOpen = true\"\r\n        class=\"ctree-input\"\r\n        type=\"input\"\r\n        suffix-icon=\"el-icon-arrow-down\"\r\n        readonly\r\n      >\r\n      </el-input>\r\n      <div\r\n        class=\"ctree-pos el-popper\"\r\n        x-placement=\"bottom-start\"\r\n        v-if=\"isTreeOpen\"\r\n      >\r\n        <div class=\"popper__arrow\" style=\"left:35px\"></div>\r\n        <el-tree\r\n          :props=\"defaultProps\"\r\n          @node-click=\"handleNodeClick\"\r\n          @check=\"handleCheck\"\r\n          v-bind=\"attrs\"\r\n          v-on=\"events\"\r\n          :data=\"tree\"\r\n        ></el-tree>\r\n      </div>\r\n    </template> -->\r\n    <template>\r\n      <el-cascader\r\n        v-on=\"events\"\r\n        v-bind=\"attrs\"\r\n        :props=\"attrs.props\"\r\n        v-model=\"val\"\r\n        :options=\"\r\n          treeDataChangeField(\r\n            tree,\r\n            attrs.settings || {\r\n              data: { id: 'value', name: 'label' },\r\n              treeNodes: 'children'\r\n            }\r\n          )\r\n        \"\r\n        @change=\"handleChange\"\r\n        style=\"width:100%\"\r\n      ></el-cascader>\r\n    </template>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Tree, Input, Cascader } from 'element-ui';\r\nimport Utils from './utils';\r\nimport dfMixin from '../mixins/df-mixin';\r\nexport default {\r\n  name: 'DfCascader',\r\n  mixins: [dfMixin],\r\n  components: {\r\n    [Tree.name]: Tree,\r\n    [Input.name]: Input,\r\n    [Cascader.name]: Cascader\r\n  },\r\n  created() {\r\n    //console.log('ctree Created...');\r\n\r\n    //多tags模式下不建议使用getData方式获取数据,会导致多次重复创建重复请求\r\n    this.attrs.getData &&\r\n      this.attrs.getData().then(res => {\r\n        this.tree = Utils.deleteEmpty(res.data || res || []);\r\n        console.log(this.tree);\r\n      });\r\n  },\r\n  props: {\r\n    value: [String, Number, Array]\r\n  },\r\n  data() {\r\n    return {\r\n      // data: [{\r\n      //   label: '一级 1',\r\n      //   id: 1\r\n      // }],\r\n      // defaultProps: {\r\n      //   children: 'children',\r\n      //   label: 'label'\r\n      // },\r\n      // isTreeOpen: false,\r\n      tree: []\r\n    };\r\n  },\r\n  watch: {\r\n    val() {\r\n      //解决v-model绑定\r\n      this.$emit('input', this.val);\r\n    },\r\n    'attrs.tree': {\r\n      handler(now) {\r\n        //console.log('attrs.tree', now , this);\r\n        if (this.attrs.getData) {\r\n          return;\r\n        }\r\n        this.tree = now || [];\r\n      },\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    treeDataChangeField: Utils.treeDataChangeField,\r\n    // handleNodeClick(data, node, ref) {\r\n    //   //树被点击事件\r\n    //   console.log(data, node, ref);\r\n    //   this.emit(node.data.id);\r\n    //   this.closeTree();\r\n    // },\r\n    // handleCheck() {\r\n    //   //当树复选框被点击的时候触发\r\n    //   console.log(arguments);\r\n    // },\r\n    // closeTree() {\r\n    //   //关闭树弹窗\r\n    //   this.isTreeOpen = false;\r\n    // },\r\n    handleChange(value) {\r\n      //当级联选中节点变化时触发\r\n      console.log(value);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.ctree {\r\n  &-input /deep/ input {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &-pos {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 100%;\r\n    z-index: 1111;\r\n    right: 0;\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n    border: 1px solid #e4e7ed;\r\n    border-radius: 4px;\r\n    background-color: #fff;\r\n    padding: 6px 20px;\r\n    box-sizing: border-box;\r\n    margin-bottom: 40px;\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/common/CDynamicForm/components"}]}