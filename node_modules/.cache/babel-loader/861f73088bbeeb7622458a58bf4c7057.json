{"remainingRequest":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js??ref--13-0!/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/plugins/core/permission.js","dependencies":[{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/plugins/core/permission.js","mtime":1627979214385},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/practice/mutilwap/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/fuyueyi/Desktop/practice/mutilwap/src/pages/sims/plugins/core/permission.js"],"names":["router","generateRoutes","store","NProgress","getToken","loadAreaMap","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","state","settings","hasToken","path","done","hasAppDataLoaded","getters","loading","service","text","dispatch","menuList","accessRoutes","addRoutes","commit","replace","close","console","error","confirm","confirmButtonText","cancelButtonText","closeOnClickModal","closeOnPressEscape","showClose","type","indexOf","afterEach"],"mappings":"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","sourcesContent":["import router, { generateRoutes } from '../../router';\nimport store from '../../store';\nimport { MessageBox, Loading } from 'element-ui';\nimport NProgress from 'nprogress'; // progress bar\nimport 'nprogress/nprogress.css'; // progress bar style\nimport { getToken } from '../../../../plugins/core/auth'; // get token from cookie\nimport { loadAreaMap } from '../common/area';\n\nNProgress.configure({ showSpinner: false }); // NProgress Configuration\n\nconst whiteList = ['/login', '/sso/auth']; // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n  // start progress bar\n  NProgress.start();\n\n  // set page title\n  document.title = to.meta.title || store.state.settings.title;\n\n  // determine whether the user has logged in\n  const hasToken = getToken();\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' });\n      NProgress.done(); // hack: https://github.com/PanJiaChen/vue-element-admin/pull/2939\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      // const hasRoles = store.getters.roles && store.getters.roles.length > 0;\n      const hasAppDataLoaded = !!store.getters.hasAppDataLoaded;\n      if (hasAppDataLoaded) {\n        next();\n      } else {\n        let loading = Loading.service({\n          text: '努力加载数据中...'\n        });\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          await store.dispatch('user/getInfo'); // 加载用户信息\n\n          await store.dispatch('dict/ajaxGetData'); // 加载数据字典\n\n          let { menuList } = await store.dispatch('auth/getAuthData'); // 获取权限数据\n\n          await loadAreaMap(); // 加载行政区域编码数据\n\n          // generate accessible routes map based on roles\n          // const accessRoutes = await store.dispatch(\n          //   'auth/generateRoutes',\n          //   menuList\n          // );\n          const accessRoutes = generateRoutes(menuList); // 生成允许访问的路由\n          // dynamically add accessible routes\n          router.addRoutes(accessRoutes);\n\n          store.commit('app/FINISH_DATA_LOAD'); // 数据加载完成\n\n          // hack method to ensure that addRoutes is complete\n          // set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true });\n          loading.close();\n        } catch (error) {\n          loading.close();\n          // remove token and go to login page to re-login\n          console.error(error);\n          try {\n            await MessageBox.confirm(\n              '当前数据加载不稳定，请您重新登录或重新加载',\n              '错误',\n              {\n                confirmButtonText: '重新加载数据',\n                cancelButtonText: '登录页面',\n                closeOnClickModal: false,\n                closeOnPressEscape: false,\n                showClose: false,\n                type: 'error'\n              }\n            );\n            // 重新加载数据\n            next({\n              ...to,\n              replace: true\n            });\n          } catch (e) {\n            console.error(e);\n            // 登出\n            await store.dispatch('user/resetToken');\n            next(`/login?redirect=${to.path}`);\n            NProgress.done();\n          }\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next();\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`);\n      NProgress.done();\n    }\n  }\n});\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done();\n});\n"]}]}