{"remainingRequest":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/business/BTable/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/src/components/business/BTable/index.vue","mtime":1646020538151},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fuyueyi/Desktop/yjy-projects/multi-project/mutilwap/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"c-table\">\r\n    <c-dynamic-form\r\n      v-if=\"formItems && formItems.length\"\r\n      ref=\"cDynamicForm\"\r\n      :form-data=\"formData\"\r\n      :form-items=\"computedFormItems\"\r\n      :form-attrs=\"formAttrs\"\r\n      @change-model=\"model => (formData = model)\"\r\n      @keyup.enter.native=\"onQueryForm\"\r\n    >\r\n      <el-form-item slot=\"form-after\">\r\n        <el-button @click=\"onResetForm\">重置</el-button>\r\n        <el-button type=\"primary\" @click=\"onQueryForm\">查询</el-button>\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showQueryFilter\"\r\n          @click=\"onFilterQueryCondition\"\r\n          >设置筛选项</el-button\r\n        >\r\n      </el-form-item>\r\n    </c-dynamic-form>\r\n    <div class=\"toolbars\">\r\n      <div class=\"toolbars-left\">\r\n        <template v-for=\"(tool, index) in toolbars\">\r\n          <el-dropdown\r\n            v-if=\"tool.type === 'dropdown'\"\r\n            :key=\"index\"\r\n            size=\"small\"\r\n            @command=\"\r\n              command =>\r\n                typeof tool.command === 'function' &&\r\n                tool.command(command, selectRows)\r\n            \"\r\n          >\r\n            <el-button type=\"primary\" v-bind=\"tool.attrs\" size=\"small\">\r\n              {{ tool.label }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n            </el-button>\r\n            <el-dropdown-menu\r\n              v-if=\"tool.btns && tool.btns.length\"\r\n              slot=\"dropdown\"\r\n            >\r\n              <el-dropdown-item\r\n                v-for=\"(btn, i) in tool.btns\"\r\n                v-bind=\"btn.attrs\"\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                :key=\"'' + index + i\"\r\n                v-show=\"!isHiddenButton(tool)\"\r\n                @click.native=\"\r\n                  typeof btn.click === 'function' && btn.click(selectRows)\r\n                \"\r\n              >\r\n                {{ btn.label }}\r\n              </el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n          <slot\r\n            v-else-if=\"tool.type === 'slot'\"\r\n            :name=\"'toolbars|' + tool.slotName\"\r\n            v-bind:rows=\"selectRows\"\r\n          />\r\n          <el-button\r\n            v-else\r\n            v-bind=\"tool.attrs\"\r\n            :key=\"index\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            v-show=\"!isHiddenButton(tool)\"\r\n            @click=\"typeof tool.click === 'function' && tool.click(selectRows)\"\r\n          >\r\n            {{ tool.label }}\r\n          </el-button>\r\n        </template>\r\n      </div>\r\n      <div class=\"toolbars-right\">\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showRefresh\"\r\n          size=\"small\"\r\n          @click=\"onRefreshTable\"\r\n          >刷新</el-button\r\n        >\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"showColumn\"\r\n          size=\"small\"\r\n          @click=\"onChangeColumn\"\r\n          >自定义显示列</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- <hl-table :data=\"data\" :headers=\"headers\"></hl-table> -->\r\n    <slot name=\"table-before\" />\r\n    <slot name=\"table-title\"></slot>\r\n    <c-table\r\n      :border=\"true\"\r\n      v-bind=\"$attrs\"\r\n      v-on=\"$listeners\"\r\n      size=\"small\"\r\n      :data=\"tableData\"\r\n      :headers=\"computedHeaders\"\r\n      @selection-change=\"onSelectionChange\"\r\n      @sort-change=\"onSortChange\"\r\n      ref=\"table\"\r\n    >\r\n      <!-- 自定义列插槽 -->\r\n      <template\r\n        v-for=\"col in headers\"\r\n        :slot=\"'column|' + (col.slotName || col.prop)\"\r\n        slot-scope=\"scope\"\r\n      >\r\n        <slot\r\n          :name=\"'column|' + (col.slotName || col.prop)\"\r\n          :row=\"scope.row\"\r\n          :$index=\"scope.$index\"\r\n        ></slot>\r\n      </template>\r\n    </c-table>\r\n    <el-pagination\r\n      background\r\n      layout=\"total, prev, pager, next, sizes, slot, jumper\"\r\n      :page-sizes=\"pageSizes\"\r\n      :total=\"pageParams.total\"\r\n      :current-page.sync=\"pageParams.page\"\r\n      :page-size=\"pageParams.limit\"\r\n      :style=\"{ 'margin-top': pgMarginTop + 'px' }\"\r\n      @size-change=\"onPgSizeChange\"\r\n    >\r\n      <span class=\"el-pagination-slot\">跳至</span>\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n<script>\r\nlet CFilterCheckPanel = () =>\r\n  import('@/components/common/CFilterCheckPanel/index.js');\r\nimport axios from '@/plugins/axios';\r\nimport { Button, Pagination, Loading, FormItem, Message } from 'element-ui';\r\nimport CDynamicForm from '../../common/CDynamicForm';\r\nimport CTable from '../../common/CTable';\r\nimport { getConfig } from './config';\r\n/**\r\n * 格式化空数据显示\r\n */\r\nlet formatterEmptyData = str =>\r\n  ['', null, undefined].indexOf(str) >= 0 ? '-' : str;\r\nexport default {\r\n  name: 'BTable',\r\n  props: {\r\n    //数据查询是否展示loading\r\n    loading: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //数据查询func，返回promise对象\r\n    ajaxGetData: {\r\n      type: Function,\r\n      default: () => {}\r\n    },\r\n    //保存筛选结果（显示列/筛选项）\r\n    ajaxFilterSave: {\r\n      type: Function\r\n    },\r\n    //查询筛选结果（显示列/筛选项）\r\n    ajaxFilterQuery: {\r\n      type: Function\r\n    },\r\n    //表头数组\r\n    headers: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    //分页组件与表间距\r\n    pgMarginTop: {\r\n      type: Number,\r\n      default: 20\r\n    },\r\n    //每页展示数量选择\r\n    pageSizes: {\r\n      type: Array,\r\n      default: () => [10, 50, 100, 500, 1000]\r\n    },\r\n    //默认每页展示数量\r\n    pageLimit: {\r\n      type: Number,\r\n      default: 50\r\n    },\r\n    // 表单配置\r\n    formItems: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    // 初始化表单数据\r\n    initialFormData: {\r\n      type: Object,\r\n      default: () => ({})\r\n    },\r\n    // 工具栏\r\n    toolbars: {\r\n      type: Array,\r\n      default: () => []\r\n    },\r\n    //显示刷新按钮\r\n    showRefresh: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    //显示列\r\n    showColumn: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //显示筛选项按钮\r\n    showQueryFilter: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    //保存column列显示所使用的的key\r\n    saveColumnKey: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    //保存筛选项显示所使用的的key\r\n    saveQueryKey: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    //项目系统(用于保存列数据时的参数)\r\n    system: {\r\n      type: String,\r\n      default: undefined\r\n    },\r\n    //保存列对应的成功提示文案\r\n    saveSuccessMsg: {\r\n      type: String,\r\n      default: '保存成功'\r\n    },\r\n    //保存列对应的失败提示文案\r\n    saveErrorMsg: {\r\n      type: String,\r\n      default: '数据保存失败'\r\n    },\r\n    /**\r\n     * 立即加载\r\n     */\r\n    immediateLoad: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n    /**\r\n     * 行数据键值\r\n     */\r\n    // rowKey: {\r\n    //   type: [Function, String]\r\n    // },\r\n    // expandRowKeys: {\r\n    //   type: Array\r\n    // }\r\n  },\r\n  components: {\r\n    CTable,\r\n    ElPagination: Pagination,\r\n    CDynamicForm,\r\n    [FormItem.name]: FormItem,\r\n    [Button.name]: Button\r\n  },\r\n  data() {\r\n    return {\r\n      headerPromise: null,\r\n      computedHeaders: [],\r\n      computedFormItems: [],\r\n      ajaxCount: 0,\r\n      selectRows: [],\r\n      loadingIns: null,\r\n      //分页参数\r\n      pageParams: {\r\n        total: 0,\r\n        offset: 0,\r\n        limit: this.pageLimit,\r\n        page: 1\r\n      },\r\n      //排序参数\r\n      sortParams: {\r\n        sort: undefined,\r\n        order: undefined\r\n      },\r\n      tableData: [],\r\n      // 表单数据\r\n      formData: { ...this.initialFormData },\r\n      // 表单数据\r\n      formAttrs: {\r\n        inline: true,\r\n        size: 'small'\r\n      },\r\n      // 是否是数组\r\n      isArray: arr => Array.isArray(arr),\r\n      sysConfig: {} //根据配置参数及prop入参，动态配置\r\n    };\r\n  },\r\n  watch: {\r\n    //每页展示数量变化\r\n    'pageParams.limit'() {\r\n      let { page } = this.pageParams;\r\n      if (page == 1) {\r\n        //在第一页修改每页数量时，触发重新请求\r\n        this.ajaxGetTableDataByPage();\r\n      } else {\r\n        //非首页修改，将页码改为首页，触发页码更新监听\r\n        this.pageParams.page = 1;\r\n      }\r\n    },\r\n    //当前页码变化\r\n    'pageParams.page'() {\r\n      let { page, limit } = this.pageParams;\r\n      this.pageParams.offset = limit * (page - 1);\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    // 数据变化\r\n    tableData() {\r\n      this.$emit('table-data-change', this.tableData);\r\n    },\r\n    formItems() {\r\n      //formItems 变化处理\r\n      this.dealQueryItems();\r\n    }\r\n  },\r\n  computed: {\r\n    //请求入参\r\n    ajaxPageParams() {\r\n      // let param = this.pageParams;\r\n      let { offset, limit, page } = this.pageParams;\r\n      return { offset, limit, pageSize: limit, pageNum: page };\r\n    },\r\n    //存储列数据所用key\r\n    computedSaveColumnKey() {\r\n      if (this.saveColumnKey) return this.saveColumnKey;\r\n      let key;\r\n      try {\r\n        key = this.$route.path;\r\n      } catch (error) {\r\n        key = 'default';\r\n      }\r\n      return 'table|' + key;\r\n    },\r\n    //存储筛选项所用key\r\n    computedSaveQueryKey() {\r\n      if (this.saveQueryKey) return this.saveQueryKey;\r\n      let key;\r\n      try {\r\n        key = this.$route.path;\r\n      } catch (error) {\r\n        key = 'default';\r\n      }\r\n      return 'query|' + key;\r\n    }\r\n  },\r\n  created() {\r\n    this.initConfig(); //默认配置初始化\r\n    this.headerPromise = this.dealHeaders(); //表头处理\r\n    this.dealQueryItems(); //表单查询项处理\r\n  },\r\n  mounted() {\r\n    this.immediateLoad && this.ajaxGetTableDataByPage();\r\n  },\r\n  methods: {\r\n    //分页接口请求数据处理\r\n    ajaxGetTableDataByPage() {\r\n      (this.$refs.cDynamicForm\r\n        ? this.$refs.cDynamicForm.validate()\r\n        : Promise.resolve()\r\n      ).then(() => {\r\n        let tAjaxCount = ++this.ajaxCount;\r\n        let lastLoadingMap = this.lastLoadingMap;\r\n        if (!this.$refs.table) return; //查询中途实例被销毁，终端\r\n        //默认load实例不存在，创建/已存在，使用原有load对象\r\n        if (!this.loadingIns) {\r\n          //填充loading展示默认值，兼容处理\r\n          let loadIns = {\r\n            close() {}\r\n          };\r\n          //需要展示loading\r\n          if (this.loading) {\r\n            loadIns = Loading.service({\r\n              target: this.$refs.table.$el\r\n            });\r\n          }\r\n          this.loadingIns = loadIns;\r\n        }\r\n        let ajaxParams = {\r\n          ...this.ajaxPageParams,\r\n          ...this.formData,\r\n          ...this.sortParams\r\n        };\r\n        //获取func入参\r\n        let dataFun = this.ajaxGetData;\r\n        //完成回调\r\n        let callFun = res => {\r\n          // console.log('-', tAjaxCount, ajaxCount, res, this.pageParams);\r\n          if (tAjaxCount != this.ajaxCount) return; //当前请求非最新请求，跳过处理\r\n          this.loadingIns.close(); //关闭loading\r\n          this.loadingIns = null; //置空load示例\r\n          if (!res) return;\r\n          let data = res.data || {};\r\n          this.tableData = Array.isArray(data.records) ? data.records : []; //表数据\r\n          this.pageParams.total = data.total || 0; //数据长度\r\n          if (this.tableData.length === 0) this.pageParams.page = 1; //无数据时，重定向第一页\r\n        };\r\n        //func判非空并执行\r\n        let dataPromise = dataFun && dataFun(ajaxParams);\r\n        //promise接收返回值\r\n        if (dataPromise && typeof dataPromise.then == 'function') {\r\n          Promise.all([dataPromise, this.headerPromise])\r\n            .then(res => {\r\n              callFun(res[0]);\r\n            })\r\n            .catch(e => {\r\n              console.error(e);\r\n              callFun();\r\n            });\r\n        } else {\r\n          callFun();\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取服务端保存的列/筛选项配置信息\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    ajaxGetShowFilterData(type = 1) {\r\n      let { system, ajaxFilterQuery } = this.sysConfig;\r\n      let key = this.getSaveKey(type);\r\n      if (typeof ajaxFilterQuery == 'function')\r\n        return ajaxFilterQuery({\r\n          system,\r\n          key\r\n        });\r\n      return [];\r\n    },\r\n    /**\r\n     * 保存显示列/筛选项\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    ajaxSaveFilterData(params, type = 1) {\r\n      let { system, ajaxFilterSave } = this.sysConfig;\r\n      let key = this.getSaveKey(type);\r\n      if (typeof ajaxFilterSave == 'function')\r\n        return ajaxFilterSave({\r\n          system,\r\n          key,\r\n          columns: params\r\n        });\r\n      return [];\r\n    },\r\n    //表单查询项预处理，默认筛选显示数据从远程或本地获取并覆盖\r\n    async dealQueryItems() {\r\n      let formItems = this.formItems;\r\n      let { ajaxFilterQuery, ajaxFilterSave } = this.sysConfig;\r\n      //需要“显示列”按钮时，表头需要获取本地或远程保存数据\r\n      if (this.showQueryFilter) {\r\n        let remoteQuerys;\r\n        //服务端保存\r\n        if (ajaxFilterQuery && ajaxFilterSave) {\r\n          try {\r\n            let res = await this.ajaxGetShowFilterData(2);\r\n            remoteQuerys = res;\r\n            console.log('remote-querys', remoteQuerys);\r\n          } catch (error) {\r\n            remoteQuerys = [];\r\n          }\r\n        } else {\r\n          remoteQuerys = this.getLocalFilterData(2);\r\n          console.log('local-querys', remoteQuerys);\r\n        }\r\n        this.dealColumnsHeader(formItems, remoteQuerys); //使用服务端数据覆盖本地数据\r\n      }\r\n      //对header做默认赋值处理\r\n      formItems = formItems.map(headItem => {\r\n        //初始需要赋值字段，否则页面无法根据字段响应\r\n        headItem.required = headItem.required || false;\r\n        headItem.hidden = headItem.hidden || false;\r\n\r\n        // 下拉选择默认启用清除按钮功能\r\n        if (headItem.type === 'select') {\r\n          let clearable = headItem.attrs && headItem.attrs.clearable;\r\n          clearable = clearable === undefined ? true : clearable;\r\n          if (!headItem.attrs) headItem.attrs = {};\r\n          headItem.attrs.clearable = clearable;\r\n        }\r\n        return headItem;\r\n      });\r\n      this.computedFormItems = formItems;\r\n    },\r\n    //header二次封装，处理分页返回数据\r\n    async dealHeaders() {\r\n      let headers = this.headers;\r\n      let { ajaxFilterQuery, ajaxFilterSave } = this.sysConfig;\r\n      //需要“显示列”按钮时，表头需要获取本地或远程保存数据\r\n      if (this.showColumn) {\r\n        let remoteHeaders;\r\n        //服务端保存\r\n        if (ajaxFilterQuery && ajaxFilterSave) {\r\n          try {\r\n            let res = await this.ajaxGetShowFilterData();\r\n            remoteHeaders = res;\r\n            console.log('remote-headers', remoteHeaders);\r\n          } catch (error) {\r\n            remoteHeaders = [];\r\n          }\r\n        } else {\r\n          remoteHeaders = this.getLocalFilterData();\r\n          console.log('local-headers', remoteHeaders);\r\n        }\r\n        this.dealColumnsHeader(headers, remoteHeaders); //使用服务端数据覆盖本地数据\r\n      }\r\n      //对header做默认赋值处理\r\n      this.computedHeaders = headers.map(headItem => {\r\n        //初始需要赋值字段，否则页面无法根据字段响应\r\n        headItem.required = headItem.required || false;\r\n        headItem.hidden = headItem.hidden || false;\r\n        headItem.resizable = headItem.resizable || false;\r\n        let fun = headItem.index;\r\n        //序号类型，补充分页信息返回\r\n        if (headItem.type == 'index' && typeof fun == 'function') {\r\n          headItem.index = index =>\r\n            fun(index, this.pageParams.page, this.pageParams.limit);\r\n          // console.log(headItem.index);\r\n        }\r\n        // 处理空数据显示横杠\r\n        let formatter = headItem.formatter;\r\n        if (typeof formatter === 'function') {\r\n          headItem.formatter = (...args) => {\r\n            let res = formatter.apply(null, args);\r\n            return formatterEmptyData(res);\r\n          };\r\n        } else {\r\n          headItem.formatter = (row, col, value) => formatterEmptyData(value);\r\n        }\r\n        return headItem;\r\n      });\r\n    },\r\n    // 初始化配置，从全局取配置\r\n    initConfig() {\r\n      let config = getConfig();\r\n      let { system, ajaxFilterSave, ajaxFilterQuery } = this.$props;\r\n      this.sysConfig.system = system !== undefined ? system : config.system;\r\n      this.sysConfig.ajaxFilterSave =\r\n        ajaxFilterSave !== undefined ? ajaxFilterSave : config.ajaxFilterSave;\r\n      this.sysConfig.ajaxFilterQuery =\r\n        ajaxFilterQuery !== undefined\r\n          ? ajaxFilterQuery\r\n          : config.ajaxFilterQuery;\r\n    },\r\n    /**\r\n     * 获取保存列或筛选项的key\r\n     * @param {Number} type 1=表头列信息  2=筛选项信息\r\n     */\r\n    getSaveKey(type) {\r\n      return type == 1 ? this.computedSaveColumnKey : this.computedSaveQueryKey;\r\n    },\r\n    /**\r\n     * 保存本地列/筛选项数据\r\n     * @param {Array} saveData 需要保存的表头列/筛选项数据\r\n     * @param {Number} type 1=需要保存的表头列/2=筛选项数据\r\n     * @returns {Promise} 返回promise对象\r\n     */\r\n    saveLocalFilterData(saveData, type = 1) {\r\n      let key = this.getSaveKey(type);\r\n      return new Promise((resolve, reject) => {\r\n        try {\r\n          localStorage.setItem(key, JSON.stringify(saveData));\r\n          resolve();\r\n        } catch (error) {\r\n          Message({\r\n            message: error.name + ':' + error.message,\r\n            type: 'warning',\r\n            duration: 5 * 1000\r\n          });\r\n          reject();\r\n        }\r\n      });\r\n    },\r\n    /**\r\n     * 获取本地列数据\r\n     * @param {Number} type 1=需要保存的表头列/2=筛选项数据\r\n     */\r\n    getLocalFilterData(type = 1) {\r\n      let key = this.getSaveKey(type);\r\n      let result;\r\n      try {\r\n        result = JSON.parse(localStorage.getItem(key)) || [];\r\n      } catch (error) {\r\n        result = [];\r\n      }\r\n      return result;\r\n    },\r\n    /**\r\n     * 获取查询参数\r\n     */\r\n    getQueryParam() {\r\n      return {\r\n        ...this.ajaxPageParams,\r\n        ...this.formData,\r\n        ...this.sortParams\r\n      };\r\n    },\r\n    /**\r\n     * 统一处理表头数据，服务端数据覆盖本地数据（数据以本地为准，本地不存在的列不作处理）\r\n     * @param {Array} localList 本地初始的表头数据\r\n     * @param {Array} remoteList 服务端配置的表头数据\r\n     */\r\n    dealColumnsHeader(localList, remoteList) {\r\n      // console.time('dealColumnsHeader-time');\r\n      let tempRemoteList = JSON.parse(JSON.stringify(remoteList)); //拷贝远程数据\r\n      for (let i = 0, len = localList.length; i < len; i++) {\r\n        let localItem = localList[i];\r\n        let localProp = localItem.prop;\r\n        //数据关键key不存在，此数据项不做处理\r\n        if (!localProp) {\r\n          continue;\r\n        }\r\n        for (let j = 0; j < tempRemoteList.length; j++) {\r\n          let remoteItem = tempRemoteList[j];\r\n          let remoteProp = remoteItem.prop;\r\n          //数据key一致，覆盖本地数据，并在拷贝数据中移除此项，不做重复循环\r\n          if (remoteProp == localProp) {\r\n            Object.assign(localItem, remoteItem, {\r\n              required: localItem.required,\r\n              label: localItem.label //优先使用本地名称\r\n            });\r\n            tempRemoteList.splice(j, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // console.timeEnd('dealColumnsHeader-time');\r\n    },\r\n    /**\r\n     * 页码切换\r\n     * @param {Number} curr 当前页卡索引\r\n     */\r\n    // onPgCurrentChange(curr) {\r\n    //   console.log(curr);\r\n    //   this.pageParams.page = curr;\r\n    // },\r\n    //每页展示数量切换\r\n    onPgSizeChange(size) {\r\n      this.pageParams.limit = size;\r\n    },\r\n    /**\r\n     * 表单查询\r\n     */\r\n    onQueryForm() {\r\n      this.$emit('query-form');\r\n      let { page } = this.pageParams;\r\n      page === 1 ? this.ajaxGetTableDataByPage() : (this.pageParams.page = 1);\r\n    },\r\n    /**\r\n     * 表单重置\r\n     */\r\n    onResetForm() {\r\n      this.formData = { ...this.initialFormData };\r\n      this.$refs.cDynamicForm && this.$refs.cDynamicForm.init();\r\n      this.$emit('reset-form');\r\n    },\r\n    //过滤筛选条件\r\n    async onFilterQueryCondition() {\r\n      let { ajaxFilterSave, ajaxFilterQuery } = this.sysConfig;\r\n      let checkFilterPlugin = (await CFilterCheckPanel()).default;\r\n      //调用显示列插件\r\n      checkFilterPlugin.show({\r\n        data: this.formItems, //源数据 checkbox集合\r\n        //点击提交时调用的接口\r\n        ajaxFun:\r\n          ajaxFilterSave && ajaxFilterQuery\r\n            ? params => this.ajaxSaveFilterData(params, 2) //本地缓存\r\n            : params => this.saveLocalFilterData(params, 2), //接口保存\r\n        successMsg: this.saveSuccessMsg,\r\n        errorMsg: this.saveErrorMsg\r\n      });\r\n    },\r\n    //监听选择变化\r\n    onSelectionChange(rows) {\r\n      this.selectRows = rows;\r\n    },\r\n    //监听排序变化\r\n    onSortChange({ order, prop }) {\r\n      this.sortParams = {\r\n        order: order == 'ascending' ? 'asc' : 'desc',\r\n        sort: prop\r\n      };\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    //刷新table\r\n    onRefreshTable() {\r\n      this.ajaxGetTableDataByPage();\r\n    },\r\n    //显示列\r\n    async onChangeColumn() {\r\n      let { ajaxFilterSave, ajaxFilterQuery } = this.sysConfig;\r\n      let checkFilterPlugin = (await CFilterCheckPanel()).default;\r\n      //调用显示列插件\r\n      checkFilterPlugin.show({\r\n        title: '自定义显示列',\r\n        data: this.headers, //源数据 checkbox集合\r\n        //点击提交时调用的接口\r\n        ajaxFun:\r\n          ajaxFilterSave && ajaxFilterQuery\r\n            ? this.ajaxSaveFilterData //本地缓存\r\n            : this.saveLocalFilterData, //接口保存\r\n        successMsg: this.saveSuccessMsg,\r\n        errorMsg: this.saveErrorMsg\r\n      });\r\n    },\r\n    /**\r\n     * 是否显示按钮\r\n     * @param {*} btn 修改列表\r\n     */\r\n    isHiddenButton(btn) {\r\n      let { hidden } = btn;\r\n      if (typeof hidden === 'function') return hidden(btn);\r\n      return hidden;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.toolbars {\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.el-button + .el-dropdown,\r\n.el-dropdown + .el-button {\r\n  margin-left: 10px;\r\n}\r\n.el-pagination-slot {\r\n  color: @normal-txt;\r\n  font-weight: normal;\r\n  margin-right: -54px;\r\n  background: #fff;\r\n  display: inline-block;\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/business/BTable"}]}